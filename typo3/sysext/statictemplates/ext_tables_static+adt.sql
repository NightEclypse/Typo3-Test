# TYPO3 Extension Manager dump 1.1
#
# Host: localhost    Database: TEMP_testsite3
#--------------------------------------------------------


#
# Table structure for table "static_template"
#
DROP TABLE IF EXISTS static_template;
CREATE TABLE static_template (
  uid int(11) unsigned NOT NULL auto_increment,
  pid int(11) unsigned DEFAULT '0' NOT NULL,
  tstamp int(11) unsigned DEFAULT '0' NOT NULL,
  crdate int(11) unsigned DEFAULT '0' NOT NULL,
  title varchar(255) DEFAULT '' NOT NULL,
  include_static tinyblob NOT NULL,
  constants blob NOT NULL,
  config blob NOT NULL,
  description text NOT NULL,
  PRIMARY KEY (uid),
  KEY parent (pid)
);


INSERT INTO static_template VALUES ('7', '0', '1054752613', '938564296', 'frameset; top-left-page', '', '  # cat=basic/dims; type=small; label=Top Frame: The height of the topframe\r\ntopFrameHeight = 150\r\n  # cat=basic/dims; type=small; label=Left Frame: The width of the left frame\r\nleftFrameWidth = 150\r\n', 'frameset = PAGE\r\npage = PAGE\r\nleft = PAGE\r\ntop = PAGE\r\nframeset.typeNum = 0\r\npage.typeNum = 1\r\nleft.typeNum = 2\r\ntop.typeNum = 3\r\n\r\nframeset.frameSet.rows = {$topFrameHeight},*\r\nframeset.frameSet.params = {$_stdFramesetParams}\r\nframeset.frameSet.1 = FRAME\r\nframeset.frameSet.1.obj = top\r\nframeset.frameSet.1.params = {$_stdFrameParams} scrolling="no"\r\nframeset.frameSet.2 = FRAMESET\r\nframeset.frameSet.2 {\r\n  params = {$_stdFramesetParams}\r\n  cols = {$leftFrameWidth},*\r\n  1 = FRAME\r\n  1.obj = left\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = page\r\n  2.params = {$_stdFrameParams} scrolling="auto"\r\n}\r\n', '');
INSERT INTO static_template VALUES ('13', '0', '1054752637', '941993948', 'frameset; top-page', '', '  # cat=basic/dims; type=small; label=Top Frame: The height of the topframe\r\ntopFrameHeight = 150', 'frameset = PAGE\r\npage = PAGE\r\ntop = PAGE\r\nframeset.typeNum = 0\r\npage.typeNum = 1\r\ntop.typeNum = 3\r\n\r\nframeset.frameSet.rows = {$topFrameHeight},*\r\nframeset.frameSet.params = {$_stdFramesetParams}\r\nframeset.frameSet {\r\n  1 = FRAME\r\n  1.obj = top\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = page\r\n  2.params = {$_stdFrameParams} scrolling="auto"\r\n}\r\n', '');
INSERT INTO static_template VALUES ('17', '0', '1054752662', '941996666', 'frameset; top-page-right', '', '  # cat=basic/dims; type=small; label=Top Frame: The height of the topframe\r\ntopFrameHeight = 150\r\n  # cat=basic/dims; type=small; label=Page Frame: The width of the pageframe \r\npageFrameWidth = 450\r\n', 'frameset = PAGE\r\npage = PAGE\r\nright = PAGE\r\ntop = PAGE\r\nframeset.typeNum = 0\r\npage.typeNum = 1\r\nright.typeNum = 2\r\ntop.typeNum = 3\r\n\r\nframeset.frameSet.rows = {$topFrameHeight},*\r\nframeset.frameSet.params = {$_stdFramesetParams}\r\nframeset.frameSet.1 = FRAME\r\nframeset.frameSet.1.obj = top\r\nframeset.frameSet.1.params = {$_stdFrameParams} scrolling="no"\r\nframeset.frameSet.2 = FRAMESET\r\nframeset.frameSet.2 {\r\n  params = {$_stdFramesetParams}\r\n  cols = {$pageFrameWidth},*\r\n  1 = FRAME\r\n  1.obj = page\r\n  1.params = {$_stdFrameParams} scrolling="auto"\r\n  2 = FRAME\r\n  2.obj = right\r\n  2.params = {$_stdFrameParams} scrolling="no"\r\n}\r\n', '');
INSERT INTO static_template VALUES ('19', '0', '1054752589', '942004100', 'frameset; top / left-page', '', '  # cat=basic/dims; type=small; label=Top Frame: The height of the topframe\r\ntopFrameHeight = 150\r\n  # cat=basic/dims; type=small; label=Left Frame: The width of the left frame\r\nleftFrameWidth = 150\r\n', 'frameset = PAGE\r\nframeset2 = PAGE\r\npage = PAGE\r\nleft = PAGE\r\ntop = PAGE\r\nframeset.typeNum = 0\r\nframeset2.typeNum = 4\r\npage.typeNum = 1\r\nleft.typeNum = 2\r\ntop.typeNum = 3\r\n\r\nframeset.frameSet {\r\n  rows = {$topFrameHeight},*\r\n  params = {$_stdFramesetParams}\r\n  1 = FRAME\r\n  1.obj = top\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = frameset2\r\n  2.params = {$_stdFrameParams} scrolling="no"\r\n}\r\n\r\nframeset2.frameSet  {\r\n  params = {$_stdFramesetParams}\r\n  cols = {$leftFrameWidth},*\r\n  1 = FRAME\r\n  1.obj = left\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = page\r\n  2.params = {$_stdFrameParams} scrolling="auto"\r\n}\r\n', '');
INSERT INTO static_template VALUES ('23', '0', '1054752536', '942090884', 'frameset; left-page', '', '  # cat=basic/dims; type=small; label=Left Frame: The width of the left frame\r\nleftFrameWidth = 150\r\n', 'frameset = PAGE\r\npage = PAGE\r\nleft = PAGE\r\nframeset.typeNum = 0\r\npage.typeNum = 1\r\nleft.typeNum = 2\r\n\r\nframeset.frameSet {\r\n  params = {$_stdFramesetParams}\r\n  cols = {$leftFrameWidth},*\r\n  1 = FRAME\r\n  1.obj = left\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = page\r\n  2.params = {$_stdFrameParams} scrolling="auto"\r\n}\r\n', '');
INSERT INTO static_template VALUES ('24', '0', '1054752517', '942101940', 'frameset (+); top / left-adr-page', '19', '  # cat=basic/dims; type=small; label=Top Frame: The height of the topframe\r\ntopFrameHeight = 150\r\n  # cat=basic/dims; type=small; label=Left Frame: The width of the left frame\r\nleftFrameWidth = 150\r\n  # cat=basic/dims; type=small; label="Address Frame": The height of the addressframe\r\nadrFrameHeight = 100\r\n', '# PLEASE NOTE, this is an extension to the \r\n# static template  "frameset; top / left-page"\r\n\r\n\r\nadr = PAGE\r\nadr.typeNum = 10\r\n\r\nframeset2.frameSet.cols = {$leftFrameWidth},*\r\nframeset2.frameSet.params = {$_stdFramesetParams}\r\nframeset2.frameSet.1 = FRAMESET\r\nframeset2.frameSet.1 {\r\n  params = {$_stdFramesetParams}\r\n  rows = *,{$adrFrameHeight}\r\n  1 = FRAME\r\n  1.obj = left\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n  2 = FRAME\r\n  2.obj = adr\r\n  2.params = {$_stdFrameParams} scrolling="no"\r\n}\r\nframeset2.frameSet.2 = FRAME\r\nframeset2.frameSet.2.obj = page\r\nframeset2.frameSet.2.params = {$_stdFrameParams} scrolling="auto" \r\n\r\n\r\n', 'PLEASE NOTE, this is an extension to the static template  "frameset; top / left-page"');
INSERT INTO static_template VALUES ('27', '0', '1054752559', '942108726', 'frameset; page-bottom', '', '  # cat=basic/dims; type=small; label=Bottom Frame: The height of the bottom frame\r\nbottomFrameHeight = 65\r\n', 'frameset = PAGE\r\npage = PAGE\r\nbottom = PAGE\r\nframeset.typeNum = 0\r\npage.typeNum = 1\r\nbottom.typeNum = 3\r\n\r\nframeset.frameSet.rows = *,{$bottomFrameHeight}\r\nframeset.frameSet.params = {$_stdFramesetParams}\r\nframeset.frameSet {\r\n  1 = FRAME\r\n  1.obj = page\r\n  1.params = {$_stdFrameParams} scrolling="auto"\r\n  2 = FRAME\r\n  2.obj = bottom\r\n  2.params = {$_stdFrameParams} scrolling="no"\r\n}\r\n\r\n', '');
INSERT INTO static_template VALUES ('49', '0', '1054753725', '956910541', 'template; FIRST', '50,43,68', 'frame {\r\n    # cat=basic/dims; type=int+; label=Frame, "page" width: Enter the width of the frame with the page content (name="page"). This also applies to the "top" and "bottom" frame\r\n  pageW = 700\r\n    # cat=basic/dims; type=int+; label=Frame, "page+top" height: Enter the total height of the "page" and "top" frames\r\n  pageH = 380\r\n    # cat=basic/dims; type=int+; label=Frame, "top" height: Enter the height of the "top" frame (menu)\r\n  menuH = 70\r\n    # cat=basic/dims; type=int+; label=Frame, "bottom" height: Enter the height of the "bottom" frame\r\n  bottomH = 20\r\n}\r\n\r\n\r\n// This is backGround colors defined:\r\n  # cat=basic/color/a; type=color; label=Background color, page frame: Background color of the page in the right frame.\r\nbgCol = white\r\nbgCol {\r\n    # cat=basic/color/b; type=color; label=Background color, outer frames: Background color of the blank pages in the outer frames that surround the content and menu frames in the center.\r\n  outer = #62748e\r\n    # cat=basic/color/b; type=color; label=Background color, bottom frame: Background color of the bottom frame with the special menu.\r\n  bottom = #7b8ca5\r\n    # cat=basic/color/b; type=color; label=Background color, top frame: Background color of the top frame with the main menu and site logo.\r\n  top = #7b8ca5\r\n}\r\n\r\n\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\nfile {\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Logo image, top frame: Logo image above the menu in the top frame.\r\n  toplogo = \r\n   # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, page frame\r\n  bgImg_page = \r\n   # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, top frame\r\n  bgImg_top = \r\n   # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, bottom frame\r\n  bgImg_bottom = \r\n   # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, outer frames\r\n  bgImg_outer = \r\n}\r\n\r\n  # cat=basic/color; type=color; label=Top frame, line color: Color of the separator line between the level-1 and level-2 menu in the top frame.\r\nsepLineColor = black\r\n  # cat=basic/dims; type=int[1-1000]; label=Top frame, left margin: The distance in pixels from left edge to the menu and logo image in the top frame. 2-3 pixels are added for the table-borders.\r\nleftMarginTop = 20\r\n\r\nrightCol {\r\n    #cat=right/enable; type=options[getNews,getBorder]; label=Column content: Choose "getNews" to select content from a specific page (defined below here) or "getBorder" to display the "Border"-content of the current page.\r\n  borderContent = getNews\r\n    #cat=right/dims; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume. NOTE: This is specific for the right column!\r\n  maxImageWidth = 150\r\n    #cat=right/typo; type=small; label=Bodytext font face\r\n  textStyle_face =\r\n    #cat=right/typo; type=int[1-5]; label=Bodytext font size\r\n  textStyle_size =\r\n    #cat=right/typo; type=small; label=Bodytext font color\r\n  textStyle_color =\r\n    #cat=right/typo; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType =\r\n}\r\n\r\n// PID\'s...\r\n  # cat=right/enable/z2; type=int+; label=News Content PID: If you selected "getNews" above, this is where you enter the page-id of the page from which to fetch the "news" content for the column.\r\nstyles.content.getNews.newsPid = \r\n\r\n  # cat=basic//a; type=int+; label=Bottom menu PID: Enter the page-id of the page that holds the pages, that should appear as a menu in the bottom frame\r\nbottomMenuPid = \r\n\r\n  # cat=basic/dims/a; type=int+; label=Width, main content: Width of the main content on the page.\r\nwidth.content = 400\r\n  # cat=basic,right/dims/a; type=int+; label=Width, border content: Width of the border content cell to the right on the page. NOTE: This option also appears in the category RIGHT, that specifically deals with the characteristics of the border-frame to the right on the page.\r\nwidth.rightCol = 160\r\n  # cat=basic/dims/a; type=int+; label=Width, gap: The gap is the distance between the main- and border-content in the page frame.\r\nwidth.gap = 105\r\n\r\n\r\nstyles.content.imgtext.maxW = 400\r\n\r\nPAGE_TARGET = page\r\ncontent.pageFrameObj = page\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "FIRST"\r\n  description = FIRST is a frame-based template where the menu, bottom and pageframe is encasulated in another frameset that centers the page in the browser. // The menus are graphical and in two levels with a separate general menu in the bottom-frame. You can also define content for the second column to the right on the page. \r\n  bulletlist = Image in the top. (9) // 2-level graphical menu: Select TrueType-font, color, size, optional bullet, letter-spacing. (14) // 1-level graphical menu for general pages: Select TrueType-font, color, size, optional bullet, letter-spacing. (14) // Frameset: Select background-color and dimensions of the page-frame, bottom-frame and topframe. (11,12,13) // Optional static column with news from a page, you define. (2)\r\n  image = gfx/FIRST_basic.gif\r\n  1=width.content,styles.content.imgtext.maxW\r\n  2=width.rightCol\r\n  3=width.gap\r\n  4=frame.pageW\r\n  5=frame.pageH\r\n  6=frame.menuH\r\n  7=frame.bottomH\r\n  8=leftMarginTop\r\n  9=file.toplogo\r\n  10=bgCol,file.bgImg_page\r\n  11=bgCol.outer,file.bgImg_outer\r\n  12=bgCol.bottom,file.bgImg_bottom\r\n  13=bgCol.top,file.bgImg_top\r\n  14=sepLineColor\r\n  15=bottomMenuPid\r\n}\r\n\r\n\r\n', '# ****************************\r\n# Definition of the menus\r\n# ****************************\r\n\r\ntemp.topMenu = HMENU\r\ntemp.topMenu {\r\n  1 < styles.gmenu.first\r\n  1.target = frameset2\r\n}\r\n\r\ntemp.topSubmenu = HMENU\r\ntemp.topSubmenu {\r\n  entryLevel = 1\r\n  1 < styles.gmenu.first\r\n  1.target = page\r\n}\r\n\r\ntemp.bottomSubmenu = HMENU\r\ntemp.bottomSubmenu {\r\n  special = directory\r\n  special.value = {$bottomMenuPid}\r\n  1 < styles.gmenu.first\r\n  1.target = page\r\n}\r\n\r\n\r\n# ****************************\r\n# Definition of the framesets\r\n# ****************************\r\n\r\nframeset = PAGE\r\nframeset2 = PAGE\r\npage = PAGE\r\nbottom = PAGE\r\ntop = PAGE\r\nback = PAGE\r\n\r\nframeset.typeNum = 0\r\nframeset2.typeNum = 5\r\npage.typeNum = 1\r\nbottom.typeNum = 2\r\ntop.typeNum = 3\r\nback.typeNum = 4\r\n\r\nframeset.frameSet.cols = *,{$frame.pageW},*\r\nframeset.frameSet.params = {$_stdFramesetParams}\r\nframeset.frameSet.1 = FRAME\r\nframeset.frameSet.1.obj = back\r\nframeset.frameSet.1.params = {$_stdFrameParams} scrolling="no"\r\nframeset.frameSet.3 < frameset.frameSet.1\r\nframeset.frameSet.2 = FRAMESET\r\nframeset.frameSet.2 {\r\n  params = {$_stdFramesetParams}\r\n  rows = *,{$frame.pageH},{$frame.bottomH},*\r\n  1 = FRAME\r\n  1.obj = back\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n\r\n  2 = FRAME\r\n  2.obj = frameset2\r\n  2.params = {$_stdFrameParams} scrolling="no"\r\n  \r\n  3 = FRAME\r\n  3.obj = bottom\r\n  3.params = {$_stdFrameParams} scrolling="no"\r\n\r\n  4 < .1\r\n}\r\n\r\nframeset2.frameSet {\r\n  params = {$_stdFramesetParams}\r\n  rows = {$frame.menuH},*\r\n\r\n  1 = FRAME\r\n  1.obj = top\r\n  1.params = {$_stdFrameParams} scrolling="no"\r\n\r\n  2 = FRAME\r\n  2.obj = page\r\n  2.params = {$_stdFrameParams} scrolling="auto" \r\n}\r\n\r\n\r\n# ****************************\r\n# Definition of the pages\r\n# ****************************\r\n\r\nback.bodyTag = <body bgcolor="{$bgCol.outer}">\r\nback.bgImg = {$file.bgImg_outer}\r\n\r\n\r\ntop.bodyTag = <body bgcolor="{$bgCol.top}">\r\ntop.bodyTagMargins = 0\r\ntop.bgImg = {$file.bgImg_top}\r\ntop {\r\n  wrap = <table border="0" cellspacing="2" cellpadding="0"> | </table>\r\n  10 = IMAGE\r\n  10.file = {$file.toplogo}\r\n  10.wrap = <tr><td><img src="clear.gif" width="{$leftMarginTop}" height="1" alt="" /></td><td>|</td></tr>\r\n  20 < temp.topMenu\r\n  20.wrap = <tr><td></td><td>|</td></tr>\r\n  30 = TEXT\r\n  30.value = <tr><td></td><td bgcolor="{$sepLineColor}">{$_clear}</td></tr>\r\n  40 < temp.topSubmenu\r\n  40.wrap = <tr><td></td><td>|</td></tr>\r\n}\r\n\r\n\r\nbottom.bodyTag = <body bgcolor="{$bgCol.bottom}">\r\nbottom.bodyTagMargins = 0\r\nbottom.bgImg = {$file.bgImg_bottom}\r\nbottom {\r\n  wrap = <div align="right"><table border="0" cellspacing="2" cellpadding="0" align="right"> | </table></div>\r\n  40 < temp.bottomSubmenu\r\n  40.wrap = <tr><td></td><td>|</td></tr>\r\n}\r\n\r\npage.bodyTag < styles.content.bodyTag\r\npage.bodyTagMargins = 0\r\npage.bgImg = {$file.bgImg_page}\r\npage.10 = CTABLE\r\npage.10 {\r\n  offset = 20,20\r\n  tableParams = border="0" cellspacing="0" cellpadding="0" width="400"\r\n  cWidth = {$width.content}\r\n  cMargins = 0,0,{$width.gap},0\r\n  c.5 < styles.content.editPanelPage\r\n  c.10 < styles.insertContent\r\n  c.20  < styles.content.lastUpdate\r\n  c.30  < styles.content.typo3_powered\r\n  c.TDParams = valign="top"\r\n\r\n  rm.9 = LOAD_REGISTER\r\n  rm.9.maxImageWidth = {$rightCol.maxImageWidth}\r\n  rm.9.textStyle_face = {$rightCol.textStyle_face}\r\n  rm.9.textStyle_size = {$rightCol.textStyle_size}\r\n  rm.9.textStyle_color = {$rightCol.textStyle_color}\r\n  rm.9.defaultHeaderType = {$rightCol.defaultHeaderType}\r\n\r\n  rm.10 < styles.content.{$rightCol.borderContent}\r\n  rm.20 = CLEARGIF\r\n  rm.20.width={$width.rightCol}\r\n  rm.30 = RESTORE_REGISTER\r\n  rm.TDParams = valign="top"\r\n}\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\nframeset.headerData.999 < plugin.meta\r\n\r\n\r\n', 'Standard-template\r\n\r\nPage-centeret Frames-based template with a logoimage in the top connected to a 2-level graphical menu below. \r\nContent is in two columns.');
INSERT INTO static_template VALUES ('40', '0', '1054753285', '955295691', 'styles.gmenu.bug', '', 'styles.gmenu.bug >\r\nstyles.gmenu.bug {\r\n  pageFrameObj = page\r\n  menuFrameObj = left\r\n\r\n    # cat=menu/color; type=color; label=Menu background color\r\n  bgCol = #cccccc\r\n\r\n    # cat=menu/dims; type=int+; label=Height of menu items (pixels)\r\n  itemH = 20\r\n    # cat=menu/dims; type=int+; label=Width of menu items/menu (pixels)\r\n  itemW = 180\r\n    # cat=menu/dims; type=int+; label=Lenght of total menu: Enter the total lenght of the menu (pixels). This should be the same as the height of any background image under the total menu. (See styles.gmenu.bug.bgImg !)\r\n  length = 300\r\n\r\n    # cat=menu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu.\r\n  file.fontFile = \r\n    # cat=menu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 15\r\n    # cat=menu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = white\r\n    # cat=menu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  fontOffset = 20,15\r\n    # cat=menu/typo; type=options[,upper,lower]; label=Text case: You can force the text on the menu items to be either lowercase or uppercase.\r\n  case =\r\n\r\n    # cat=menu/typo; type=boolean[SHADOW]; label=Drop Shadow: Click this option if you want a drop shadow from the text on the menu items.\r\n  shadow = \r\n    # cat=menu/typo; type=int[1-100]; label=Drop Shadow opacity: If you enabled the Drop Shadow, you can adjust the opacity of the shadow to make it more or less dominant.\r\n  shadow.opacity = 100\r\n\r\n    # cat=menu/typo; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 0\r\n    # cat=menu/typo; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor =\r\n\r\n\r\n    # cat=menu/file/n_bgimg; type=boolean[IMAGE]; label=Background image: By enabling this option, you can choose a background image for the whole menu. The image will expand downwards over the background of all the items!\r\n  bgImg = \r\n    # cat=menu/file/n_bgimg; type=file[IMAGE_EXT]; label=Background image, file: Choose the background image. NOTE: You should probably set the value of ".length" to the height in pixels of this image!\r\n  bgImg.file.image = \r\n    # cat=menu/file/n_bgimg; type=file[IMAGE_EXT]; label=Background image, mask: Choose an optional mask for the background image. By this mask, the background image is "superimposed" onto the background color of the menu. White areas make the image visible, dark areas hide the image.\r\n  bgImg.file.mask = \r\n\r\n\r\n\r\n    # cat=menu/file/o_impose; type=boolean[IMAGE]; label=Color impose: You can impose a color through a mask on every single menu item. The color is imposed underneath the text but on top of the background image, if any.\r\n  maskImg = \r\n    # cat=menu/file/o_impose; type=color; label=Color impose, color: Enter the color\r\n  maskImg.imposeCol = #165D89\r\n    # cat=menu/file/o_impose; type=file[IMAGE_EXT]; label=Color impose, mask: Grayscale imagefile to mask the color through. White areas make the color visible, dark areas hide the color\r\n  maskImg.file.mask = \r\n\r\n\r\n    # cat=menu/file/p_rimpose; type=boolean[IMAGE]; label=Rollover, impose: You can impose a color through a mask on every single rollover menu item, if you like. The color is imposed just underneath the text. NOTE: You must select the rollover-option in the Typography-section!\r\n  RO.imposeImg = IMAGE\r\n    # cat=menu/file/p_rimpose; type=color; label=Rollover, impose color: In addition to changing the color of the text on the menu item, you can also impose a color through a mask. You could use this to make a line or box appear on the menu item when the mouse cursor moves over it.\r\n  RO.imposeCol = white\r\n    # cat=menu/file/p_rimpose; type=file[IMAGE_EXT]; label=Rollover, mask: Grayscale imagefile to mask the impose color through. White areas make the color visible, dark areas hide the color.\r\n  RO.file.mask = \r\n\r\n\r\n\r\n    # cat=menu//a; type=wrap; label=Wrap, menu items: This HTML-code is wrapped around every item in the menu. Normally you would use a <br />-tag here.\r\n  itemWrap = | <br />\r\n\r\n    # cat=menu//x; type=int[0-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 16\r\n\r\n}\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.menu {\r\n  header = styles.gmenu.bug\r\n  description = This graphical menu is powerful in many aspects. Especially because you can put a background image in the menu which will expand over all the items. See the image below.\r\n  bulletlist = Background image for the whole menu (4) // Dropshadow on Truetype font page titles (5) // Rollover (mouseover) color (6) // You can use grayscale masks to mask (impose) a color onto the menu item. Use this to generate geometric icons and alike on the items. (7)\r\n  image = gfx/BUG_menu.gif\r\n  1=styles.gmenu.bug.itemH\r\n  2=styles.gmenu.bug.itemW\r\n  3=styles.gmenu.bug.length\r\n  4=styles.gmenu.bug.bgImg\r\n  5=styles.gmenu.bug.shadow,styles.gmenu.bug.file.fontFile,styles.gmenu.bug.fontSize,styles.gmenu.bug.fontColor,styles.gmenu.bug.fontOffset,styles.gmenu.bug.case\r\n  6=styles.gmenu.bug.RO,styles.gmenu.bug.RO.fontColor\r\n  7=styles.gmenu.bug.RO.imposeImg\r\n}\r\n\r\n', 'styles.gmenu.bug >\r\nstyles.gmenu.bug = HMENU\r\nstyles.gmenu.bug {\r\n  1 = GMENU\r\n  1.target = {$styles.gmenu.bug.pageFrameObj}\r\n  1.applyTotalH = 10\r\n  1.removeObjectsOfDummy = 20,23\r\n  1.min = ,{$styles.gmenu.bug.length}\r\n  1.max = ,{$styles.gmenu.bug.length}\r\n  1.NO {\r\n    wrap = {$styles.gmenu.bug.itemWrap}\r\n    XY = {$styles.gmenu.bug.itemW},{$styles.gmenu.bug.itemH}\r\n    backColor = {$styles.gmenu.bug.bgCol}\r\n    reduceColors={$styles.gmenu.bug.reduceColors}\r\n\r\n    10 = {$styles.gmenu.bug.bgImg}\r\n    10.file = {$styles.gmenu.bug.bgImg.file.image}\r\n    10.mask = {$styles.gmenu.bug.bgImg.file.mask}\r\n\r\n    20 = {$styles.gmenu.bug.maskImg}\r\n    20.file = GIFBUILDER\r\n    20.file {\r\n      XY = {$styles.gmenu.bug.itemW},{$styles.gmenu.bug.length}\r\n      backColor = {$styles.gmenu.bug.maskImg.imposeCol}\r\n    }\r\n    20.mask = {$styles.gmenu.bug.maskImg.file.mask}\r\n\r\n    25 = {$styles.gmenu.bug.shadow}\r\n    25 {\r\n      textObjNum = 30\r\n      offset = 1,1\r\n      color = black\r\n      blur = 60\r\n      opacity = {$styles.gmenu.bug.shadow.opacity}\r\n    }\r\n\r\n    30 = TEXT\r\n    30.text.field = nav_title // title\r\n    30.text.case = {$styles.gmenu.bug.case}\r\n    30.offset = {$styles.gmenu.bug.fontOffset}\r\n    30.fontFile = {$styles.gmenu.bug.file.fontFile}\r\n    30.fontSize = {$styles.gmenu.bug.fontSize}\r\n    30.fontColor = {$styles.gmenu.bug.fontColor}\r\n    30.niceText = 1.5\r\n  }\r\n  1.RO < .1.NO\r\n  1.RO = {$styles.gmenu.bug.RO}\r\n  1.RO {\r\n    23 = {$styles.gmenu.bug.RO.imposeImg}\r\n    23.file = GIFBUILDER\r\n    23.file {\r\n      XY = {$styles.gmenu.bug.itemW},{$styles.gmenu.bug.itemH}\r\n      backColor = {$styles.gmenu.bug.RO.imposeCol}\r\n    }\r\n    23.mask = {$styles.gmenu.bug.RO.file.mask}\r\n    30.fontColor = {$styles.gmenu.bug.RO.fontColor}\r\n  }\r\n}\r\n', 'Graphical menu, one level.\r\n\r\nFeatures a background image expanding over all items plus rollover fontcolor and normal + rollover color overlay.\r\n\r\nUsed with template BUG');
INSERT INTO static_template VALUES ('41', '0', '1054753583', '955297796', 'template: BUG', '7,51,40,43,68', '  # cat=basic/color/a; type=color; label=Background color, all frames: This is the background color of all frames.\r\nbgCol = #eeeeff\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\n\r\ntop {\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top frame image: This image is put into the top frame of the site. The images is linked to the frontpage by default.\r\n  file.image =\r\n    # cat=basic/file/t; type=string; label=Top frame image, parameters: This is <img>-tag parameters for the top frame image. "width", "height" and "src" is already inserted, any others may be entered here.\r\n  imgParams = hspace="5" vspace="5"\r\n}\r\n\r\n  # cat=basic; type=comment; label=Text menu, page frame: Click this option to enable the text-based menu in the top of the page frame.\r\ncomment_textMenu = \r\n\r\n\r\n// Dimensions\r\ntopFrameHeight = 107\r\nleftFrameWidth = 200\r\nstyles.content.imgtext.maxW = 400\r\n\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table where the content is displayed in the page-frame\r\ncontentWidth = 400\r\n\r\n// Targets\r\nstyles.tmenu.pagetop.target = page\r\nPAGE_TARGET = page\r\ncontent.pageFrameObj = page\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "BUG"\r\n  description = BUG is a frame-based template. There are 3 frames; a topframe, leftframe (menu) and a page-frame. You can define an image for the topframe and setup the layout of the menu in the leftframe. //The menu lets you define a background-image and rollover-effects. \r\n  bulletlist = Topframe image // Leftframe graphical menu of gif-images: Select TrueType-font, color, size, shadow-opacity, offset. Optional backgroundimage of the menuitems. Optional mouseover-effekt with changed font-color and/or image-overlay (like an arrow).  //  Define size and background-color of the 3 frames, top, left and page. \r\n  image = gfx/BUG_basic.gif\r\n  1=topFrameHeight,bgCol\r\n  2=leftFrameWidth,bgCol\r\n  3=contentWidth,bgCol,styles.content.imgtext.maxW\r\n  4=top.file.image,top.imgParams\r\n  5=comment_textMenu\r\n}\r\n\r\n', '# Top frame is defined. Content is an image.\r\n\r\ntop.bodyTag = <body bgcolor="{$bgCol}">\r\ntop.10 = IMAGE\r\ntop.10.linkWrap = <a href="index.php?{0}" target="_top"> | </a>\r\ntop.10.params = {$top.imgParams}\r\ntop.10.file = {$top.file.image}\r\n\r\n\r\n# Left frame is defined. Content is a menu\r\n\r\nleft.bodyTag = <body bgcolor="{$bgCol}">\r\nleft.10 < styles.gmenu.bug\r\n\r\n\r\n# Page frame is defined. Content is a menu\r\n\r\npage.bodyTag < styles.content.bodyTag\r\npage.noLinkUnderline = 0\r\npage.bodyTagMargins = 0\r\n\r\npage.10 = CTABLE\r\npage.10 {\r\n  offset = 5, 0\r\n  tableParams = border="0" width="{$contentWidth}"\r\n  cWidth={$contentWidth}\r\n  c.5 < styles.content.editPanelPage\r\n  c.10 < styles.insertContent\r\n  c.20 < styles.content.lastUpdate\r\n  c.30 < styles.content.typo3_powered\r\n\r\n\r\n{$comment_textMenu}  tm.10 < styles.tmenu.pagetop\r\n{$comment_textMenu}  tm.TDParams = valign="top"\r\n}\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\nframeset.headerData.999 < plugin.meta\r\n\r\n', 'Standard-template\r\n\r\nThis template is a frame-based template with a graphical menu (1 level) to the left. \r\nIn the topframe you can place a picture/logo.\r\nContent may be displayed in one column in the page-frame. \r\n\r\n"styles.gmenu.bug": menu in the left frame\r\n');
INSERT INTO static_template VALUES ('51', '0', '1054753538', '958662553', 'styles.tmenu.pagetop', '', 'styles.tmenu.pagetop >\r\nstyles.tmenu.pagetop {\r\n    # cat=menu-2; type=int[0-5]; label=Advanced, entry level: This number defines which level in the pagetree is reflected as the first level in the menu. When this number is 1 (one), the menu will display pages on the second level in the pagetree.\r\n  entryLevel = 1\r\n    # cat=menu-2/typo; type=wrap; label=Wrap, items: This HTML-code is wrapped around every single menu item.\r\n  fontWrap =\r\n    # cat=menu-2/typo; type=wrap; label=Wrap, active items: This HTML-code is wrapped around the "active" menu item, if any.\r\n  ACT.fontWrap =\r\n    # cat=menu-2/; type=wrap; label=Wrap, whole menu: This HTML-code is finally wrapped around all the elements (the whole menu)\r\n  wrap =\r\n    # cat=menu-2/links; type=small; label=Target: Enter the link target for the menu. If your site is using frames, "page" would probably be correct. If not, leave blank (or "_top")\r\n  target = \r\n}\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.menu-2 {\r\n  header = styles.tmenu.pagetop\r\n  description = This is a little, simple menu of text-links. It\'s designed to be included in the top of pages thus working as a level-2 menu.\r\n  image = gfx/BUG_menu2.gif\r\n  1=styles.tmenu.pagetop.fontWrap\r\n  2=styles.tmenu.pagetop.ACT.fontWrap\r\n}\r\n\r\n', 'styles.tmenu.pagetop >\r\nstyles.tmenu.pagetop = HMENU\r\nstyles.tmenu.pagetop.stdWrap.required = 1\r\nstyles.tmenu.pagetop.stdWrap.wrap = {$styles.tmenu.pagetop.wrap}\r\nstyles.tmenu.pagetop.entryLevel = {$styles.tmenu.pagetop.entryLevel}\r\nstyles.tmenu.pagetop.1 = TMENU\r\nstyles.tmenu.pagetop.1 {\r\n  target = {$styles.tmenu.pagetop.target}\r\n  NO.afterImg = EXT:statictemplates/media/bullets/dots2.gif |*||*| _\r\n  NO.afterImgTagParams = hspace="4"\r\n  NO.linkWrap = {$styles.tmenu.pagetop.fontWrap}\r\n  NO.ATagBeforeWrap = 1\r\n\r\n  ACT < .NO\r\n  ACT = 1\r\n  ACT.linkWrap = {$styles.tmenu.pagetop.ACT.fontWrap}\r\n}\r\n\r\n', 'Textmenu\r\n\r\nThis is a simple horizontal level-2 textmenu that\'s used in the top of pages.\r\n\r\nUsed with template BUG (in pageframe)');
INSERT INTO static_template VALUES ('42', '0', '1054753473', '955318074', 'styles.img.logo', '', 'styles.img.logo >\r\nstyles.img.logo {\r\n    # cat=logo/dims; type=int[1-1000]; label=Pixeldimensions, X: Pixeldimensions of topframe image (pixels)\r\n  X = 625\r\n    # cat=logo/dims; type=int[1-300]; label=Pixeldimensions, Y: Pixeldimensions of topframe image (pixels)\r\n  Y = 92\r\n\r\n    # cat=logo/color; type=color; label=Image background color\r\n  bgCol = #CBB99C\r\n    # cat=logo/color; type=color; label=Logo color\r\n  logoCol = #165D89\r\n    # cat=logo/color; type=color; label=Image border color: Color of the image-border\r\n  boxColor = black\r\n\r\n    # cat=logo/dims; type=int[0-20]; label=Thickness of border\r\n  boxThickness = 2\r\n\r\n    # cat=logo/dims; type=offset; label=Logo offset: Offset of logo from upper-left corner of the image.\r\n  logoOffset = 10,5\r\n\r\n    # cat=logo; type=options[gif,jpg]; label=Image file format\r\n  format = gif\r\n\r\n    # cat=logo/file; type=file[IMAGE_EXT]; label=Imagefile\r\n  file.image = EXT:statictemplates/media/uploads/topimage.jpg\r\n    # cat=logo/file; type=file[IMAGE_EXT]; label=Imagefile Mask; Grayscale mask used to mask the Imagefile onto the colored background of the image. White areas make the image visible, dark areas hide the image.\r\n  file.mask = EXT:statictemplates/media/uploads/topmask.jpg\r\n    # cat=logo/file; type=file[IMAGE_EXT]; label=Imagefile, Logo mask: Grayscale mask used to impose the logo-colors onto the image. NOTE: The mask is inverted here!: DARK areas make the color visible, WHITE areas hide the color.\r\n  file.logo = EXT:statictemplates/media/uploads/toplogo.jpg\r\n}\r\n\r\n\r\n', 'styles.img.logo >\r\nstyles.img.logo = GIFBUILDER\r\nstyles.img.logo {\r\n  XY = {$styles.img.logo.X},{$styles.img.logo.Y}\r\n  format = {$styles.img.logo.format}\r\n  quality = 85\r\n  reduceColors = 65\r\n  backColor = {$styles.img.logo.bgCol}\r\n  10 = IMAGE\r\n  10.file = {$styles.img.logo.file.image}\r\n  10.mask = {$styles.img.logo.file.mask}\r\n\r\n  20 = IMAGE\r\n  20.file = GIFBUILDER\r\n  20.file {\r\n    XY = {$styles.img.logo.X},{$styles.img.logo.Y}\r\n    backColor = {$styles.img.logo.logoCol}\r\n  }\r\n  20.mask = GIFBUILDER\r\n  20.mask {\r\n    XY = {$styles.img.logo.X},{$styles.img.logo.Y}\r\n    backColor = white\r\n    10 = IMAGE\r\n    10.file = {$styles.img.logo.file.logo}\r\n    10.offset = {$styles.img.logo.logoOffset}\r\n    20 = EFFECT\r\n    20.value = invert\r\n  }\r\n\r\n  100 = BOX\r\n  100.dimensions = 0,0,{$styles.img.logo.X},{$styles.img.logo.boxThickness}\r\n  100.color = {$styles.img.logo.boxColor}\r\n  110 < .100\r\n  110.align = ,b \r\n \r\n  120 = BOX\r\n  120.dimensions = 0,0,{$styles.img.logo.boxThickness},{$styles.img.logo.Y}\r\n  120.color = {$styles.img.logo.boxColor}\r\n  130 < .120\r\n  130.align = r\r\n}\r\n\r\n\r\n\r\n\r\n', 'imgResource (using GIFBUILDER)\r\nThe images has a background color onto which "image" is overlayed through "mask". On top of this some color is masked by "logo"\r\n');
INSERT INTO static_template VALUES ('43', '0', '1071668142', '955393897', 'content (default)', '45,46,44', '  # cat=advanced/enable; type=boolean; label=Render content RTE compliant?: When this is set, the content will be rendered with each line wrapped in <p>-tags regardless of using stylesheets or not. This is necessary in order to make the content compliant with the Rich Text Editors align-ment functions.\r\ncontent.RTE_compliant = 1\r\ncontent.RTE_compliant.mode = fontwrap\r\n\r\ncontent {\r\n    # cat=content/cHeader/h0; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType = 1\r\n    # cat=content/cHeader/a; type=wrap; label=Header wrap: This is the wrap around the headers regardless of individual wraps.\r\n  wrap.header = |<br />\r\n    # cat=content/cHeader/h1; type=wrap; label=Header "Layout1" \r\n  wrap.header1 = <font face="verdana" size="3"><b> | </b></font>\r\n    # cat=content/cHeader/h2; type=wrap; label=Header "Layout2"\r\n  wrap.header2 = <font face="verdana" size="2" color="red"><b> | </b></font>\r\n    # cat=content/cHeader/h3; type=wrap; label=Header "Layout3"\r\n  wrap.header3 = <font face="verdana" size="4"><b> | </b></font>\r\n    # cat=content/cHeader/h4; type=wrap; label=Header "Layout4"\r\n  wrap.header4 = <font face="verdana" size="5"><b> | </b></font>\r\n\r\n  case.header1 = \r\n  case.header2 = \r\n\r\n  wrap2.header1 = \r\n  wrap2.header2 = \r\n  wrap2.header3 = \r\n\r\n    # cat=content/cHeader/x; type=wrap; label=Headerdate: The optional date shown above the header\r\n  wrap.headerDate = <font face="verdana" size="1">|:</font><br />\r\n\r\n    # cat=content/cHeader/s0; type=int[1-3]; label=Default Subheader type: Enter the number of the subheader layout to be used by default.\r\n  defaultSubHeaderType = 3\r\n    # cat=content/cHeader/s1; type=wrap; label=Subheader "Layout 1"\r\n  wrap.subheader1 = <font face="verdana" size="2"> | </font>\r\n    # cat=content/cHeader/s2; type=wrap; label=Subheader "Layout 2"\r\n  wrap.subheader2 = <font face="verdana" size="1"><b> | </b></font>\r\n    # cat=content/cHeader/s3; type=wrap; label=Subheader "Layout 3"\r\n  wrap.subheader3 = <font face="verdana" size="1" color="navy"><b> | </b></font>\r\n\r\n    # cat=content/cBullets; type=; label=Bulletlist "Layout 2"\r\n  bulletImages.2 = <img src="EXT:statictemplates/media/bullets/mark.gif" vspace="2" hspace="2" border="0" alt="" />\r\n    # cat=content/cBullets; type=; label=Bulletlist "Layout 3"\r\n  bulletImages.3 = <img src="EXT:statictemplates/media/bullets/bullet1_n.gif" vspace="2" hspace="2" border="0" alt="" />\r\n\r\n  headerSpace = 0|5\r\n  space = 0|10\r\n\r\n    # cat=content/cText/b; type=wrap; label=Bodytext wrap: This is the wrap around the whole bodytext part of a content element\r\n  wrap.bodytext = |<br />\r\n    # cat=content/cText/a; type=small; label=Bodytext linebreak: This is the tag used for linebreaks at the end of every paragraph in the bodytext.\r\n  break.bodytext = <br />\r\n    # An alternative body text linebreak code, because this will substitue nl-chars ONLY in the plain bodytext whereas the above will substituted it in all content including the returned content from any typo-tags.\r\n  break.bodytext_parseFunc = \r\n\r\n    # cat=content/cTable; type=color; label=Tables Cellcolor: The color of the tablecells of ordinary tables\r\n  tableCellColor = silver\r\n  tableCellWrap = \r\n    # cat=content/cSplash; type=color; label="Textbox" Background color: This is the background color of the graphical elements in the "Textbox" content element. Normally set this to the color of the page background\r\n  splash.bgCol = white\r\n    # cat=content/cMenu; type=wrap; label="Menu" content element: Elementwrap for the items in the content element type "Menu"\r\n  menuWrap = <b> | </b>\r\n    # cat=content/cMenu; type=wrap; label="Menu" content element, sub: Elementwrap for the subitems in the content element type "Menu". Used by the links to page-sections.\r\n  subMenuWrap = <b> | </b>\r\n  menuAllWrap = <b> | </b><br />\r\n  menuATagBeforeWrap = 1\r\n\r\n    # cat=content/language; type=; label="To top" Link: HTML-code used to create a link to the top of the page, if that is enabled for a content element\r\n  linkToTop = <a href="#top">To top</a><br />\r\n\r\n    # cat=advanced/links; type=small; label=Pageframe object: The name of the "contentframe". Normally set to "page" if the site has a frameset. Otherwise it should be an empty value. This is important, as it determines the target of internal links!\r\n  pageFrameObj = page\r\n\r\n  shortcut.tables = tt_content,tt_address,tt_links,tt_guest,tt_board,tt_calender,tt_products,tt_news,tt_rating,tt_poll\r\n}\r\n\r\n\r\n', '#\r\n# Object preserved from unsetting after template parsing\r\n# These are meant for referencing\r\n#\r\n\r\nlib.stdheader = COA\r\nlib.stdheader {\r\n  stdWrap.wrapAlign.field = header_position\r\n  stdWrap.typolink.parameter.field = header_link\r\n  stdWrap.fieldRequired = header\r\n  stdWrap.editIcons = tt_content : header, [header_layout | header_position], [header_link|date]\r\n  stdWrap.editIcons.beforeLastTag=1\r\n  stdWrap.editIcons.iconTitle=Edit header\r\n\r\n  stdWrap.if {\r\n    equals.field = header_layout\r\n    value = 100\r\n    negate = 1\r\n  }\r\n\r\n  5 = TEXT\r\n  5.field = date\r\n  5.if.isTrue.field = date\r\n  5.date = d/m Y\r\n  5.wrap = {$content.wrap.headerDate}\r\n  \r\n  10 = CASE\r\n  10.setCurrent {\r\n    field = header\r\n    parseFunc < styles.content.parseFunc\r\n    parseFunc.if.value = 5\r\n    parseFunc.if.equals {\r\n      field = header_layout\r\n      ifEmpty = {$content.defaultHeaderType}\r\n      ifEmpty.override.data = register: defaultHeaderType\r\n    }\r\n    parseFunc.if.negate = 1\r\n  }\r\n  10.key.field = header_layout\r\n  10.key.ifEmpty = {$content.defaultHeaderType}\r\n  10.key.ifEmpty.override.data = register: defaultHeaderType\r\n  10.stdWrap.wrap = {$content.wrap.header}\r\n\r\n  10.1 = TEXT\r\n  10.1.current = 1\r\n  10.1.fontTag = {$content.wrap.header1}\r\n  10.1.case = {$content.case.header1}\r\n  10.1.wrap2 = {$content.wrap2.header1}\r\n\r\n  10.2 = TEXT\r\n  10.2.current = 1\r\n  10.2.fontTag = {$content.wrap.header2}\r\n  10.2.case = {$content.case.header2}\r\n  10.2.wrap2 = {$content.wrap2.header2}\r\n\r\n  10.3 = TEXT\r\n  10.3.current = 1\r\n  10.3.fontTag = {$content.wrap.header3}\r\n  10.3.wrap2 = {$content.wrap2.header3}\r\n\r\n  10.4 = TEXT\r\n  10.4.current = 1\r\n  10.4.fontTag = {$content.wrap.header4}\r\n\r\n  10.5 < styles.header.gfx1\r\n\r\n  stdWrap.space = {$content.headerSpace}\r\n}\r\n\r\n# \r\n# Configuring of language for backwards compatibility\r\n# \r\n{$comment_DK} config.language = dk\r\n\r\n\r\n\r\n#\r\n# tt_content is started\r\n# \r\ntt_content >\r\ntt_content = CASE\r\ntt_content.stdWrap {\r\n  spaceBefore.field = spaceBefore\r\n  spaceAfter.field = spaceAfter\r\n  space = {$content.space}\r\n  innerWrap.cObject < styles.content.frames\r\n  innerWrap2 = | {$content.linkToTop}\r\n  innerWrap2.fieldRequired = linkToTop\r\n  dataWrap = <a id="c{field:uid}"></a>\r\n  editPanel = 1\r\n  editPanel {\r\n    allow = move,new,edit,hide,delete\r\n    line=5\r\n    label = %s\r\n    onlyCurrentPid = 1\r\n    previewBorder=4\r\n    edit.displayRecord = 1\r\n  }\r\n}\r\ntt_content.key.field = CType\r\n\r\n\r\n# CType: header\r\ntt_content.header = COA\r\ntt_content.header {\r\n  10 = < lib.stdheader\r\n  \r\n  20 = CASE\r\n  20.stdWrap.fieldRequired = subheader\r\n  20.stdWrap.parseFunc < styles.content.parseFunc\r\n  20.key.field = layout\r\n  20.stdWrap.wrap = | <br />\r\n  20.stdWrap.editIcons = tt_content:subheader,layout\r\n  20.stdWrap.editIcons.beforeLastTag=1\r\n  20.stdWrap.editIcons.iconTitle=Edit subheader\r\n\r\n  20.1 = TEXT\r\n  20.1.field = subheader\r\n  20.1.fontTag = {$content.wrap.subheader1}\r\n  20.2 = TEXT\r\n  20.2.field = subheader\r\n  20.2.fontTag = {$content.wrap.subheader2}\r\n  20.3 = TEXT\r\n  20.3.field = subheader\r\n  20.3.fontTag = {$content.wrap.subheader3}\r\n\r\n  20.default < .20.{$content.defaultSubHeaderType}\r\n}\r\n\r\n\r\n\r\n\r\n# CType: bullet\r\ntt_content.bullets = COA\r\ntt_content.bullets {\r\n  10 = < lib.stdheader\r\n  20 = CASE\r\n  20.setCurrent.field = bodytext\r\n  20.key.field = layout\r\n  20 {\r\n    default < styles.content.bulletlist_gr\r\n    1 < styles.content.bulletlist\r\n\r\n    2 < styles.content.bulletlist_gr\r\n    2.split.1.wrap = <tr><td valign="top">{$content.bulletImages.2}</td><td valign="top"> | </td></tr>\r\n\r\n    3 < styles.content.bulletlist_gr\r\n    3.split.1.wrap = <tr><td valign="top">{$content.bulletImages.3}</td><td valign="top"> | </td></tr>\r\n  }\r\n\r\n  20.stdWrap.editIcons = tt_content:layout, bodytext [text_align | text_face | text_size | text_color],[text_properties]\r\n  20.stdWrap.editIcons.beforeLastTag=1\r\n  20.stdWrap.editIcons.iconTitle=Edit bulletlist\r\n}\r\n\r\n\r\n\r\n\r\n# CType: table\r\ntt_content.table = COA\r\ntt_content.table {\r\n  10 = < lib.stdheader\r\n  20 = CASE\r\n  20.setCurrent.field = bodytext\r\n  20.key.field = layout\r\n  20 {\r\n    default < styles.content.table\r\n    1 < styles.content.table\r\n    1.split.1.split.1.wrap = <td valign="top" bgcolor="{$content.tableCellColor}">|</td>\r\n    1.split.1.split.1.innerWrap = {$content.tableCellWrap}\r\n    1.split.1.split.2.wrap = <td valign="top" bgcolor="{$content.tableCellColor}">|</td>\r\n    1.split.1.split.2.innerWrap = {$content.tableCellWrap}\r\n\r\n    2 < styles.content.table\r\n    2.split.1.split.1.wrap = <td valign="top" bgcolor="{$content.tableCellColor}">|</td>\r\n    2.split.1.split.1.innerWrap = {$content.tableCellWrap}\r\n    2.split.2.split.1.wrap = <td valign="top" bgcolor="{$content.tableCellColor}">|</td>\r\n    2.split.2.split.1.innerWrap = {$content.tableCellWrap}\r\n\r\n    3 < .1\r\n    3.split.2.split.1.wrap = <td valign="top" bgcolor="{$content.tableCellColor}">|</td>\r\n    3.split.2.split.1.innerWrap = {$content.tableCellWrap}\r\n  }\r\n\r\n  20.stdWrap.editIcons = tt_content:layout [cols|table_bgColor|table_border|table_cellspacing|table_cellpadding], bodytext [text_align | text_face | text_size | text_color],[text_properties]\r\n  20.stdWrap.editIcons.beforeLastTag=1\r\n  20.stdWrap.editIcons.iconTitle=Edit table\r\n}\r\n\r\n\r\n\r\n# CType: text\r\ntt_content.text = COA\r\ntt_content.text {\r\n  10 = < lib.stdheader\r\n  20 = TEXT\r\n  20 {\r\n#debugFunc = 2\r\n    fieldRequired = bodytext\r\n    wrap = {$content.wrap.bodytext}\r\n    brTag = {$content.break.bodytext}\r\n    field = bodytext\r\n    textStyle < styles.content.textStyle\r\n    parseFunc < styles.content.parseFunc\r\n    parseFunc.nonTypoTagStdWrap.brTag = {$content.break.bodytext_parseFunc}\r\n    editIcons = tt_content:bodytext [text_align | text_face | text_size | text_color],[text_properties], rte_enabled\r\n    editIcons.beforeLastTag=1\r\n    editIcons.iconTitle=Edit bodytext\r\n  }\r\n  20.parseFunc.tags {\r\n    typolist < tt_content.bullets.20\r\n    typolist.stripNL = 1\r\n    typolist {\r\n        // Overriding values:\r\n      key.field >\r\n      key.data = parameters : type\r\n      setCurrent >\r\n      stdWrap.if.isTrue.current = 1\r\n    }\r\n    typohead < lib.stdheader\r\n    typohead.stripNL = 1\r\n    typohead {\r\n      stdWrap.wrapAlign.field >\r\n      stdWrap.wrapAlign.data = parameters : align\r\n      stdWrap.typolink.parameter.field >\r\n      stdWrap.typolink.parameter.data = parameters : link\r\n      stdWrap.fieldRequired >\r\n      stdWrap.if >\r\n      stdWrap.if.isTrue.current = 1\r\n      stdWrap.wrap = <br /> |\r\n      stdWrap.editIcons >\r\n      10.key.field >\r\n      10.key.data = parameters : type\r\n      10.setCurrent.field >\r\n      10.setCurrent.current = 1\r\n    }\r\n    typocode = TEXT\r\n    typocode.current = 1\r\n    typocode.htmlSpecialChars = 1\r\n    typocode.br = 1\r\n  }\r\n}\r\n\r\n# Configures the content for compliancy with the RTE\r\n[globalVar=LIT:0<{$content.RTE_compliant}]\r\n  # Make sure nonTypoTagStdWrap operates on content outside <typolist> and <typohead> only:\r\n  tt_content.text.20.parseFunc.tags {\r\n    typolist.breakoutTypoTagContent = 1\r\n    typohead.breakoutTypoTagContent = 1\r\n    typohead.stdWrap.wrap >\r\n  }\r\n\r\n  # Processing <table> and <blockquote> blocks separately\r\n  tt_content.text.20.parseFunc.externalBlocks = table, blockquote\r\n  tt_content.text.20.parseFunc.externalBlocks {\r\n      # The blockquote content is passed into parseFunc again...\r\n    blockquote.callRecursive=1\r\n    blockquote.callRecursive.tagStdWrap.HTMLparser = 1\r\n    blockquote.callRecursive.tagStdWrap.HTMLparser.tags.blockquote.overrideAttribs = style="margin-bottom:0;margin-top:0;"\r\n    blockquote.stripNL=1\r\n    table.stripNL=1\r\n    table.HTMLtableCells=1\r\n    table.HTMLtableCells {\r\n      default.callRecursive=1\r\n      addChr10BetweenParagraphs=1\r\n    }\r\n  }\r\n\r\n    # Setting up nonTypoTagStdWrap to wrap the text with P-tags\r\n  tt_content.text.20.parseFunc.nonTypoTagStdWrap >\r\n  tt_content.text.20.parseFunc.nonTypoTagStdWrap.encapsLines < styles.content.RTE_encaps_{$content.RTE_compliant.mode}\r\n\r\n    # finally removing the old textstyle formatting on the whole bodytext part.\r\n  tt_content.text.20.textStyle >\r\n  tt_content.text.20.wrap >\r\n  tt_content.text.20.brTag >\r\n[global]\r\n\r\n\r\n\r\n# CType: image\r\ntt_content.image = COA\r\ntt_content.image {\r\n  10 = < lib.stdheader\r\n  20  < styles.content.imgtext\r\n}\r\n\r\n\r\n\r\n\r\n# CType: textpic\r\ntt_content.textpic = COA\r\ntt_content.textpic {\r\n  10 = COA  \r\n  10.if.value = 25\r\n  10.if.isLessThan.field = imageorient\r\n  10.10 = < lib.stdheader\r\n    \r\n  20  < styles.content.imgtext\r\n  20.text.10 = COA\r\n  20.text.10 {\r\n    if.value = 24\r\n    if.isGreaterThan.field = imageorient\r\n    10 = < lib.stdheader\r\n  }\r\n  20.text.20 = < tt_content.text.20\r\n}\r\n\r\n\r\n# CType: rte\r\ntt_content.rte = COA\r\ntt_content.rte {\r\n  10 = < lib.stdheader\r\n  20 = TEXT\r\n  20.field = bodytext\r\n\r\n  20.editIcons = tt_content:bodytext\r\n  20.editIcons.beforeLastTag=1\r\n  20.editIcons.iconTitle=Edit Rich Text content\r\n}\r\n\r\n\r\n# CType: uploads\r\ntt_content.uploads = COA\r\ntt_content.uploads {\r\n  10 = < lib.stdheader\r\n  20 = CASE\r\n  20 {\r\n    setCurrent.field = media\r\n    key.field = layout\r\n    default < styles.content.uploads\r\n    1 < styles.content.uploads_icons\r\n    2 < styles.content.uploads_imgicons\r\n    3 < styles.content.uploads_imgicons\r\n    3.split.1.filelink.icon.wrap >\r\n  }\r\n\r\n  20.stdWrap.editIcons = tt_content:media, layout [table_bgColor|table_border|table_cellspacing|table_cellpadding],filelink_size,imagecaption\r\n  20.stdWrap.editIcons.iconTitle=Edit filelist\r\n}\r\n\r\n\r\n\r\n\r\n# CType: menu\r\ntt_content.menu = COA\r\ntt_content.menu {\r\n  10 = < lib.stdheader\r\n  20 = CASE\r\n  20 {\r\n    key.field = menu_type\r\n\r\n    default = HMENU\r\n    default {\r\n      special = list\r\n      special.value.field = pages\r\n      1 = TMENU\r\n      1.NO.linkWrap =  {$content.menuWrap}\r\n      1.NO.allWrap = {$content.menuAllWrap}\r\n      1.NO.ATagBeforeWrap = {$content.menuATagBeforeWrap}\r\n      1.target = {$content.pageFrameObj}\r\n    }\r\n\r\n    1 < .default\r\n    1.special = directory\r\n\r\n    2 < styles.sitemap.text\r\n\r\n    3 < styles.insertContent\r\n    3.select.andWhere = sectionIndex<>0\r\n    3.select.pidInList.override.field = pages\r\n    3.renderObj = TEXT\r\n    3.renderObj {\r\n      fieldRequired = header\r\n      trim=1\r\n      field = header\r\n      wrap = {$content.menuWrap}\r\n      typolink.parameter.field = pid\r\n      typolink.section.field = uid\r\n      wrap2 = |<br />\r\n    }\r\n\r\n    4 < .1\r\n    4.1.NO {\r\n      after.data = field : abstract // field : description // field : subtitle\r\n      after.htmlSpecialChars = 1\r\n      afterWrap = <br />{$content.subMenuWrap}\r\n    }\r\n\r\n    5 < .default\r\n    5.special = updated\r\n    5.special {\r\n      maxAge = 3600*24*7\r\n      excludeNoSearchPages = 1\r\n    }\r\n\r\n    6 < .default\r\n    6.special = keywords\r\n    6.special {\r\n      excludeNoSearchPages = 1\r\n    }\r\n\r\n    7 < .1\r\n    7.1.expAll = 1\r\n    7.1.wrap = |<br />\r\n    7.2 < .7.1\r\n    7.2.sectionIndex = 1\r\n    7.2.sectionIndex.type = header\r\n    7.2.NO.linkWrap =  {$content.subMenuWrap}\r\n  }\r\n\r\n  20.stdWrap.editIcons = tt_content: menu_type,pages\r\n  20.stdWrap.editIcons.iconTitle=Edit linkmenu\r\n}\r\n\r\n\r\n\r\n\r\n# CType: shortcut\r\ntt_content.shortcut = COA\r\ntt_content.shortcut {\r\n#  10 = < lib.stdheader\r\n  20 = CASE\r\n  20.key.field = layout\r\n  20.0= RECORDS\r\n  20.0 {\r\n    source.field = records\r\n    tables = {$content.shortcut.tables}\r\n  }\r\n  20.1= RECORDS\r\n  20.1 {\r\n    source.field = records\r\n    tables = {$content.shortcut.tables}\r\n  }\r\n\r\n  20.stdWrap.editIcons = tt_content: records\r\n  20.stdWrap.editIcons.iconTitle=Edit recordlist\r\n}\r\n\r\n\r\n\r\n\r\n# CType: list\r\n# The keys for the CASE-cObject is supplied by including static_templates which is configured to fill out these positions. Examples are "content.tt_products" and "content.tt_calendar"\r\ntt_content.list = COA\r\ntt_content.list.10 = < lib.stdheader\r\ntt_content.list.20 = CASE\r\ntt_content.list.20.key.field = list_type\r\ntt_content.list {\r\n  20.stdWrap.editIcons = tt_content: list_type, layout, select_key, pages [recursive]\r\n  20.stdWrap.editIcons.iconTitle=Edit recordlist\r\n}\r\n\r\n\r\n# CType: multimedia\r\ntt_content.multimedia = COA\r\ntt_content.multimedia {\r\n  10 = < lib.stdheader\r\n  20 = MULTIMEDIA\r\n  20.file.field = multimedia\r\n  20.file.wrap = uploads/media/\r\n  20.file.listNum = 0\r\n  20.params.field = bodytext\r\n}\r\n\r\n\r\n\r\n\r\n# CType: splash\r\ntt_content.splash = CASE\r\ntt_content.splash.key.field = splash_layout\r\n\r\ntt_content.splash.default = COA\r\ntt_content.splash.default {\r\n  20 = CTABLE\r\n  20 {\r\n    c.1 = < tt_content.text\r\n    lm.1 = IMAGE\r\n    lm.1.file {\r\n      import = uploads/pics/\r\n      import.field = image\r\n      import.listNum = 0\r\n      maxW.field = imagewidth\r\n      maxW.ifEmpty = 200\r\n    }\r\n    cMargins = 30,0,0,0\r\n  }\r\n}\r\ntt_content.splash.1 < tt_content.splash.default\r\ntt_content.splash.1.20.lm.1.file >\r\ntt_content.splash.1.20.lm.1.file = GIFBUILDER\r\ntt_content.splash.1.20.lm.1.file {\r\n  XY = [10.w]+10,[10.h]+10\r\n  backColor = {$content.splash.bgCol}\r\n  backColor.override.data = register:pageColor\r\n  format = jpg\r\n  5 = BOX\r\n  5.dimensions = 3,3,[10.w],[10.h]\r\n  5.color = #333333\r\n  7 = EFFECT\r\n  7.value = blur=99|blur=99|blur=99|blur=99|blur=99|blur=99|blur=99\r\n  10 = IMAGE\r\n  10.file {\r\n    import = uploads/pics/\r\n    import.field = image\r\n    import.listNum = 0\r\n    maxW.field = imagewidth\r\n    maxW.ifEmpty = 200\r\n  }\r\n}\r\ntt_content.splash.2 < tt_content.splash.default\r\ntt_content.splash.2.20.lm.1.file.m < styles.content.imgFrames.1\r\ntt_content.splash.3 < tt_content.splash.default\r\ntt_content.splash.3.20.lm.1.file.m < styles.content.imgFrames.2\r\n  // From plugin.postit1, if included:\r\ntt_content.splash.20 = < plugin.postit1\r\n\r\n# CType: mailform\r\ntt_content.mailform = COA\r\ntt_content.mailform {\r\n  10 = < lib.stdheader\r\n  20 < styles.content.mailform\r\n\r\n  20.stdWrap.editIcons = tt_content: bodytext,pages,subheader\r\n  20.stdWrap.editIcons.iconTitle=Edit multimedia element\r\n}\r\n\r\n\r\n\r\n\r\n# CType: search\r\ntt_content.search = COA\r\ntt_content.search {\r\n  10 = < lib.stdheader\r\n  20 < styles.content.searchresult\r\n  30 < styles.content.searchform\r\n\r\n  30.stdWrap.editIcons = tt_content: pages\r\n  30.stdWrap.editIcons.iconTitle=Edit search element\r\n}\r\n\r\n\r\n\r\n\r\n# CType: login\r\ntt_content.login = COA\r\ntt_content.login {\r\n  10 = < lib.stdheader\r\n  20 < styles.content.loginform\r\n\r\n  20.stdWrap.editIcons = tt_content: pages\r\n  20.stdWrap.editIcons.iconTitle=Edit login element\r\n}\r\n\r\n\r\n\r\n\r\n# CType: html\r\ntt_content.html = TEXT\r\ntt_content.html.field = bodytext\r\ntt_content.html.editIcons = tt_content: pages\r\ntt_content.html.editIcons.iconTitle=Edit pure HTML content\r\n\r\n# CType: script\r\ntt_content.script = TEXT\r\ntt_content.script.value =\r\n\r\n# CType: script\r\ntt_content.div = TEXT\r\ntt_content.div.value =\r\n\r\n# Default error msg:\r\ntt_content.default = TEXT\r\ntt_content.default.field = CType\r\ntt_content.default.wrap = <b>CTYPE "|" not defined! </b>\r\n\r\n\r\n', 'Content-rendering:\r\n\r\nContains configuration for default content-rendering for the table "tt_content"\r\nIs included by the standard-templates. \r\nNotice this template includes other static templates, especially "styles.content (default)"\r\n\r\nStatus:\r\nChanged 28-06-2000', '\r\n# Setting up the CSS Editor\r\nCSS_editor = Template Styles\r\nCSS_editor.ch {\r\n  BODY = General\r\n  BODY.selector = BODY\r\n  BODY.attribs = font-family, background-color\r\n  BODY.example = Plan text outside of any tags written in the page-body.\r\n\r\n  A = Links\r\n  A.selector = A\r\n  A.attribs = LINKS,font-weight\r\n  A.example = This is <A href="#">a link to</A> the page top.\r\n  A.exampleStop=1\r\n  A.ch {\r\n	hover = Mouseover links\r\n	hover.selector = + :hover\r\n	hover.attribs = LINKS\r\n\r\n	active = Active links\r\n	active.selector = + :active\r\n	active.attribs = LINKS\r\n\r\n	visited = Visited links\r\n	visited.selector = + :visited\r\n	visited.attribs = LINKS\r\n  }\r\n  \r\n  content = < tt_content.CSS_editor\r\n}\r\ntt_content.CSS_editor = General content\r\ntt_content.CSS_editor {\r\n	title.dk = Generelt Indhold\r\n}');
INSERT INTO static_template VALUES ('44', '0', '1054753381', '955394546', 'styles.header.gfx1', '', 'styles.header.gfx1 >\r\nstyles.header.gfx1 {\r\n    # cat=content/cHeader_g/h5; type=color; label=Header "Layout5", Backgr. color: Color of the background of the header-items. This should be the same as the page background color.\r\n  bgCol = white\r\n\r\n    # cat=content/cHeader_g/h5; type=file[ttf]; label=Header "Layout5", Font file: TrueType (ttf) font\r\n  file.fontFile = \r\n    # cat=content/cHeader_g/h5; type=int[1-40]; label=Header "Layout5", Font size: Font size of the TrueType font\r\n  fontSize = 20\r\n    # cat=content/cHeader_g/h5; type=color; label=Header "Layout5", Font color: Font color of the TrueType font\r\n  fontColor = black\r\n    # cat=content/cHeader_g/h5; type=offset; label=Header "Layout5", Font offset: Enter the offset of the text from the upper-left corner on the header items\r\n  fontOffset = 2,20\r\n    # cat=content/cHeader_g/h5; type=boolean; label=Header "Layout5", Nicetext: If the text is jagged on the edges, you may try to eliminate it with this option. But it will also slow down the rendering process.\r\n  niceText = \r\n\r\n    # cat=content/cHeader_g/h5; type=int[1-200]; label=Header "Layout5", height: Height (pixels) of the header-items\r\n  itemH = 30\r\n    # cat=content/cHeader_g/h5; type=int+; label=Header "Layout5", Max width: Maximum width (pixels) of the header-items. Use this to ensure that the headers will never get wider than your page design for the content allows. Use the same value as for "Max Image Width".\r\n  maxWidth = \r\n    # cat=content/cHeader_g/h5; type=int+; label=Header "Layout5", Max chars: Maximum number of text characters allowed in the header items. Use this as a way to limit the physical width of the headers. Similar in concept to ".maxWidth" \r\n  maxChars = 35\r\n\r\n    # cat=content/cHeader_g/h5; type=int[1-256]; label=Header "Layout5", Reduce colors: Number of indexed colors on header items. If your headers end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 16\r\n    # cat=content/cHeader_g/h5; type=wrap; label=Header "Layout5", Wrap: Wrap HTML-code for the header item\r\n  wrap = \r\n}\r\n\r\n', 'styles.header.gfx1 >\r\nstyles.header.gfx1 = IMAGE\r\nstyles.header.gfx1 {\r\n  wrap = {$styles.header.gfx1.wrap}\r\n  alttext.current = 1\r\n  file = GIFBUILDER\r\n  file {\r\n    XY = [10.w]+10 ,{$styles.header.gfx1.itemH}\r\n    maxWidth = {$styles.header.gfx1.maxWidth}\r\n    backColor = {$styles.header.gfx1.bgCol}\r\n    reduceColors = {$styles.header.gfx1.reduceColors}\r\n    10 = TEXT\r\n    10 {\r\n      text.current = 1\r\n      text.crop = {$styles.header.gfx1.maxChars}\r\n      fontSize = {$styles.header.gfx1.fontSize}\r\n      fontFile = {$styles.header.gfx1.file.fontFile}\r\n      fontColor = {$styles.header.gfx1.fontColor}\r\n      offset = {$styles.header.gfx1.fontOffset}\r\n      niceText = {$styles.header.gfx1.niceText}\r\n    }\r\n  }\r\n}\r\n', 'Header graphics.\r\n\r\nUsed as Header Layout 5 in the "content (default)" template');
INSERT INTO static_template VALUES ('45', '0', '1151518167', '955520868', 'styles.content (default)', '', '  # Clear out any constants in this reserved room!\r\nstyles.content >\r\n\r\n    # cat=advanced; type=int+; label= News Content PID: If your template has a column with "news"-content fetched from another page-id, this is where you enter the id-number of that page!\r\nstyles.content.getNews.newsPid = 0\r\n\r\nstyles.content.lastUpdate {\r\n  format = H:i d/m Y\r\n    # cat=page//lastupdate; type=; label= Label for "Last update": Last update is shown in the bottom of the page if the "Last update" date entry is set for the page record.\r\n  label = Last update:\r\n    # cat=page//lastupdate; type=wrap; label= Wrap for "Last update"\r\n  wrap = <br /><font size="1" face="arial,helvetica">|</font><br />\r\n    # cat=page//lastupdate; type=comment; label= Automatic "Last update": Click this option, if you want to automatically show "Last update" on the page.\r\n  comment_auto = #\r\n}\r\n\r\nstyles.content.typo3_powered {\r\n    #cat=advanced; type=options[,1,2]; label="TYPO3 Powered By" Logo: Select which - if any - TYPO3 logo will be displayed in the bottom of the page.\r\n  number = 2\r\n}\r\n\r\nstyles.content.textStyle {\r\n    # cat=content/cText/f1; type=small; label= Bodytext font\r\n  face = \r\n    # cat=content/cText/f2; type=int[1-5]; label= Bodytext size\r\n  size = \r\n    # cat=content/cText/f3; type=color; label= Bodytext color\r\n  color = \r\n  color1 =\r\n  color2 =\r\n  properties =\r\n    # cat=content/cText/f4; type=wrap; label= Alternative wrap: This could be used to wrap the bodytext in <div>-tags if you would like to use a stylesheet instead\r\n  altWrap =\r\n}\r\nstyles.content.tableStyle {\r\n    # cat=content/cTable; type=color; label= Tables background color\r\n  color = \r\n  color1 =\r\n  color2 =\r\n  alignField =\r\n}\r\nstyles.content {\r\n    # cat=content/cTable; type=wrap; label= Alternative wrap: This could be used to wrap the table content in <div>-tags if you would like to use a stylesheet instead\r\n  table.altWrap =\r\n    # cat=content/cBullets; type=wrap; label= Alternative wrap: This could be used to wrap the bullet list items in <div>-tags if you would like to use a stylesheet instead\r\n  bulletlist.altWrap =\r\n}\r\n\r\nstyles.content.links {\r\n  keep = path\r\n    # cat=content/links; type=small; label= Target for external links\r\n  extTarget = _blank\r\n  target = {$PAGE_TARGET}\r\n    # cat=content/links; type=wrap; label= Wrap for links in text\r\n  wrap = \r\n  allowTags = b,i,u,a,img,br,div,center,pre,font,hr,sub,sup,p,strong,em,li,ul,ol,blockquote,strike,span\r\n    # cat=content/cSearch; type=wrap; label= Searchwords markup: Wrap for markup of search-words in text upon a search.\r\n  sword = <font color="red"><b>|</b></font>\r\n}\r\nstyles.content.uploads {\r\n  # cat=content/cUploads; type=wrap; label= Wrap: Wrap for content element "Filelinks"\r\n  wrap = <b> | </b>\r\n  labelWrap = \r\n  sizeWrap = \r\n  tdWrap = <td> |</td>\r\n  # cat=content/cUploads; type=wrap; label= Wrap, description: Wrap for the description of content element "Filelinks". If this is NOT set, the description will not shown up.\r\n  descriptionWrap = \r\n  jumpurl_secure = \r\n  jumpurl_secure_mimeTypes = pdf=application/pdf, doc=application/msword\r\n  jumpurl = \r\n}\r\n\r\nstyles.content.frames {\r\n  ruler.lineColor = black\r\n  ruler.lineThickness = 1\r\n  ruler.before = 10\r\n  ruler.after = 10\r\n  padding = 10\r\n  indent = 30\r\n    # cat=content//; type=color; label= Frame 1 background color: Set the background color of the content element frame "frame1".\r\n  1.bgCol = silver\r\n    # cat=content//; type=color; label= Frame 2 background color: Set the background color of the content element frame "frame2".\r\n  2.bgCol = silver\r\n    # cat=content//; type=color; label= Frame 2 border color: Set the border color of the content element frame "frame2".\r\n  2.borderCol = black\r\n  2.borderThickness = 2\r\n\r\n  33_66cell = <td width="33%"><img src="clear.gif" width="1" height="1" alt="" /></td>\r\n}\r\nstyles.content.imgFrames {\r\n    # cat=advanced; type=color; label= Image Frame BgColor: Set the background color of the image frames. Should match the background of the page.\r\n  bgCol = white\r\n  bottomCol = black\r\n    # cat=advanced; type=options[darkroom,artist]; label= Image Frame Collection: Sets which framecollection is used to frame images.\r\n  frameCollection = darkroom\r\n    # cat=advanced; type=comment; label= Image Frame underlay: Set this flag to disable the black frame underlay.\r\n  comment_bottom =\r\n  path = EXT:statictemplates/media/frames/\r\n}\r\nstyles.content.imgtext {\r\n    # TIP! if register[maxImageWidth] is set, this will override maxW\r\n    # cat=content,basic/cImage/a_maxw1; type=int+; label= Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume.\r\n  maxW = 600\r\n    # cat=content/cImage/a_maxw2; type=int+; label= Max Image Width (Text): Same as above, but this is the maximum width when text is wrapped around an imageblock. Default is 50% of the normal Max Image Width\r\n  maxWInText =\r\n    # cat=content/cImage/b; type=color; label= Image border color: Bordercolor of images in content elements when "Border"-option for element is set.\r\n  borderColor = black\r\n    # cat=content/cImage/b; type=int[0-100]; label= Image border thickness: Thickness of border around images in content elements when "Border"-option for element is set.\r\n  borderThick = 2\r\n    # cat=content/cImage/x; type=int[0-100]; label= Advanced, Column space: Horizontal distance between images in a block in content elements of type "Image" or "Text w/Image".\r\n  colSpace = 10\r\n    # cat=content/cImage/x; type=int[0-100]; label= Advanced, Row space: Vertical distance between images in a block in content elements of type "Image" or "Text w/Image".\r\n  rowSpace = 10\r\n    # cat=content/cImage/x; type=int[0-100]; label= Advanced, Margin to text: Horizontal distance between an imageblock and text in content elements of type "Image" or "Text w/Image".\r\n  textMargin = 10\r\n  linkWrap.width = 800m\r\n  linkWrap.height = 600m\r\n  linkWrap.effects = \r\n    # cat=content/cImage/x; type=boolean; label= Advanced, New window: If set, every click-enlarged image will open in it\'s own popup window and not the current popup window (which may have a wrong size for the image to fit in)\r\n  linkWrap.newWindow = 0\r\n    # cat=content/cImage/c; type=wrap; label= Images, caption: Wrap around the caption of imageblocks.\r\n  captionWrap = <font face="verdana" size="1"><b> | </b></font>\r\n    # cat=content/cImage/c; type=boolean; label= Images, caption split: If this is checked, then the image caption will be split by each line and they will appear underneath the corresponding image in the imagelist.\r\n  captionSplit = 0\r\n  target = {$PAGE_TARGET}\r\n  comment_CSL-LinkList = #\r\n}\r\nstyles.content.mailform {\r\n  fieldWrap = \r\n  labelWrap =\r\n  commentWrap =\r\n  radioWrap = |<br />\r\n  REQ.labelWrap =\r\n  border = 5\r\n  target = {$PAGE_TARGET}\r\n    # cat=content/cMailform; type=; label= Message, Formmail OK: This is the message (if any) that is popped-up (JavaScript) when a user clicks "send" with an email-form\r\n  goodMess =\r\n    # cat=content/cMailform; type=; label= Message, Formmail Missing: This is the message that is popped-up when a user has NOT filled required fields in an email-form\r\n  badMess =\r\n  comment_type2 = #\r\n}\r\nstyles.content.loginform {\r\n  target = _top\r\n    # cat=content/cLogin; type=int+; label= PID of user archive: Enter the page-uid number (PID) of the folder where you keep your fe_users that are supposed to login on this site. This setting is necessary, if login is going to work!\r\n  pid = \r\n    # cat=content/cLogin; type=; label= Message, Login: This is the message (if any) that is popped-up when a user logs in as a front-end user\r\n  goodMess =\r\n}\r\nstyles.content.searchform {\r\n    # cat=content/cSearch; type=; label= Message, Searchform: This is the message (if any) that is popped-up when a user performs a search\r\n  goodMess =\r\n}\r\nstyles.content.columns {\r\n  totalWidth = \r\n  gapWidth = 10\r\n  gapLineThickness = 1\r\n}\r\nstyles.content.searchresult {\r\n  face = Verdana\r\n  size = 1\r\n  color = navy\r\n  head.face = Verdana\r\n  head.size = 2\r\n  head.color = black\r\n  target = {$PAGE_TARGET}\r\n  resultTarget = {$PAGE_TARGET}\r\n  header.wrap = <font face="verdana" size="2"><b> | </b></font>\r\n  header.bgCol = silver\r\n}\r\nstyles.content.meta {\r\n  # cat=page; type=; label= META-tag description: Enter a general description for the site. Will appear on all pages in addition to page-specific descriptions.\r\n  site_description =\r\n  # cat=page; type=; label= META-tag keywords: Enter general keywords for the site. Will appear on all pages in addition to page-specific keywords.\r\n  site_keywords =\r\n}\r\n\r\n  # cat=page/language; type=comment; label= DK language: Set this value to enable Danish labels on Form- and Search-objects. "" = Danish, "#" = (Default)\r\n  # cat=\r\ncomment_DK = #\r\n\r\n  # cat=advanced/links; type=small; label= Target for internal links: Should match the name of the content PAGE-object in TypoScript when used with frames. Most cases: Set to "page" if you have frames in the template. If not, set to "" (empty)\r\nPAGE_TARGET = page\r\n\r\n', '  # Clear out any constants in this reserved room!\r\nstyles.content >\r\n\r\n  # get content\r\nstyles.content.get = CONTENT\r\nstyles.content.get {\r\n  table = tt_content\r\n  select.orderBy = sorting\r\n  select.where = colPos=0\r\n  select.languageField = sys_language_uid\r\n}\r\n\r\n  # get content, left\r\nstyles.content.getLeft < styles.content.get\r\nstyles.content.getLeft.select.where = colPos=1\r\n\r\n  # get content, right\r\nstyles.content.getRight < styles.content.get\r\nstyles.content.getRight.select.where = colPos=2\r\n\r\n  # get content, margin\r\nstyles.content.getBorder < styles.content.get\r\nstyles.content.getBorder.select.where = colPos=3\r\n\r\n  # get news\r\nstyles.content.getNews < styles.content.get\r\nstyles.content.getNews.select.pidInList = {$styles.content.getNews.newsPid}\r\n\r\n  # std bodyTag. \r\n  # NOTE: These constants inserted are NOT defined in the constants-field of this template!!\r\nstyles.content.bodyTag = <body bgcolor="{$bgCol}" link="{$link}" vlink="{$vlink}" alink="{$alink}">\r\n\r\n  # std metaTag\r\nstyles.content.meta {\r\n  KEYWORDS.data = page: keywords\r\n  KEYWORDS.keywords = 1\r\n  KEYWORDS.wrap = |,{$styles.content.meta.site_keywords}\r\n  KEYWORDS.htmlSpecialChars = 1\r\n  DESCRIPTION.data = page: description\r\n  DESCRIPTION.trim = 1\r\n  DESCRIPTION.wrap = |. {$styles.content.meta.site_description}\r\n  DESCRIPTION.htmlSpecialChars = 1\r\n}\r\n\r\n  # std last updated\r\nstyles.content.lastUpdate = TEXT\r\nstyles.content.lastUpdate {\r\n  data = page:lastUpdated\r\n  if.isTrue.data = page:lastUpdated\r\n  date = {$styles.content.lastUpdate.format}\r\n  wrap = {$styles.content.lastUpdate.label}&nbsp;&nbsp;|\r\n  wrap2 = {$styles.content.lastUpdate.wrap}\r\n  {$styles.content.lastUpdate.comment_auto}  data = register : SYS_LASTCHANGED\r\n  {$styles.content.lastUpdate.comment_auto}  if >\r\n}\r\n\r\n\r\nstyles.content.typo3_credit = TEXT\r\nstyles.content.typo3_credit {\r\n  value = This site is dynamicly generated by TYPO3 CMS - freely available from <a href="http://www.typo3.org target="_blank">www.typo3.org</a>!\r\n  lang.dk = Dette website er dynamisk genereret af TYPO3 CMS - frit tilg�ngeligt fra <a href="http://www.typo3.dk" target="_blank">www.typo3.dk</a>!\r\n  wrap = <br /><br /><font face="arial" size="1" color="black"> | </font><br /><br />\r\n}\r\nstyles.content.typo3_powered = IMAGE\r\nstyles.content.typo3_powered{\r\n  file = EXT:statictemplates/media/uploads/typo3power{$styles.content.typo3_powered.number}.gif\r\n  linkWrap = <a href="http://www.typo3.org/" target="_blank">|</a>\r\n  wrap = <br />|<br /><br />\r\n}\r\n\r\n  # parsefunc\r\nstyles.content.parseFunc {\r\n  makelinks = 1\r\n  makelinks.http.keep = {$styles.content.links.keep}\r\n  makelinks.http.extTarget = {$styles.content.links.extTarget}\r\n  makelinks.http.wrap = {$styles.content.links.wrap}\r\n  makelinks.mailto.keep = path\r\n  makelinks.mailto.wrap = {$styles.content.links.wrap}\r\n  tags {\r\n    link = TEXT\r\n    link {\r\n      current = 1\r\n      typolink.parameter.data = parameters : allParams\r\n      typolink.extTarget = {$styles.content.links.extTarget}\r\n      typolink.target = {$styles.content.links.target}\r\n      typolink.wrap = {$styles.content.links.wrap}\r\n      parseFunc.constants =1\r\n    }\r\n  }\r\n  allowTags = {$styles.content.links.allowTags}\r\n  denyTags = *\r\n  sword = {$styles.content.links.sword}\r\n  constants = 1\r\n}\r\n\r\n  # textstyle\r\nstyles.content.textStyle {\r\n  align.field = text_align\r\n  face.field = text_face\r\n  size.field = text_size\r\n  color.field = text_color\r\n  properties.field = text_properties\r\n\r\n  face.default = {$styles.content.textStyle.face}\r\n  face.default.override.data = register: textStyle_face\r\n\r\n  size.default = {$styles.content.textStyle.size}\r\n  size.default.override.data = register: textStyle_size\r\n\r\n  color.default = {$styles.content.textStyle.color}\r\n  color.default.override.data = register: textStyle_color\r\n  \r\n  properties.default = {$styles.content.textStyle.properties}\r\n  properties.default.override.data = register: textStyle_properties\r\n\r\n  color.1 = {$styles.content.textStyle.color1}\r\n  color.2 = {$styles.content.textStyle.color2}\r\n\r\n  altWrap = {$styles.content.textStyle.altWrap}\r\n}\r\n\r\n  # tablestyle\r\nstyles.content.tableStyle {\r\n  align.field = {$styles.content.tableStyle.alignField}\r\n  border.field = table_border\r\n  cellspacing.field = table_cellspacing\r\n  cellpadding = 1\r\n  cellpadding.override.field = table_cellpadding\r\n\r\n  color.field = table_bgColor\r\n  color.default = {$styles.content.tableStyle.color}\r\n  color.1 = {$styles.content.tableStyle.color1}\r\n  color.2 = {$styles.content.tableStyle.color2}\r\n}\r\n\r\n  # pageframes\r\nstyles.content.frames = CASE\r\nstyles.content.frames {\r\n  key.field = section_frame\r\n  1 = TEXT\r\n  1.value = <table border="0" cellspacing="0" cellpadding="0"><tr><td> | </td></tr></table>\r\n\r\n  5 = HRULER\r\n  5.lineThickness = {$styles.content.frames.ruler.lineThickness}\r\n  5.lineColor = {$styles.content.frames.ruler.lineColor}\r\n  5.stdWrap.spaceBefore = {$styles.content.frames.ruler.before}\r\n  5.stdWrap.spaceAfter = {$styles.content.frames.ruler.after}\r\n  \r\n  6 = COA\r\n  6.1 = TEXT\r\n  6.1.value = |\r\n  6.2 < .5\r\n \r\n  10 = TEXT\r\n  10.value = <table border="0" cellspacing="0" cellpadding="0"><tr><td><img src="clear.gif" width="{$styles.content.frames.indent}" height="1" alt="" /></td><td> | </td></tr></table>\r\n  11 = TEXT\r\n  11.value = <table border="0" cellspacing="0" cellpadding="0"><tr>{$styles.content.frames.33_66cell}<td> | </td></tr></table>\r\n  12 = TEXT\r\n  12.value = <table border="0" cellspacing="0" cellpadding="0"><tr><td> | </td>{$styles.content.frames.33_66cell}</tr></table>\r\n\r\n  20 = TEXT\r\n  20.value = <table border="0" bgcolor="{$styles.content.frames.1.bgCol}" cellspacing="0" cellpadding="{$styles.content.frames.padding}"><tr><td> | </td></tr></table>\r\n  21 = TEXT\r\n  21.value = <table border="0" bgcolor="{$styles.content.frames.2.bgCol}" cellspacing="0" cellpadding="{$styles.content.frames.padding}"><tr><td> | </td></tr></table>\r\n  21.wrap = <table border="0" bgcolor="{$styles.content.frames.2.borderCol}" cellspacing="0" cellpadding="{$styles.content.frames.2.borderThickness}"><tr><td> | </td></tr></table>\r\n}\r\n\r\n  # image Frames\r\nstyles.content.imgFrames.1 {\r\n  bgImg = GIFBUILDER\r\n  bgImg {\r\n    XY = 100,100\r\n    backColor = {$styles.content.imgFrames.bgCol}\r\n    backColor.override.data = register:pageColor\r\n  }\r\n{$styles.content.imgFrames.comment_bottom}  bottomImg = GIFBUILDER\r\n  bottomImg {\r\n    XY = 100,100\r\n    backColor = {$styles.content.imgFrames.bottomCol}\r\n  }\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}1_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}1_mask.jpg\r\n}\r\nstyles.content.imgFrames.2 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.2 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}2_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}2_mask.jpg\r\n}\r\nstyles.content.imgFrames.3 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.3 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}3_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}3_mask.jpg\r\n}\r\nstyles.content.imgFrames.4 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.4 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}4_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}4_mask.jpg\r\n}\r\nstyles.content.imgFrames.5 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.5 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}5_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}5_mask.jpg\r\n}\r\nstyles.content.imgFrames.6 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.6 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}6_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}6_mask.jpg\r\n}\r\nstyles.content.imgFrames.7 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.7 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}7_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}7_mask.jpg\r\n}\r\nstyles.content.imgFrames.8 < styles.content.imgFrames.1\r\nstyles.content.imgFrames.8 {\r\n  bottomImg_mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}8_bottom.jpg\r\n  mask = {$styles.content.imgFrames.path}{$styles.content.imgFrames.frameCollection}8_mask.jpg\r\n}\r\n\r\n\r\n\r\n  # imgtext\r\nstyles.content.imgtext = IMGTEXT\r\nstyles.content.imgtext {\r\n  imgList.field = image\r\n  textPos.field = imageorient\r\n  imgPath = uploads/pics/\r\n  imgObjNum = 1\r\n  1 {\r\n     file.import.current = 1\r\n     file.width.field = imagewidth\r\n     params = align="top"\r\n     imageLinkWrap = 1\r\n     imageLinkWrap {\r\n       bodyTag = <body bgcolor="black">\r\n       wrap = <a href="javascript:close();"> | </a>\r\n       width = {$styles.content.imgtext.linkWrap.width}\r\n       height = {$styles.content.imgtext.linkWrap.height}\r\n       effects = {$styles.content.imgtext.linkWrap.effects}\r\n       JSwindow = 1\r\n       JSwindow.newWindow = {$styles.content.imgtext.linkWrap.newWindow}\r\n       JSwindow.expand = 17,20\r\n       enable.field = image_zoom\r\n       enable.ifEmpty.typolink.parameter.field = image_link\r\n       enable.ifEmpty.typolink.parameter.listNum.stdWrap.data = register : IMAGE_NUM\r\n       enable.ifEmpty.typolink.returnLast = url\r\n       typolink.parameter.field = image_link\r\n{$styles.content.imgtext.comment_CSL-LinkList}     typolink.parameter.listNum.stdWrap.data = register : IMAGE_NUM\r\n       typolink.target = {$styles.content.links.target}\r\n       typolink.extTarget = {$styles.content.links.extTarget}\r\n     }\r\n  }\r\n  maxW = {$styles.content.imgtext.maxW}\r\n  maxW.override.data = register:maxImageWidth\r\n  maxWInText = {$styles.content.imgtext.maxWInText}\r\n  equalH.field = imageheight\r\n  image_compression.field = image_compression\r\n  image_effects.field = image_effects\r\n  spaceBelowAbove = 6\r\n\r\n  image_frames.key.field = image_frames\r\n  image_frames.1 < styles.content.imgFrames.1\r\n  image_frames.2 < styles.content.imgFrames.2\r\n  image_frames.3 < styles.content.imgFrames.3\r\n  image_frames.4 < styles.content.imgFrames.4\r\n  image_frames.5 < styles.content.imgFrames.5\r\n  image_frames.6 < styles.content.imgFrames.6\r\n  image_frames.7 < styles.content.imgFrames.7\r\n  image_frames.8 < styles.content.imgFrames.8\r\n\r\n  noRows.field = image_noRows\r\n\r\n  cols.field = imagecols\r\n  border.field = imageborder\r\n  caption {\r\n    1 = TEXT\r\n    1.if.isFalse = {$styles.content.imgtext.captionSplit}\r\n    1.field = imagecaption\r\n    1.parseFunc < styles.content.parseFunc\r\n    1.required = 1\r\n    1.fontTag = {$styles.content.imgtext.captionWrap}\r\n    1.wrapAlign.field = imagecaption_position\r\n    1.wrap = | <br />\r\n    1.spaceBefore = 5\r\n    1.br = 1\r\n  }\r\n  captionSplit = {$styles.content.imgtext.captionSplit}\r\n  captionSplit.cObject = TEXT\r\n  captionSplit.cObject.field = imagecaption\r\n  captionSplit.stdWrap < .caption.1\r\n  captionSplit.stdWrap {\r\n    field >\r\n    if >\r\n  }\r\n\r\n  borderCol = {$styles.content.imgtext.borderColor}\r\n  borderThick = {$styles.content.imgtext.borderThick}\r\n  colSpace = {$styles.content.imgtext.colSpace}\r\n  rowSpace = {$styles.content.imgtext.rowSpace}\r\n  textMargin = {$styles.content.imgtext.textMargin}\r\n\r\n  editIcons = tt_content : image [imageorient|imagewidth|imageheight], [imagecols|image_noRows|imageborder],[image_link|image_zoom],[image_compression|image_effects|image_frames],imagecaption[imagecaption_position]\r\n  editIcons.iconTitle=Edit images\r\n  caption.editIcons = tt_content : imagecaption[imagecaption_position]\r\n  caption.editIcons.beforeLastTag=1\r\n  caption.editIcons.iconTitle = Edit image caption\r\n}\r\n\r\n\r\n\r\n\r\n\r\n# NOTE: Based on "current" to be set to the bulletlist content on beforehand!\r\nstyles.content.bulletlist = TEXT\r\nstyles.content.bulletlist {\r\n  current = 1\r\n  trim = 1\r\n  if.isTrue.current = 1\r\n  parseFunc < styles.content.parseFunc\r\n  split {\r\n    token.char = 10\r\n    cObjNum = 1\r\n    1.current = 1\r\n    1.wrap = <li>|</li>\r\n  }\r\n  fontTag = <ol> | </ol>\r\n  textStyle < styles.content.textStyle\r\n  textStyle.altWrap = {$styles.content.bulletlist.altWrap}\r\n}\r\n\r\n# NOTE: Based on "current" to be set to the bulletlist content on beforehand!\r\nstyles.content.bulletlist_gr < styles.content.bulletlist\r\nstyles.content.bulletlist_gr {\r\n  split {\r\n    1.wrap = <tr><td valign="top"><img src="EXT:statictemplates/media/bullets/dot.gif" vspace="4" hspace="4" alt="" /></td><td valign="top"> | </td></tr>\r\n    1.textStyle < styles.content.textStyle\r\n    1.textStyle.altWrap = {$styles.content.bulletlist.altWrap}\r\n  }\r\n  wrap = <table border="0" cellpadding="0" cellspacing="2"> | </table>\r\n  fontTag >\r\n  textStyle >\r\n}\r\n\r\n# NOTE: Based on "current" to be set to the table content on beforehand!\r\nstyles.content.table  = TEXT\r\nstyles.content.table {\r\n  current = 1\r\n  if.isTrue.current = 1\r\n  trim = 1\r\n  parseFunc < styles.content.parseFunc\r\n  split {\r\n    token.char = 10\r\n    cObjNum = 1 || 2\r\n    1.current = 1\r\n    1.trim =1\r\n    1.required = 1\r\n    1.split {\r\n      token = |\r\n      max.field = cols\r\n      min.field = cols\r\n      cObjNum = 1 || 2\r\n      1.current = 1\r\n      1.fontTag = |&nbsp;\r\n      1.textStyle < styles.content.textStyle\r\n      1.textStyle.altWrap = {$styles.content.table.altWrap}\r\n      1.wrap = <td valign="top">|</td>\r\n      2 < .1\r\n    }\r\n    2 < .1\r\n    wrap = <tr>|</tr>\r\n  }\r\n  tableStyle < styles.content.tableStyle\r\n}\r\n\r\n\r\n\r\n  # uploads\r\nstyles.content.uploads = TEXT\r\nstyles.content.uploads {\r\n  current = 1\r\n  override.filelist.field = select_key\r\n  trim = 1\r\n  required = 1\r\n  split {\r\n    token = ,\r\n    cObjNum = 1\r\n    1.current = 1\r\n    1.trim =1\r\n    1.filelink {\r\n      path = uploads/media/\r\n      path.override.field  = select_key\r\n      path.override.listNum = 0\r\n      path.override.listNum.splitChar = |\r\n      size = 1\r\n      size.wrap = {$styles.content.uploads.tdWrap}\r\n      size.innerWrap = &nbsp;&nbsp;&nbsp;\r\n      size.innerWrap2 = {$styles.content.uploads.sizeWrap}\r\n      size.fontTag = {$styles.content.uploads.wrap}\r\n      size.bytes = 1\r\n      size.if.isTrue.field = filelink_size\r\n      labelStdWrap.fontTag = {$styles.content.uploads.labelWrap}\r\n      file.fontTag = {$styles.content.uploads.wrap}\r\n      file.wrap = {$styles.content.uploads.tdWrap}\r\n      file.postCObject = TEXT\r\n      file.postCObject {\r\n        field = imagecaption\r\n        required = 1\r\n        if.directReturn = {$styles.content.uploads.descriptionWrap}\r\n        wrap = <br />{$styles.content.uploads.descriptionWrap}\r\n        listNum.stdWrap.data = register : SPLIT_COUNT\r\n        listNum.splitChar = 10\r\n      }\r\n      stdWrap.wrap = <tr><td><img src="clear.gif" width="4" height="1" alt="" /></td> | </tr>\r\n      target = _blank\r\n      jumpurl = {$styles.content.uploads.jumpurl}\r\n      jumpurl.secure = {$styles.content.uploads.jumpurl_secure}\r\n      jumpurl.secure.mimeTypes = {$styles.content.uploads.jumpurl_secure_mimeTypes}\r\n      removePrependedNumbers = 1\r\n    }\r\n  }\r\n  tableStyle < styles.content.tableStyle\r\n\r\n}\r\nstyles.content.uploads_icons < styles.content.uploads\r\nstyles.content.uploads_icons.split.1.filelink {\r\n  icon = 1\r\n  icon.wrap2 = <td align="center"> | </td>\r\n  icon_link = 1\r\n}\r\nstyles.content.uploads_imgicons < styles.content.uploads_icons\r\nstyles.content.uploads_imgicons.split.1.filelink {\r\n  icon_image_ext_list.data = global: TYPO3_CONF_VARS|GFX|imagefile_ext\r\n  icon.wrap = {$_blackBorderWrap}\r\n}\r\n\r\n\r\n  # columns\r\nstyles.content.columns = COLUMNS\r\nstyles.content.columns {\r\n  1 = CONTENT\r\n  1 {\r\n    table = tt_content\r\n    select.orderBy = sorting\r\n    select.where = colPos=1\r\n    select.languageField = sys_language_uid\r\n  }\r\n  2 < .1\r\n  2.select.where = colPos=2\r\n\r\n  gapWidth = {$styles.content.columns.gapWidth}\r\n  gapLineThickness = {$styles.content.columns.gapLineThickness}\r\n  if.isTrue.numRows < .1\r\n  if.isTrue.ifEmpty.numRows < .2\r\n  totalWidth = {$styles.content.columns.totalWidth}\r\n}\r\n\r\n  # mailform\r\nstyles.content.mailform = FORM\r\nstyles.content.mailform {\r\n  layout = <tr><td align="right">###LABEL###</td><td><img src="clear.gif" width="{$styles.content.mailform.border}" alt="" /></td><td>###FIELD###</td></tr>\r\n  labelWrap.wrap = {$styles.content.mailform.labelWrap}\r\n  fieldWrap.wrap = {$styles.content.mailform.fieldWrap}\r\n  commentWrap.wrap = {$styles.content.mailform.commentWrap}\r\n  radioWrap.wrap = {$styles.content.mailform.radioWrap}\r\n  REQ = 1\r\n  REQ.labelWrap.wrap = {$styles.content.mailform.REQ.labelWrap}\r\n  COMMENT.layout = <tr><td colspan="3" align="center">###LABEL###</td></tr>\r\n  stdWrap.wrap = <table border="0" cellspacing="0" cellpadding="2">  | </table>\r\n  target = {$styles.content.mailform.target}\r\n  goodMess = {$styles.content.mailform.goodMess}\r\n  badMess = {$styles.content.mailform.badMess}\r\n  redirect.field = pages\r\n  redirect.listNum = 0\r\n  recipient.field = subheader\r\n  data.field = bodytext\r\n#  type.field = form_type\r\n  type > \r\n  locationData = 1\r\n}\r\n\r\n{$styles.content.mailform.comment_type2} styles.content.mailform.layout = <tr><td><img src="clear.gif" width="{$styles.content.mailform.border}" alt="" /></td><td>###LABEL###<br />###FIELD###</td></tr>\r\n{$styles.content.mailform.comment_type2} styles.content.mailform.COMMENT.layout = <tr><td></td><td>###LABEL###</td></tr>\r\n\r\n\r\n\r\n  # loginform\r\nstyles.content.loginform < styles.content.mailform\r\nstyles.content.loginform {\r\n  goodMess = {$styles.content.loginform.goodMess}\r\n  redirect >  \r\n  recipient > \r\n  data >\r\n  dataArray {\r\n    10.label = Username:\r\n    10.type = *user=input\r\n    20.label = Password:\r\n    20.type = *pass=password\r\n    30.type = logintype=hidden\r\n    30.value = login\r\n    40.type = submit=submit\r\n    40.value = Login\r\n  }\r\n  type.field = pages\r\n  type.listNum = 0\r\n  target = {$styles.content.loginform.target}\r\n  locationData = 0\r\n  hiddenFields.pid = TEXT\r\n  hiddenFields.pid {\r\n    value = {$styles.content.loginform.pid}\r\n    override.field = pages\r\n    override.listNum = 1\r\n  }\r\n}\r\n\r\n[loginUser = *]\r\nstyles.content.loginform {\r\n  dataArray >\r\n  dataArray {\r\n    10.label = Username: <!--###USERNAME###--> \r\n    20 >\r\n    30.type = logintype=hidden\r\n    30.value = logout\r\n    40.type = submit=submit\r\n    40.value = Logout\r\n  }\r\n}\r\n[global]\r\n\r\n  # searchform\r\nstyles.content.searchform < styles.content.mailform\r\nstyles.content.searchform {\r\n  goodMess = {$styles.content.searchform.goodMess}\r\n  redirect >  \r\n  recipient > \r\n  data >\r\n  dataArray {\r\n    10.label = Searchword:\r\n    10.type = sword=input\r\n    20.label = Search in:\r\n    20.type = scols=select\r\n    20.valueArray {\r\n      10.label = Headers and keywords\r\n      10.value = pages.title-subtitle-keywords-description:tt_content.header\r\n      20.label = Pagecontent\r\n      20.value = tt_content.header-bodytext-imagecaption\r\n    }\r\n    30.type = stype=hidden\r\n    30.value = L0\r\n    40.type = submit=submit\r\n    40.value = Search now!\r\n  }\r\n  type.field = pages\r\n  type.listNum = 0\r\n  locationData = HTTP_POST_VARS\r\n  no_cache = 1\r\n}\r\n\r\n  # searchresult\r\nstyles.content.searchresult = SEARCHRESULT\r\nstyles.content.searchresult {\r\n  allowedCols = pages.title-subtitle-keywords-description : tt_content.header-bodytext-imagecaption : tt_address.name-title-address-email-company-city-country : tt_links.title-note-note2-url : tt_board.subject-message-author-email : tt_calender.title-note : tt_products.title-note-itemnumber\r\n  languageField.tt_content = sys_language_uid\r\n  renderObj = COA\r\n  renderObj {\r\n    10 = TEXT\r\n    10.field = pages_title\r\n    10.htmlSpecialChars = 1\r\n    10.textStyle {\r\n      face.default = {$styles.content.searchresult.head.face}\r\n      size.default = {$styles.content.searchresult.head.size}\r\n      color.default = {$styles.content.searchresult.head.color}\r\n    }\r\n    10.fontTag = <b> | </b>\r\n    10.typolink.parameter.field = uid\r\n    10.typolink.target = {$styles.content.searchresult.resultTarget}\r\n    10.typolink.additionalParams.data = register:SWORD_PARAMS\r\n    10.typolink.additionalParams.required = 1\r\n    10.typolink.additionalParams.wrap = &no_cache=1\r\n    10.wrap = <tr><td>|</td></tr>\r\n    10.spaceBefore = 6\r\n    20 = COA\r\n    20 {\r\n      10 = TEXT\r\n      10.field = tt_content_bodytext\r\n      10.htmlSpecialChars = 1\r\n      10.stripHtml = 1\r\n    }\r\n    20.stdWrap.crop = 200 | ...\r\n    20.stdWrap.wrap = <tr><td>|</td></tr>\r\n    20.stdWrap.textStyle {\r\n      face.default = {$styles.content.searchresult.face}\r\n      size.default = {$styles.content.searchresult.size}\r\n      color.default = {$styles.content.searchresult.color}\r\n    }\r\n  }\r\n  renderWrap = <table border="0" cellspacing="3"> | </table>\r\n  layout = COA\r\n  layout {\r\n    wrap = <table border="0" cellspacing="0" cellpadding="2"><tr> | </tr></table> ###RESULT###\r\n    10 = TEXT\r\n    10.value = Searchresult: ###RANGELOW###-###RANGEHIGH### of ###TOTAL###\r\n    10.fontTag = {$styles.content.searchresult.header.wrap}\r\n    10.wrap = <td width="95%" bgcolor="{$styles.content.searchresult.header.bgCol}"> | </td>\r\n    20 = TEXT\r\n    20.value = ###PREV###&nbsp;&nbsp;&nbsp;###NEXT###\r\n    20.fontTag = {$styles.content.searchresult.header.wrap}\r\n    20.wrap = <td bgcolor="{$styles.content.searchresult.header.bgCol}">|</td>\r\n  }\r\n  noResultObj = COA\r\n  noResultObj {\r\n    wrap = <table border="0" cellspacing="0" cellpadding="2"><tr> | </tr></table>\r\n    10 = TEXT\r\n    10.value = Sorry, your search was empty!\r\n    10.fontTag = {$styles.content.searchresult.header.wrap}\r\n    10.wrap = <td width="95%" bgcolor="{$styles.content.searchresult.header.bgCol}"> | </td>\r\n  }\r\n  next = TEXT\r\n  next.value = Next\r\n  prev = TEXT\r\n  prev.value = Prev\r\n  target = {$styles.content.searchresult.target}\r\n  range = 20\r\n}\r\n\r\n\r\nstyles.content.editPanelPage = COA\r\nstyles.content.editPanelPage {\r\n  10 = EDITPANEL\r\n  10 {\r\n# move,new,edit,hide\r\n    allow = toolbar,move,hide\r\n    label = Page: <b>%s</b>\r\n  }\r\n/*\r\n  20 = EDITPANEL\r\n  20 {\r\n    newRecordFromTable = tt_content\r\n    line = 5\r\n    label = New content...\r\n  }\r\n*/\r\n}\r\n\r\n\r\nstyles.content.RTE_encaps_stylesheets {\r\n  encapsTagList = div,p,pre\r\n  remapTag.DIV = P\r\n  nonWrappedTag = P\r\n  innerStdWrap_all.ifEmpty = &nbsp;\r\n  defaultAlign.field = text_align\r\n}\r\n\r\nstyles.content.RTE_encaps_fontwrap < styles.content.RTE_encaps_stylesheets\r\nstyles.content.RTE_encaps_fontwrap {\r\n    # Forcing these attributes onto the encapsulation-tags if any\r\n  addAttributes.P.style=margin:0 0 0 0;\r\n  addAttributes.PRE.style=margin:0 0 0 0; color:navy;\r\n  encapsLinesStdWrap.P.textStyle < styles.content.textStyle\r\n  encapsLinesStdWrap.P.textStyle.align>\r\n}\r\n', 'This is a "library" of standard-objects commonly used - at least in the standard-templates and "Content (default)".\r\n');
INSERT INTO static_template VALUES ('46', '0', '1054753516', '956069576', 'styles.sitemap.text', '', 'styles.sitemap.text >\r\nstyles.sitemap.text {\r\n    # cat=content/cMenu/sitemap; type=wrap; label=Sitemap, Item Wrap: This wrap is placed around the every item in the sitemap.\r\n  itemWrap = \r\n    # cat=content/cMenu/sitemap; type=wrap; label=Sitemap, Total Wrap: This wrap is placed around the whole sitemap.\r\n  totalWrap = <font face="verdana" size="1"> | </font>\r\n    # cat=content/cMenu/sitemap; type=small; label=Sitemap, Target: The target of the links in the sitemap. \r\n  target = _top\r\n}\r\n\r\n', 'styles.sitemap.text >\r\nstyles.sitemap.text = HMENU\r\nstyles.sitemap.text.stdWrap.wrap = {$styles.sitemap.text.totalWrap}\r\nstyles.sitemap.text {\r\n  1 = TMENU\r\n  1.NO.allWrap = |<br />\r\n  1.NO.linkWrap = {$styles.sitemap.text.itemWrap}\r\n  1.NO.ATagBeforeWrap = 1\r\n  1.target = {$styles.sitemap.text.target}\r\n  1.expAll = 1\r\n  2 = TMENU\r\n  2.NO.allWrap = &nbsp;&nbsp;&nbsp;&nbsp;|<br />\r\n  2.NO.linkWrap = {$styles.sitemap.text.itemWrap}\r\n  2.NO.ATagBeforeWrap = 1\r\n  2.target = {$styles.sitemap.text.target}\r\n  2.expAll = 1\r\n  3 = TMENU\r\n  3.NO.allWrap = &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />\r\n  3.NO.linkWrap = {$styles.sitemap.text.itemWrap}\r\n  3.NO.ATagBeforeWrap = 1\r\n  3.target = {$styles.sitemap.text.target}\r\n  3.expAll = 1\r\n  4 = TMENU\r\n  4.NO.allWrap = &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />\r\n  4.NO.linkWrap = {$styles.sitemap.text.itemWrap}\r\n  4.NO.ATagBeforeWrap = 1\r\n  4.target = {$styles.sitemap.text.target}\r\n  4.expAll = 1\r\n}\r\n\r\n\r\n', 'Sitemap object.\r\n\r\nHMENU textbased, used to render a kind of treelike sitemap. \r\n\r\nUsed with "content (default)" for the sitemap-feature.');
INSERT INTO static_template VALUES ('47', '0', '1054753226', '956072821', 'records (example)', '', '', 'tt_address >\r\ntt_address = COA\r\ntt_address {\r\n  10 = TEXT\r\n  10.field = name\r\n  10.wrap = ADDRESS: | <br />\r\n\r\n  20 = TEXT\r\n  20.field = email\r\n  20.wrap = | <br />\r\n\r\n  30 = TEXT\r\n  30.field = address\r\n  30.wrap = | <br />\r\n}\r\n\r\n\r\ntt_links >\r\ntt_links = COA\r\ntt_links {\r\n  10 = TEXT\r\n  10.field = title\r\n  10.wrap = LINKS: | <br />\r\n}\r\n\r\n\r\ntt_guest >\r\ntt_guest = CASE\r\ntt_guest.key.field = type\r\ntt_guest.1 = COA\r\ntt_guest.1 {\r\n  10 = TEXT\r\n  10.field = title\r\n  10.wrap = | <br />\r\n\r\n  20 = TEXT\r\n  20.value = Nummer 1\r\n  20.wrap = | <br />\r\n}\r\n\r\n\r\ntt_calender >\r\ntt_calender = COA\r\ntt_calender {\r\n  10 = TEXT\r\n  10.field = title\r\n  10.wrap = | <br />\r\n}\r\n\r\n\r\ntt_products >\r\ntt_products = COA\r\ntt_products {\r\n  10 = TEXT\r\n  10.field = title\r\n  10.wrap = | <br />\r\n}\r\n\r\ntt_news >\r\ntt_news = COA\r\ntt_news {\r\n  10 = TEXT\r\n  10.field = title\r\n  10.wrap = | <br />\r\n}\r\n\r\n\r\n', 'Provides a very primitive example of how to make render code for tt_* tables. It should only inspire you to get started coding your own content rendering.');
INSERT INTO static_template VALUES ('48', '0', '1054753612', '956688832', 'template: MM', '43,68', '  #cat=basic/enable; type=boolean; label=Gap 1, left: Check this option to enable the gap on the left side of the page table\r\nenableGap1 = 1\r\n  #cat=basic/enable; type=boolean; label=Gap 2, between: Check this option to enable the gap between the page- and news-content columns in the page table\r\nenableGap2 = 1\r\n  #cat=basic/enable; type=boolean; label=Gap 3, right: Check this option to enable the gap on the right side of the page table\r\nenableGap3 = 1\r\n\r\n// This excludes the constant "styles.content.imgtext.maxW" from being displayed in the constant editor. The reason why this is desirable is that the REGISTER is used to override this value in this template.\r\n  # cat=\r\nstyles.content.imgtext.maxW =\r\n\r\npageCol {\r\n    #cat=basic/color; type=color; label=Content column bgColor: This is the background color of the table cell where the content is displayed. You would normally regard this as being the "page color".\r\n  bgColor = #cccccc\r\n    # cat=content,basic/cImage/a_maxw1; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume.\r\n  maxImageWidth = 450\r\n    #cat=page/dims; type=small; label=Content table width: This is the \'width=\' parameter in the table that holds the content in the content cell of the page table.\r\n  contentTableWidth = 95%\r\n    #cat=page/dims; type=offset; label=Content table offset: This is the offset of the content from the upper-left corner of the content cell of the page table.\r\n  offset = 15,8\r\n}\r\n\r\nrightCol {\r\n    #cat=right,basic/enable; type=boolean; label=Enable right column: Click this option to enable the right column in the page table. This column can be used for "news" from a certain page, but inserted on all pages. You can also configure the column to hold "secondary" content specific for each page. Then content of the column-type "Border" is inserted. NOTE: This option is also found in the dedicated category "RIGHT" that configures the characteristics of this column.\r\n  enable = 1\r\n    #cat=right/enable; type=options[getNews,getBorder]; label=Column content: Choose "getNews" to select content from a specific page (defined below here) or "getBorder" to display the "Border"-content of the current page.\r\n  borderContent = getNews\r\n    #cat=right/color; type=color; label=Right column bgColor: This is the background color of content in the right column.\r\n  bgColor = white\r\n    #cat=right/dims; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume. NOTE: This is specific for the right column! The figure should approx. match the width of the image in the top of this column!\r\n  maxImageWidth = 150\r\n    #cat=right/dims; type=offset; label=Content offset: This is the offset of the content from the upper-left corner of the table cell.\r\n  offset = 5,8\r\n    #cat=right/typo; type=small; label=Bodytext font face\r\n  textStyle_face =\r\n    #cat=right/typo; type=int[1-5]; label=Bodytext font size\r\n  textStyle_size =\r\n    #cat=right/typo; type=color; label=Bodytext font color\r\n  textStyle_color =\r\n    #cat=right/typo; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType =\r\n}\r\n  # cat=right/enable/zz; type=int+; label=News Content PID: If you selected "getNews" above, this is where you enter the page-id of the page from which to fetch the "news" content for the column.\r\nstyles.content.getNews.newsPid = 0\r\n\r\n\r\n  # cat=basic/color; type=color; label=<body>-tag, Background color: This is the <body>-tag bgColor of the page. NOTE: It\'s not behind the content IN the table, but behind the table that makes up the page in this template. Just like "file.background"\r\nbgCol = black\r\n  # cat=basic/color; type=color; label=Gap, Background color: If there is no background image in the gaps, this color will appear\r\ngapColor = olive\r\n  # cat=basic/color; type=color; label=Border, Color: Color of the border between areas\r\nborderColor = #cccccc\r\n\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\nfile {\r\n    #cat=basic/file; type=file[IMAGE_EXT]; label=Background Image: This is the body-tag background image of the page. NOTE: It\'s not behind the content in the table, but behind the table that makes up the page in this template.\r\n  background = \r\n    #cat=basic,menu/file; type=file[IMAGE_EXT]; label=Menu imagemap Image: This is the image onto which the menu rendered. NOTE: This image also appears in the MENU-category.\r\n  menuimage = \r\n    #cat=basic,right/file; type=file[IMAGE_EXT]; label=Right Column Image: This is the image in the top-right corner of the page table. NOTE: This image is displayed only if the right column of the template is enabled! NOTE: This image can also be selected in the dedicated RIGHT-category.\r\n  sideimage = \r\n    #cat=basic/file; type=file[IMAGE_EXT]; label=Gap image: Image in the gap between columns.\r\n  gapIcon = \r\n}\r\n\r\n  # cat=basic/dims; type=int+; label=Minimum pageheight: If there is no content on the page to expand it\'s length, this ensures that the page table doesn\'t collapse totally but will always be at least this long (pixels).\r\nminPageH = 100\r\n  # cat=basic/dims; type=int+; label=Gap Width: Width of gaps on the page\r\ngapIcon_width = 10\r\n  # cat=basic/dims; type=int+; label=Border, Thickness: Thickness of the border between areas\r\nborderThickness = 1\r\n\r\n  # cat=basic; type=options[,left,right,center]; label=Alignment of the page: Alignment of the page-table\r\npageAlign = center\r\n\r\nimageMap {\r\n    #cat=menu/typo; type=file[ttf]; label=Font file for the menu\r\n  file.fontFile =\r\n    #cat=menu/typo; type=int[1-50]; label=Font size for the menu\r\n  fontSize = 11\r\n    #cat=menu/typo; type=color; label=Font color for the menu\r\n  fontColor = black\r\n    #cat=menu/dims; type=offset; label=Text offset: Text offset from upper-left corner of the image\r\n  dWorkArea = 7,68\r\n    #cat=menu//x; type=int[1-256]; label=Reduce colors: Number of indexed colors in the menuimage. If your imagemap image ends up with weird colors, you can try to enter a higher number of colors. But the file will also increase in filesize.\r\n  colors = 16\r\n    #cat=menu; type=int[1-15]; label=Max items: Enter the maximum number of menu items in the image map. If there are many items to generate, the server will take a lot of time to generate the menu image. So keep this number low. Recommended: 6-10\r\n  maxItems=\r\n}\r\n\r\nPAGE_TARGET =\r\ncontent.pageFrameObj = \r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "MM"\r\n  description = MM is a single-page template with a imagemap-based menu in the top. You can select background-images, colors, borderwidths and colors and so on. Furthermore you can define content in a second column. \r\n  bulletlist = Optional right column: Select background color, other standard header- and text-properties. (4) // Background color or optional background image. (6) // Image as background for the image-map menu: Select TrueType-font, color, size, offset on the image (7) // Optional image in the right column (8) // Optional gap between the two columns. Define background color OR background image for the gap. (1,2,3)\r\n\r\n  image = gfx/MM_basic.gif\r\n  1=enableGap1,gapIcon_width,file.gapIcon,gapColor\r\n  2=enableGap2,gapIcon_width,file.gapIcon,gapColor\r\n  3=enableGap3,gapIcon_width,file.gapIcon,gapColor\r\n  4=rightCol.enable\r\n  5=borderThickness,borderColor\r\n  6=file.background,bgCol\r\n  7=file.menuimage\r\n  8=file.sideimage\r\n  9=pageCol.bgColor\r\n}\r\nTSConstantEditor.right {\r\n  description = \r\n  image = gfx/MM_right.gif\r\n  1=rightCol.maxImageWidth\r\n  2=rightCol.offset\r\n  3=file.sideimage\r\n  4=rightCol.borderContent,rightCol.textStyle_face,rightCol.textStyle_size,rightCol.textStyle_color\r\n  5=rightCol.borderContent,rightCol.defaultHeaderType\r\n  6=rightCol.bgColor\r\n}\r\nTSConstantEditor.menu {\r\n  description = \r\n  image = gfx/MM_menu.gif\r\n  1=imageMap.dWorkArea\r\n  2=file.menuimage,imageMap.colors\r\n  3=imageMap.file.fontFile,imageMap.fontSize,imageMap.fontColor,imageMap.maxItems\r\n}\r\n\r\n', '# border:\r\ntemp.gap = CLEARGIF\r\ntemp.gap.width = {$gapIcon_width}\r\ntemp.gap.height = {$minPageH}\r\ntemp.gap.wrap = <td bgcolor="{$gapColor}" background="{$file.gapIcon}"> | </td>\r\n\r\n# Menu:\r\ntemp.topmenu = HMENU\r\ntemp.topmenu.maxItems = {$imageMap.maxItems}\r\ntemp.topmenu.entryLevel = 0\r\ntemp.topmenu.1 = IMGMENU\r\ntemp.topmenu.1 {\r\n  wrap = |<br />\r\n  main.XY = [10.w] , [10.h]\r\n  main.10 = IMAGE\r\n  main.10.file = {$file.menuimage}\r\n  main.reduceColors = {$imageMap.colors}\r\n\r\n  dWorkArea = {$imageMap.dWorkArea}\r\n\r\n  NO.distrib = textX+10, 0, textX+10, textY+5\r\n  NO.10 = TEXT\r\n  NO.10 {\r\n    text.field = nav_title // title\r\n    fontFile = {$imageMap.file.fontFile}\r\n    fontSize = {$imageMap.fontSize}\r\n    fontColor = {$imageMap.fontColor}\r\n    niceText = 1\r\n    offset = 4,9\r\n    imgMap.explode = 3,2\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n# ******************\r\n# *** Page Setup ***\r\n# ******************\r\n\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.bgImg = {$file.background}\r\npage.wrap = <div align="{$pageAlign}"><table border="0" cellpadding="0" cellspacing="0" width="1%"><tr bgcolor="{$borderColor}"><td> <table align="center" border="0" cellpadding="0" cellspacing="{$borderThickness}"><tr> | </tr></table> </td></tr></table></div>\r\n\r\npage.10 < temp.gap\r\npage.10.stdWrap.if.isTrue = {$enableGap1}\r\n\r\npage.20 = COA\r\npage.20.wrap = <td bgcolor="{$pageCol.bgColor}" valign="top"> | </td>\r\npage.20 {\r\n  10 < temp.topmenu \r\n  20 = OTABLE\r\n  20.offset = {$pageCol.offset}\r\n  20.tableParams = border="0" cellpadding="0" cellspacing="0" width="{$pageCol.contentTableWidth}"\r\n  20.5 <  styles.content.editPanelPage\r\n  20.9 = LOAD_REGISTER\r\n  20.9.maxImageWidth = {$pageCol.maxImageWidth}\r\n  20.10 < styles.content.get \r\n  20.20  < styles.content.lastUpdate\r\n  20.30 < styles.content.typo3_powered\r\n  20.40 = RESTORE_REGISTER\r\n}\r\n\r\npage.25 < temp.gap\r\npage.25.stdWrap.if.isTrue = {$enableGap2}\r\n\r\npage.30 = COA\r\npage.30.if.isTrue = {$rightCol.enable}\r\npage.30.wrap = <td bgcolor="{$rightCol.bgColor}" valign="top"> | </td>\r\npage.30 {\r\n  10 = IMAGE\r\n  10.file = {$file.sideimage}\r\n  10.wrap = | <br />\r\n  20 = OTABLE\r\n  20.offset = {$rightCol.offset}\r\n  20.tableParams = border="0" cellpadding="0" cellspacing="0" width="95%"\r\n  20.9 = LOAD_REGISTER\r\n  20.9.maxImageWidth = {$rightCol.maxImageWidth}\r\n  20.9.textStyle_face = {$rightCol.textStyle_face}\r\n  20.9.textStyle_size = {$rightCol.textStyle_size}\r\n  20.9.textStyle_color = {$rightCol.textStyle_color}\r\n  20.9.defaultHeaderType = {$rightCol.defaultHeaderType}\r\n  20.9.pageColor = {$rightCol.bgColor}\r\n\r\n  20.10 < styles.content.{$rightCol.borderContent}\r\n  20.11 = RESTORE_REGISTER\r\n}\r\n\r\npage.35 < temp.gap\r\npage.35.stdWrap.if.isTrue = {$enableGap3}\r\n\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n\r\n', 'Standard-template\r\n\r\nThis template is a no-frame-template with a image-map menu in the top. \r\nContent may be displayed in a main column and a right column optionally. \r\nYou can define background-images and images in the border between columns.\r\n\r\nBest viewed in 4+ browsers.\r\n\r\n\r\n\r\n\r\n\r\n');
INSERT INTO static_template VALUES ('50', '0', '1054753309', '956915453', 'styles.gmenu.first', '', 'styles.gmenu.first >\r\nstyles.gmenu.first {\r\n    # cat=menu/color; type=color; label=Menu background color1: (See below)\r\n  bgCol = #7b8ca5\r\n    # cat=menu/color; type=color; label=Menu background color2: You can define two background colors for this simple graphical menu. The menu items will be alternating between Color1 and Color2 as background color. But if these colors are the same, all menu items will have the same background of course.\r\n  bgCol2 < .bgCol\r\n\r\n    # cat=menu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu.\r\n  file.fontFile = \r\n    # cat=menu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 12\r\n    # cat=menu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = white\r\n    # cat=menu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  offset = 6,10\r\n    # cat=menu/typo; type=int[0-20]; label=Letter spacing: Enter the spacing between characters\r\n  spacing=1\r\n\r\n    # cat=menu/typo; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 0\r\n    # cat=menu/typo; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor =\r\n    # cat=menu/color; type=color; label=Rollover, Menu background color: Background color of the menu-items when the mouse cursor moves over the item.\r\n  RO.bgCol = #608ca5\r\n\r\n    # cat=menu/typo; type=boolean; label=Active: Click this option if you want a \'Active\' effect on the menu items. \'Active\' means how the item looks when you\'re on that page or a subpage to that page.\r\n  ACT = 0\r\n    # cat=menu/typo; type=color; label=Active, font color: Enter the \'Active\' font color of the text on the menu item.\r\n  ACT.fontColor =\r\n    # cat=menu/color; type=color; label=Active, Menu background color:  Background color of the menu-items when \'Active\'.\r\n  ACT.bgCol = #7b7392\r\n\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Bullet image: You can define an imagefile to use as a bullet aligned to the right/top of all menu items except from the last item. This image should probably be a little gif-file with dimensions less than 20 pixels.\r\n  file.bullet =\r\n\r\n    # cat=menu//x; type=int[1-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 64\r\n    # cat=menu/dims; type=int+; label=Item Height: The height in pixels of the menu items\r\n  height = 14\r\n}\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.menu {\r\n  header = styles.gmenu.first\r\n  description = This is a simple GMENU object with a background color and some text on it. In addition you can add a bullet-image to the right of all items, except the last one.\r\n  image = gfx/FIRST_menu.gif\r\n  1=styles.gmenu.first.bgCol\r\n  2=styles.gmenu.first.bgCol2\r\n  3=styles.gmenu.first.file.bullet\r\n}\r\n\r\n', 'styles.gmenu.first >\r\nstyles.gmenu.first = GMENU\r\nstyles.gmenu.first.NO {\r\n  XY = [10.w]+[20.w]+12 , {$styles.gmenu.first.height}\r\n  backColor = |*| {$styles.gmenu.first.bgCol} || {$styles.gmenu.first.bgCol2} |*| \r\n  reduceColors = {$styles.gmenu.first.reduceColors}\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.offset = {$styles.gmenu.first.offset} \r\n  10.fontColor = {$styles.gmenu.first.fontColor}\r\n  10.niceText = 1\r\n  10.fontSize = {$styles.gmenu.first.fontSize}\r\n  10.spacing = {$styles.gmenu.first.spacing}\r\n  10.fontFile = {$styles.gmenu.first.file.fontFile}\r\n\r\n  20 = IMAGE |*||*| _x_\r\n  20.file = {$styles.gmenu.first.file.bullet}\r\n  20.align = r,t\r\n}\r\n\r\nstyles.gmenu.first.RO < styles.gmenu.first.NO\r\nstyles.gmenu.first.RO = {$styles.gmenu.first.RO}\r\nstyles.gmenu.first.RO {\r\n  backColor = {$styles.gmenu.first.RO.bgCol}\r\n  10.fontColor = {$styles.gmenu.first.RO.fontColor}\r\n}\r\n\r\nstyles.gmenu.first.ACT < styles.gmenu.first.NO\r\nstyles.gmenu.first.ACT = {$styles.gmenu.first.ACT}\r\nstyles.gmenu.first.ACT {\r\n  backColor = {$styles.gmenu.first.ACT.bgCol}\r\n  10.fontColor = {$styles.gmenu.first.ACT.fontColor}\r\n}\r\n\r\n\r\n', 'This is a GMENU object. \r\nIt features the ability to add a bullet to the right side of the items, except the last item.\r\n\r\nUsed with template FIRST');
INSERT INTO static_template VALUES ('52', '0', '1054753896', '960231290', 'template; TU', '53,43,68', '  # cat=basic/file; type=file[IMAGE_EXT]; label=Top image: An image is placed as a banner all the way across the page in the top.\r\nfile.topImage = \r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = white\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\n  # cat=basic/dims; type=offset; label= Page offset: Offset of the whole page-table from upper-left corner of the browser-window\r\npage.offset = 5,5\r\n  # cat=basic/dims; type=int+; label= Page content X-offset: Distance between the menu and the content\r\npage.contentOffset.X = 15\r\n  # cat=basic/dims; type=int+; label= Page content Y-offset: Distance between the top image and the content\r\npage.contentOffset.Y = 10\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table cell where the content is displayed\r\npage.contentWidth = 430\r\n\r\n\r\nPAGE_TARGET = \r\ncontent.pageFrameObj = \r\nstyles.content.imgtext.maxW = 400\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "TU"\r\n  description = TU is a single-page template. You can define a topimage and background-images for the 2-level graphical menu to the left on the page. \r\n  bulletlist = Topimage (4) // Define the background-color of the page. (5)\r\n  image = gfx/TU_basic.gif\r\n\r\n  1=page.offset\r\n  2=page.contentOffset.X,page.contentOffset.Y\r\n  3=page.contentWidth,styles.content.imgtext.maxW\r\n  4=file.topImage\r\n  5=bgCol\r\n}\r\n\r\n', '\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTagMargins = 0\r\npage.bodyTag < styles.content.bodyTag\r\n\r\npage.10 = OTABLE\r\npage.10 {\r\n  offset = {$page.offset}\r\n  10 = HTML\r\n  10.value = <table border="0" cellspacing="0" cellpadding="0" width="1"><tr><td colspan="3">\r\n  20 = IMAGE\r\n  20.file = {$file.topImage}\r\n  20.linkWrap = <a href="index.php?{0}"> |</a>\r\n  30 = HTML\r\n  30.value = </td></tr><tr><td width="1" valign="top" align="left">\r\n\r\n  40 < styles.hmenu.tu\r\n\r\n  45 = HTML\r\n  45.value = </td><td width="1" align="left">\r\n\r\n  47 = CLEARGIF\r\n  47.width = {$page.contentOffset.X}\r\n\r\n  50 = HTML\r\n  50.value = </td><td valign="top">\r\n\r\n  55 = CLEARGIF\r\n  55.height = {$page.contentOffset.Y}\r\n  55.wrap = | <br />\r\n\r\n  59 < styles.content.editPanelPage\r\n  60 < styles.content.get\r\n  65  < styles.content.lastUpdate\r\n  67  < styles.content.typo3_powered\r\n\r\n  70 = HTML\r\n  70.value = </td></tr>\r\n\r\n\r\n  75 = CLEARGIF\r\n  75.width = {$page.contentWidth}\r\n  75.wrap = <tr><td></td><td></td><td> | </td></tr></table>\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n\r\n\r\n\r\n\r\n', 'Standard-template\r\n\r\nNo-frames template with a logoimage in the top connected to a 2-level graphical menu to the left. \r\nContent is in one column only.\r\nBackground-images of each menu item - one for each level - can be defined as well as images in the top and bottom of the menubar.');
INSERT INTO static_template VALUES ('53', '0', '1054753410', '960231947', 'styles.hmenu.tu', '', 'styles.hmenu.tu >\r\nstyles.hmenu.tu {\r\n    # cat=menu; type=int[0-5]; label=Advanced, entry level: This number defines which level in the pagetree is reflected as the first level in the menu. If 0 (zero) the menu will start with pages from the root of the website.\r\n  entryLevel = 0\r\n    # cat=menu/file/3; type=file[IMAGE_EXT]; label=Image before: The imagefile inserted before the items of the menu.\r\n  file.top = EXT:statictemplates/media/buttons/menutop.gif\r\n    # cat=menu/file/4; type=file[IMAGE_EXT]; label=Image after: The imagefile inserted after the items of the menu.\r\n  file.bottom = EXT:statictemplates/media/buttons/menubottom.gif\r\n\r\n    # cat=menu//x; type=int[0-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 64\r\n}\r\n\r\nstyles.hmenu.tu.L1 {\r\n    # cat=menu/file/1; type=file[IMAGE_EXT]; label=Level-1, Background image\r\n  file.bgImg = EXT:statictemplates/media/buttons/menulevel1.gif\r\n    # cat=menu/typo/1; type=file[ttf]; label=Level-1, Font file\r\n  file.fontFile =\r\n    # cat=menu/typo/1; type=color; label=Level-1, Font color\r\n  fontColor = black\r\n    # cat=menu/typo/1; type=int[1-40]; label=Level-1, Font size\r\n  fontSize = 12\r\n    # cat=menu/typo/1; type=offset; label=Level-1, Text offset: Enter the offset of the text from the upper-left corner of the menu items\r\n  offset = 15,15\r\n    # cat=menu/typo/1; type=color; label=Level-1, Rollover/Active: Enter the color of the text on the menu item when mouseover OR when the item is "active".\r\n  RO.fontColor = navy\r\n}\r\n\r\nstyles.hmenu.tu.L2 {\r\n    # cat=menu/file/2; type=file[IMAGE_EXT]; label=Level-2, Background image\r\n  file.bgImg = EXT:statictemplates/media/buttons/menulevel2.gif\r\n    # cat=menu/typo/2; type=file[ttf]; label=Level-2, Font file\r\n  file.fontFile =\r\n    # cat=menu/typo/2; type=color; label=Level-2, Font color\r\n  fontColor = black\r\n    # cat=menu/typo/2; type=int[1-40]; label=Level-2, Font size\r\n  fontSize = 10\r\n    # cat=menu/typo/2; type=offset; label=Level-2, Text offset: Enter the offset of the text from the upper-left corner of the menu items\r\n  offset = 30,8\r\n    # cat=menu/typo/2; type=color; label=Level-2, Rollover/Active: Enter the color of the text on the menu item when mouseover OR when the item is "active".\r\n  RO.fontColor = navy\r\n}\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.menu {\r\n  header= styles.hmenu.tu\r\n  description = The graphical menu has two levels with support for shifting font color when the mouse is rolled over the item. The rollover color is also used for the text on the item, when the page is "active" (you\'re on the page).\r\n  bulletlist = Background image for the 1st-level menuitems. Select Truetype-font, color, size and offset. Optionally select Rollover color. (1,5) // Background image for the 2nd-level menuitems. Select Truetype-font, color, size and offset. Optionally select Rollover color. (2,6) // Image in the top of the menu. This adds space from the topimage to the first menuitems. (3) // Image in the bottom of the menu. This ends the menu. (4)\r\n  image = gfx/TU_menu.gif\r\n  1=styles.hmenu.tu.L1.file.bgImg\r\n  2=styles.hmenu.tu.L2.file.bgImg\r\n  3=styles.hmenu.tu.file.top\r\n  4=styles.hmenu.tu.file.bottom\r\n  5=styles.hmenu.tu.L1.file.fontFile,styles.hmenu.tu.L1.fontColor,styles.hmenu.tu.L1.fontSize,styles.hmenu.tu.L1.offset,styles.hmenu.tu.L1.RO.fontColor\r\n  6=styles.hmenu.tu.L2.file.fontFile,styles.hmenu.tu.L2.fontColor,styles.hmenu.tu.L2.fontSize,styles.hmenu.tu.L2.offset,styles.hmenu.tu.L2.RO.fontColor\r\n}\r\n\r\n', '\r\nstyles.hmenu.tu >\r\n\r\n# LEVEL 1:\r\nstyles.hmenu.tu = HMENU\r\nstyles.hmenu.tu.entryLevel = {$styles.hmenu.tu.entryLevel}\r\nstyles.hmenu.tu.1 = GMENU\r\nstyles.hmenu.tu.1.NO {\r\n  wrap = |<br />\r\n  XY = [10.w],[10.h]\r\n  reduceColors = {$styles.hmenu.tu.reduceColors}\r\n  10 = IMAGE\r\n  10.file = {$styles.hmenu.tu.L1.file.bgImg}\r\n  20 = TEXT\r\n  20 {\r\n    text.field = nav_title // title\r\n    fontFile = {$styles.hmenu.tu.L1.file.fontFile}\r\n    fontColor = {$styles.hmenu.tu.L1.fontColor}\r\n    fontSize = {$styles.hmenu.tu.L1.fontSize}\r\n    offset = {$styles.hmenu.tu.L1.offset}\r\n    niceText = 1\r\n  }\r\n}\r\nstyles.hmenu.tu.1.RO < styles.hmenu.tu.1.NO\r\nstyles.hmenu.tu.1.RO = 1\r\nstyles.hmenu.tu.1.RO.20.fontColor = {$styles.hmenu.tu.L1.RO.fontColor}\r\nstyles.hmenu.tu.1.ACT < styles.hmenu.tu.1.RO\r\nstyles.hmenu.tu.1.ACT = 1\r\n\r\n# LEVEL 2:\r\nstyles.hmenu.tu.2 = GMENU\r\nstyles.hmenu.tu.2.NO {\r\n  wrap = |<br />\r\n  XY = [10.w],[10.h]\r\n  reduceColors = {$styles.hmenu.tu.reduceColors}\r\n  10 = IMAGE\r\n  10.file = {$styles.hmenu.tu.L2.file.bgImg}\r\n  20 = TEXT\r\n  20 {\r\n    text.field = nav_title // title\r\n    fontFile = {$styles.hmenu.tu.L2.file.fontFile}\r\n    fontColor = {$styles.hmenu.tu.L2.fontColor}\r\n    fontSize = {$styles.hmenu.tu.L2.fontSize}\r\n    offset = {$styles.hmenu.tu.L2.offset}\r\n    niceText = 1\r\n  }\r\n}\r\nstyles.hmenu.tu.2.RO < styles.hmenu.tu.2.NO\r\nstyles.hmenu.tu.2.RO = 1\r\nstyles.hmenu.tu.2.RO.20.fontColor = {$styles.hmenu.tu.L2.RO.fontColor}\r\nstyles.hmenu.tu.2.ACT < styles.hmenu.tu.2.RO\r\nstyles.hmenu.tu.2.ACT = 1\r\n\r\n# Wrapping:\r\nstyles.hmenu.tu.stdWrap.innerWrap {\r\n  cObject = COA\r\n  cObject {\r\n    10 = IMAGE\r\n    10.file = {$styles.hmenu.tu.file.top}\r\n    10.wrap = |<br />\r\n    20 = TEXT\r\n    20.value = |\r\n    30 = IMAGE\r\n    30.file = {$styles.hmenu.tu.file.bottom}\r\n    30.wrap = |<br />\r\n  }\r\n}\r\n\r\n', 'Graphical menu, two levels.\r\n\r\nFeatures a simple menu with a rollover font color change and background image for each menu item on both levels.\r\n\r\nUsed with template TU');
INSERT INTO static_template VALUES ('54', '0', '1071663096', '960237041', 'template; BUSINESS', '23,43,68', 'leftFrameWidth = 150\r\n\r\n  # cat=basic/color/a; type=color; label=Background color, page frame: This is the background color of the page in the right frame.\r\nbgCol = #dddddd\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = black\r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = gray\r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = black\r\n\r\nmenu {\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, left frame:  Background image of the page in the left frame (menu frame)\r\n  file.bgImg = \r\n    # cat=basic/color/a; type=color; label=Background color, menu frame: This is the background color of the page in the left frame (menu frame).\r\n  bgCol = #c0c0c0\r\n\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Bullet on level-2\r\n  file.bullet = EXT:statictemplates/media/bullets/bullet1_n.gif\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Bullet on level-2, Rollover\r\n  file.bullet_RO = EXT:statictemplates/media/bullets/bullet1_h.gif\r\n\r\n    # cat=menu/typo; type=wrap; label=Wrap, level-1: This is the wrap-code around the menu page-titles on level-1\r\n  L0.fontWrap = <font face="Arial" size="2" color="black"><b> |</b></font>\r\n    # cat=menu/typo; type=wrap; label=Wrap, level-2: This is the wrap-code around the menu page-titles on level-2\r\n  L1.fontWrap = <font face="Verdana" size="1" color="black"> | </font>\r\n    # cat=menu/links; type=boolean; label=Link level-1?: You can enable links on the level-1 menu items, if you want these links to show a page. By default they don\'t.\r\n  L0.noLink = 0\r\n}\r\n\r\npage {\r\n   # cat=basic/file; type=file[IMAGE_EXT]; label=Background image, page frame\r\n  file.bgImg  =\r\n   # cat=basic/color; type=color; label=Color of horizontal line\r\n  lineCol = #666666\r\n   # cat=basic/typo; type=wrap; label=Wrap, Level-1 title: In the top of the page, the title of Level-1 in the menu is always shown. This is the wrap around that title.\r\n  L0.titleWrap = <b><font face="Verdana" size="5" color="#000066"><i> | </i></font></b>\r\n   # cat=basic/typo; type=wrap; label=Wrap, Level-2 title: In the top of the page, the title of Level-2 in the menu is always shown. This is the wrap around that title.\r\n  L1.titleWrap = <font face="Verdana" size="2" color="#000066"><b> | </b></font>\r\n   # cat=basic/dims/z1; type=int+; label=Thickness of horizontal line: Pixels\r\n  lineHeight = 2\r\n   # cat=basic/dims/z2; type=int[1-1000]; label=Menu, X-offset: Space between menu and left border of browserwindow\r\n  menuXDistance = 5\r\n   # cat=basic/dims/z2; type=int+; label=Menu, Y-offset: Space between menu and logo in left frame\r\n  menuYDistance = 0\r\n}\r\n\r\n # cat=basic/file; type=file[IMAGE_EXT]; label=Logo-file, menu frame: This is the logo-file inserted in the top of the menu frame.\r\nfile.logo = EXT:statictemplates/media/uploads/typologo.gif\r\n # cat=advanced; type=boolean; label=Logo-file, GIFBUILDER-obj: If this flag is true, the logo is rendered as a GIFBUILDER-gif and is fixed at 150x80 pixels. Else the image is just inserted (must be 150x80 pixels in order to fit nicely). Although the default value is "true" you probably want to disable this and make sure yourself that the logofile keeps the dimensions.\r\nGIFBUILDER_logo = 1\r\n\r\n # cat=basic/dims; type=int+; label=Content width: Enter the width of the table where the content is put. This should approx. be that same (little less) as the Max Image Width!\r\ncontentWidth = 500\r\n # cat=basic/dims; type=offset; label=Content Offset: Enter the offset in pixels by which the content is offset from top-left. \r\ncontentOffset = 10,10\r\n\r\nstyles.content.imgtext.maxW = 500\r\nstyles.content.typo3_powered.number=1\r\n\r\nPAGE_TARGET = page\r\ncontent.pageFrameObj = page\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "BUSINESS"\r\n  description = BUSINESS is a framebased template in a very simple layout, based on text. There are 2 frames; a menuframe (to the left) and a page-frame.   \r\n  bulletlist = Left-frame image in the top. The dimensions are fixed to 150 x 80 pixels (normally you are free to choose the dimensions yourself!) (4) //2-level textual menu. Select: font-teg-properties like face, size and color for each level. Select: graphical bullet for the 2nd level and optionally a mouseover-bullet. //The pagetitles of the 1st and 2nd level for a given page is displayed in the top. Select font-tag-properties for each title (like with the menus)  (5 and 6) //Define background-images of each frame, the left and page frame. Also select the width of the left frame. (1) //Optional ruler across the page. Select the color. (8)\r\n  image = gfx/BUSINESS_basic.gif\r\n  1=leftFrameWidth,menu.file.bgImg,menu.bgCol\r\n  2=page.file.bgImg,bgCol\r\n  3=contentOffset\r\n  4=file.logo\r\n  5=page.L0.titleWrap\r\n  6=page.L1.titleWrap\r\n  7=contentWidth,styles.content.imgtext.maxW\r\n  8=page.lineCol\r\n}\r\nTSConstantEditor.menu {\r\n  description = \r\n  image = gfx/BUSINESS_menu.gif\r\n  1=menu.L0.fontWrap,menu.L0.noLink\r\n  2=menu.L1.fontWrap\r\n  3=menu.file.bullet\r\n  4=menu.file.bullet_RO\r\n}\r\n\r\n', 'temp.leftmenu = HMENU\r\ntemp.leftmenu.1 = TMENU\r\ntemp.leftmenu.1.target = page\r\ntemp.leftmenu.1 {\r\n  expAll = 1\r\n  wrap = <table width="300" border="0" cellspacing="0" cellpadding="0"><tr><td><img src="clear.gif" width="1" hspace="200" height="1" vspace="3" border="0" alt="" /></td></tr> | </table>\r\n  NO.linkWrap = {$menu.L0.fontWrap}\r\n  NO.doNotLinkIt = {$menu.L0.noLink}\r\n  NO.allWrap = <tr><td><img src="clear.gif" width="1" height="1" vspace="3" border="0" alt="" /><br /> | </td></tr>\r\n}\r\ntemp.leftmenu.2 = TMENU\r\ntemp.leftmenu.2 {\r\n  wrap = <tr><td nowrap="nowrap"> | </td></tr>\r\n  target = page\r\n  NO {\r\n    beforeImg =  {$menu.file.bullet}\r\n    beforeROImg = {$menu.file.bullet_RO}\r\n    beforeImgTagParams = hspace="2"\r\n    RO = 1\r\n    after = <br />\r\n    ATagBeforeWrap = 1\r\n    linkWrap= {$menu.L1.fontWrap}\r\n  }\r\n}\r\n\r\n\r\n\r\nleft.bgImg = {$menu.file.bgImg}\r\nleft.bodyTag = <body bgcolor="{$menu.bgCol}" alink="{$alink}" vlink="{$vlink}" link="{$link}">\r\nleft.noLinkUnderline = 1\r\n\r\nleft.70.if.isTrue = {$GIFBUILDER_logo}\r\nleft.70 = IMAGE\r\nleft.70.file = GIFBUILDER\r\nleft.70.file {\r\n  XY = 150,80\r\n  backColor = {$menu.bgCol} \r\n  10 = IMAGE\r\n  10.file = {$file.logo}\r\n}\r\nleft.70.params = \r\nleft.70.wrap = <table border="0" cellpadding="0" cellspacing="0"><tr><td colspan="2"> | </td></tr>\r\nleft.70.linkWrap = <a href="index.php?{0}" target="_top"> | </a>\r\n\r\nleft.75.if.isTrue = {$GIFBUILDER_logo}\r\nleft.75.if.negate = 1\r\nleft.75 = IMAGE\r\nleft.75.file = {$file.logo}\r\nleft.75.params = \r\nleft.75.wrap = <table border="0" cellpadding="0" cellspacing="0"><tr><td colspan="2"> | </td></tr>\r\nleft.75.linkWrap = <a href="index.php?{0}" target="_top"> | </a>\r\n\r\nleft.80 = HTML\r\nleft.80.value = <tr><td></td><td bgcolor="{$page.lineCol}"><img src="clear.gif" width="1" height="{$page.lineHeight}" border="0" alt="" /></td></tr>    \r\nleft.80.value.if.isTrue = {$page.lineHeight}\r\n\r\nleft.90 = HTML\r\nleft.90.value = <tr><td><img src="clear.gif" width="{$page.menuXDistance}" height="1" border="0" alt="" /></td><td>\r\nleft.95 = CLEARGIF\r\nleft.95.height={$page.menuYDistance}\r\nleft.100 < temp.leftmenu\r\nleft.110 = HTML\r\nleft.110.value = </td></tr></table>\r\n\r\n\r\npage.bgImg = {$page.file.bgImg}\r\npage.bodyTag < styles.content.bodyTag\r\npage.10 = COBJ_ARRAY\r\npage.10 {\r\n  wrap = <table border="0" cellpadding="0" cellspacing="0" width="2"><tr><td><img src="clear.gif" width="1" height="1" border="0" alt="" /></td><td><img src="clear.gif" hspace="200" width="1" height="1" border="0" alt="" /></td></tr> | </table>\r\n  1 = COBJ_ARRAY\r\n  1 {\r\n    wrap = <tr><td><img src="clear.gif" width="1" vspace="39" height="1" border="0" alt="" /></td><td valign="top"> | </td></tr>\r\n    1 = HTML\r\n    1.value = <table border="0" cellpadding="0" cellspacing="0"><tr><td><img src="clear.gif" width="1" hspace="10" vspace="7" height="1" border="0" alt="" /></td><td><img src="clear.gif" width="1" hspace="40" height="1" border="0" alt="" /></td><td><img src="clear.gif" width="1" height="1" border="0" alt="" /></td></tr><tr><td></td><td colspan="2">\r\n\r\n    5 = TEXT\r\n    5.data = levelTitle:1\r\n    5.wrap = {$page.L0.titleWrap}\r\n\r\n    10 = HTML\r\n    10.value = </td></tr><tr><td></td><td></td><td>\r\n\r\n    15 = TEXT\r\n    15.data = levelTitle:2\r\n    15.wrap = {$page.L1.titleWrap}\r\n    20 = HTML\r\n    20.value = </td></tr></table>\r\n  }\r\n\r\n  10 = HTML\r\n  10.value = <tr><td colspan="2" bgcolor="{$page.lineCol}"><img src="clear.gif" width="1" height="2" border="0" alt="" /></td></tr>\r\n  10.value.if.isTrue = {$page.lineHeight}\r\n\r\n  15 = TEXT\r\n  15.value = <tr><td colspan="2" valign="top">\r\n\r\n  20 = CTABLE\r\n  20.c.5 < styles.content.editPanelPage\r\n  20.c.10 < styles.content.get\r\n  20.c.20  < styles.content.lastUpdate\r\n  20.c.30  < styles.content.typo3_powered\r\n  20.cWidth={$contentWidth}\r\n  20.offset = {$contentOffset}\r\n  \r\n  30 = TEXT\r\n  30.value = </td></tr>\r\n}\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\nframeset.headerData.999 < plugin.meta\r\n\r\n', 'Standard-template\r\n\r\nThis template is a frame-based template with a textbased menu (2 levels) in the left frame. \r\nIn the top of the left frame you can place a logo. The top of the page-frame displays the title of the current page.\r\n\r\nContent is displayed in only one column.\r\nYou can define background-images in the frames.\r\n');
INSERT INTO static_template VALUES ('57', '0', '1054752459', '961515307', 'cSet (default)', '', '# *******************************\r\n# *** Overriding constants\r\n# *******************************\r\n\r\n\r\ncontent {\r\n  defaultHeaderType = 1\r\n  wrap.header1 = <font face="{$cSet.fontFace}" size="{$cSet.size3}" color="{$cSet.color}"><b> | </b></font>\r\n  wrap.header2 = <font face="{$cSet.fontFace}" size="{$cSet.size2}" color="{$cSet.color1}"><b> | </b></font>\r\n  wrap.header3 = <font face="{$cSet.fontFace}" size="4" color="{$cSet.color}"><b> | </b></font>\r\n  wrap.header4 = <font face="{$cSet.fontFace}" size="5" color="{$cSet.color}"><b> | </b></font>\r\n\r\n  case.header1 = \r\n  case.header2 = \r\n\r\n  wrap2.header1 = \r\n  wrap2.header2 = \r\n  wrap2.header3 = \r\n\r\n  wrap.headerDate = <font face="{$cSet.fontFace}" size="{$cSet.size1}" color="{$cSet.color2}"><b>|:</b></font><br />\r\n\r\n  defaultSubHeaderType = 3\r\n  wrap.subheader1 = <font face="{$cSet.fontFace}" size="{$cSet.size2}" color="{$cSet.color}"> | </font>\r\n  wrap.subheader2 = <font face="{$cSet.fontFace}" size="{$cSet.size1}" color="{$cSet.color}"><b> | </b></font>\r\n  wrap.subheader3 = <font face="{$cSet.fontFace}" size="{$cSet.size1}" color="{$cSet.color2}"><b> | </b></font>\r\n\r\n  headerSpace = 0|5\r\n  space = 0|10\r\n  wrap.bodytext = |<br />\r\n  linkToTop = <div align="right"><a href="#top"><font color="{$cSet.color2}" face="{$cSet.fontFace}" size="{$cSet.size1}"><b>To top</b></font></a></div><br />\r\n  menuWrap = <b><font color="{$cSet.color2}" face="{$cSet.fontFace}" size="{$cSet.size2}"> | </font></b>\r\n  subMenuWrap = <b><font color="{$cSet.color1}" face="{$cSet.fontFace}" size="{$cSet.size1}"> | </font></b>\r\n  tableCellColor = {$cSet.tableCellColor}\r\n  tableCellWrap = <b>|</b>\r\n  splash.bgCol = {$cSet.pageColor}\r\n}\r\n\r\n\r\nstyles.content.textStyle {\r\n  face = {$cSet.fontFace.text}\r\n  size = {$cSet.size2}\r\n  color =  {$cSet.color}\r\n  color1 = {$cSet.color1}\r\n  color2 = {$cSet.color2}\r\n}\r\n\r\nstyles.content.tableStyle {\r\n  color1 = {$cSet.color1}\r\n  color2 = {$cSet.color2}\r\n}\r\n\r\nstyles.content.links.wrap = <b>|</b>\r\nstyles.content.links.sword = <font color="red"><b>|</b></font>\r\n\r\nstyles.content.uploads.wrap  < content.menuWrap\r\n\r\nstyles.content.frames {\r\n  1.bgCol = {$cSet.tableCellColor}\r\n  2.bgCol = {$cSet.tableCellColor}\r\n  2.borderCol = {$cSet.color}\r\n  2.borderThickness = 1\r\n  ruler.lineColor = {$cSet.color}\r\n}\r\n\r\nstyles.content.imgFrames {\r\n  bgCol = {$cSet.pageColor}\r\n  bottomCol = black\r\n}\r\n\r\nstyles.content.imgtext {\r\n  captionWrap = <font face="{$cSet.fontFace}" size="{$cSet.size1}" color="{$cSet.color1}"><b> | </b></font>\r\n}\r\n\r\nstyles.content.mailform {\r\n  fieldWrap = \r\n  labelWrap = <font face="{$cSet.fontFace}" size="{$cSet.size2}" color="{$cSet.color}"><b> | </b></font>\r\n  radioWrap = <font face="{$cSet.fontFace}" size="{$cSet.size1}" color="{$cSet.color}"><b> | </b></font><br />\r\n  REQ.labelWrap = <font face="{$cSet.fontFace}" size="{$cSet.size2}" color="{$cSet.color2}"><b> | </b></font>\r\n  border = 5\r\n}\r\n\r\nstyles.content.searchresult {\r\n  face = {$cSet.fontFace}\r\n  size = {$cSet.size2}\r\n  color = {$cSet.color2}\r\n  head.face = {$cSet.fontFace}\r\n  head.size = {$cSet.size3}\r\n  header.wrap = <font face="{$cSet.fontFace}" size="{$cSet.size3}" color="{$cSet.color2}"><b> | </b></font>\r\n  header.bgCol = {$cSet.tableCellColor}\r\n}\r\n\r\nstyles.sitemap.text {\r\n  target = \r\n  itemWrap < content.menuWrap\r\n}\r\n\r\n\r\nstyles.header.gfx1 {\r\n  bgCol = {$cSet.pageColor}\r\n  fontColor = {$cSet.color1}\r\n}\r\n\r\n\r\n\r\n\r\n## Main configuration:\r\n\r\n  # cat=cSet/color/1; type=color; label=Background color of page: This also affects the background color of graphical headers and frames on images.\r\ncSet.pageColor = white\r\n # cat=cSet/color/2; type=color; label=Tablecells: Color of tablecells in content element "Tables", Background color for the frameoption of content elements, Searchresult header background color\r\ncSet.tableCellColor = yellow\r\n # cat=cSet/color/3; type=color; label= "black"-color: Defines the color of all kinds of things, that normally have a dark color. Like headers, borderlines and such. Should be a dark color.\r\ncSet.color = black\r\n # cat=cSet/color/4; type=color; label= Primary alternative color: Used for eg. header layout 2 and 5, Image captions and as "Color 1" in color selectors\r\ncSet.color1 = green\r\n # cat=cSet/color/5; type=color; label= Secondary alternative color: Used for searchresults, "To top"-link, Headerdate, Subheader 3, content element "Menu", "Required" color in forms, and as "Color 2" in color selectors\r\ncSet.color2 = red\r\n # cat=cSet/typo/1; type=small; label= Primary FontFace: The fontface used almost everywhere in <font>-tags. Exceptions are bodytext. Examples: "Times", "Verdana", "Arial"\r\ncSet.fontFace = Arial\r\n # cat=cSet/typo/2; type=small; label= Text FontFace: Used for the content bodytext\r\ncSet.fontFace.text = Arial\r\n\r\n # cat=cSet/typo/3; type=int[1-5]; label= Fontsize 1: Used for Headerdate, Subheader 2 and 3, "Link to top", Image captions and text for radiobuttons in forms\r\ncSet.size1 = 1\r\n # cat=cSet/typo/4; type=int[1-5]; label= Fontsize 2: Used for Bodytext, Header 2, Subheader 1, content element "Menu", Labels for forms and searchresults.\r\ncSet.size2 = 2\r\n # cat=cSet/typo/5; type=int[1-5]; label= Fontsize 3: Used for Header 1 and headers in search-results.\r\ncSet.size3 = 3\r\n\r\n\r\n\r\nTSConstantEditor.cset {\r\n  header = Constant definitions\r\n  description = CSET is a small collection of constants that substitutes other constants throughout the templates. // When you include the "cSet" static_template, you can focus on a few major configurations like the general colors and font faces used. These values are then globally substituted by the "cSet"-constants.// //"cSet" Contains ONLY definition of constants and is meant to be included in templates AFTER the content-rendering-template (eg. "Content (default)") is included. Often it\'s included in the final template after inclusion of the standard template. These constants overrides constants in static template "content (default)" and the included templates of this template. // The point of this template is to simplify configuration of content-rendering by providing a collection of constants which is used in other constants. Makes it easy to choose the same color or font throughout a template.\r\n}\r\n', '', 'Constant definitions\r\n\r\nContains ONLY definition of constants and is meant to be included in templates AFTER the content-rendering-template (eg. "Content (default)") is included. Often it\'s included in the final template after inclusion of the standard template.\r\n\r\nThese constants overrides constants in static template "content (default)" and the included templates of this template.\r\n\r\nThe point of this template is to simplify configuration of content-rendering by providing a collection of constants which is used in other constants. Makes it easy to chose the same color or font throughout a template\r\n\r\nSee the constants present AFTER  "## Main configuration:" in the constants-field!\r\n\r\nStatus:\r\nChanged 28-06-2000\r\n');
INSERT INTO static_template VALUES ('58', '0', '1054753334', '983214718', 'styles.gmenu.first (EXT1)', '', 'styles.gmenu.first.button.file {\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=EXTENSION, Left image: This image is placed to the left on the menu items. NOTE: This image decides the height of the menu items!\r\n  left = EXT:statictemplates/media/buttons/left.gif\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=EXTENSION, Tiled image: This image is tiled horizontally over the background on the menu items.\r\n  middle = EXT:statictemplates/media/buttons/middle.gif\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=EXTENSION, Right image: This image is placed to the right on the menu items.\r\n  right = EXT:statictemplates/media/buttons/right.gif\r\n}\r\n\r\nstyles.gmenu.first.RO.button.file {\r\n    # cat=menu/file/x2; type=file[IMAGE_EXT]; label=EXTENSION, Rollover, Left image: This image is placed to the left on the menu items. NOTE: This image decides the height of the menu items!\r\n  left = EXT:statictemplates/media/buttons/left_ro.gif\r\n    # cat=menu/file/x2; type=file[IMAGE_EXT]; label=EXTENSION, Rollover, Tiled image: This image is tiled horizontally over the background on the menu items.\r\n  middle = EXT:statictemplates/media/buttons/middle_ro.gif\r\n    # cat=menu/file/x2; type=file[IMAGE_EXT]; label=EXTENSION, Rollover, Right image: This image is placed to the right on the menu items.\r\n  right = EXT:statictemplates/media/buttons/right_ro.gif\r\n}\r\n\r\nstyles.gmenu.first.ACT.button.file {\r\n    # cat=menu/file/x3; type=file[IMAGE_EXT]; label=EXTENSION, Active, Left image: This image is placed to the left on the menu items. NOTE: This image decides the height of the menu items!\r\n  left = EXT:statictemplates/media/buttons/left_ro.gif\r\n    # cat=menu/file/x3; type=file[IMAGE_EXT]; label=EXTENSION, Active, Tiled image: This image is tiled horizontally over the background on the menu items.\r\n  middle = EXT:statictemplates/media/buttons/middle_ro.gif\r\n    # cat=menu/file/x3; type=file[IMAGE_EXT]; label=EXTENSION, Active, Right image: This image is placed to the right on the menu items.\r\n  right = EXT:statictemplates/media/buttons/right_ro.gif\r\n}\r\n\r\n    # cat=\r\nstyles.gmenu.first.height = \r\n\r\n\r\n  # cat=basic/enable; type=comment; label=[FIRST-template] GMENU EXTENSION: Click this to enable the gmenu-extension for the "FIRST" static template. Only do this, if you have included "styles.gmenu.first (EXT1)" with the FIRST template!\r\npage.first_gmenu_extension = #\r\n', 'styles.gmenu.first = GMENU\r\nstyles.gmenu.first.NO {\r\n  XY = [10.w]+[20.w]+[5.w]+[6.w] , [5.h]\r\n\r\n  4 = IMAGE\r\n  4.file = {$styles.gmenu.first.button.file.middle}\r\n  4.tile = 10,1\r\n  5 = IMAGE\r\n  5.file = {$styles.gmenu.first.button.file.left}\r\n  6 = IMAGE\r\n  6.file = {$styles.gmenu.first.button.file.right}\r\n  6.align = r,t\r\n  6.offset = -[20.w]\r\n}\r\n\r\nstyles.gmenu.first.RO {\r\n  XY = [10.w]+[20.w]+[5.w]+[6.w] , [5.h]\r\n\r\n  4 = IMAGE\r\n  4.file = {$styles.gmenu.first.RO.button.file.middle}\r\n  4.tile = 10,1\r\n  5 = IMAGE\r\n  5.file = {$styles.gmenu.first.RO.button.file.left}\r\n  6 = IMAGE\r\n  6.file = {$styles.gmenu.first.RO.button.file.right}\r\n  6.align = r,t\r\n  6.offset = -[20.w]\r\n}\r\n\r\nstyles.gmenu.first.ACT {\r\n  XY = [10.w]+[20.w]+[5.w]+[6.w] , [5.h]\r\n\r\n  4 = IMAGE\r\n  4.file = {$styles.gmenu.first.ACT.button.file.middle}\r\n  4.tile = 10,1\r\n  5 = IMAGE\r\n  5.file = {$styles.gmenu.first.ACT.button.file.left}\r\n  6 = IMAGE\r\n  6.file = {$styles.gmenu.first.ACT.button.file.right}\r\n  6.align = r,t\r\n  6.offset = -[20.w]\r\n}\r\n\r\n\r\n\r\n{$page.first_gmenu_extension} top.20.1 < styles.gmenu.first\r\n{$page.first_gmenu_extension} top.40.1 < styles.gmenu.first\r\n{$page.first_gmenu_extension} bottom.40.1 < styles.gmenu.first\r\n\r\n', 'styles.gmenu.first - extension:\r\n\r\nThis modification adds support for a graphics in the back of the buttons. This works by incorporating 3 gif-files. One for the left end, one for the right end and finally one for the background. The background gif MUST be tileable in the horizontal direction.\r\n\r\nCHANGES:\r\n- the height of the buttons is now defined by the height of the gif-file at the left-end.\r\n- before the button had an extra 12 pixels width in addition to the width of the text and end-bullet. This is discarded. This just means, that you should probably adjust the offset of the text again.\r\n- You may need to re-create the end-bullet because the tiled background may appear "below" it.\r\n\r\nHOW-TO:\r\n- create 3 gif-files, one for left, right and middle. Upload them as resources to the template and enter their filenames as the constants you see above.\r\n- remember that the "middle"-file is tiled 10 times in the horizontal direction!\r\n\r\n\r\nUSE THE NEW GMENU-object with the FIRST template:\r\n\r\nIf you want to use this with the standard template FIRST, you should put this in the "Setup" field of your template. These will copy the new styles.gmenu.first-object into the right positions in the object-tree of the template:\r\n\r\n\r\n');
INSERT INTO static_template VALUES ('59', '0', '1054753433', '983217378', 'styles.hmenu.tu (EXT1)', '', 'styles.hmenu.tu.L3 {\r\n    # cat=menu/file/3; type=file[IMAGE_EXT]; label=Level-3, Background image\r\n  file.bgImg = EXT:statictemplates/media/buttons/menulevel2.gif\r\n    # cat=menu/typo/3; type=file[ttf]; label=Level-3, Font file\r\n  file.fontFile =\r\n    # cat=menu/typo/3; type=color; label=Level-3, Font color\r\n  fontColor = black\r\n    # cat=menu/typo/3; type=int[1-40]; label=Level-3, Font size\r\n  fontSize = 10\r\n    # cat=menu/typo/3; type=offset; label=Level-3, Text offset: Enter the offset of the text from the upper-left corner of the menu items\r\n  offset = 40,8\r\n    # cat=menu/typo/3; type=color; label=Level-3, Rollover/Active: Enter the color of the text on the menu item when mouseover OR when the item is "active".\r\n  RO.fontColor = navy\r\n}\r\n\r\n  # cat=basic/enable; type=comment; label=[TU-template] 3rd LEVEL EXTENSION: Click this to enable the 3rd level extension for the "TU" static template. Only do this, if you have included "styles.hmenu.tu (EXT1)" with the TU template!\r\npage.tu_thirdLevel_extension = #\r\n', '# LEVEL 3:\r\nstyles.hmenu.tu.3 = GMENU\r\nstyles.hmenu.tu.3.NO {\r\n  wrap = |<br />\r\n  XY = [10.w],[10.h]\r\n  reduceColors = {$styles.hmenu.tu.reduceColors}\r\n  10 = IMAGE\r\n  10.file = {$styles.hmenu.tu.L3.file.bgImg}\r\n  20 = TEXT\r\n  20 {\r\n    text.field = nav_title // title\r\n    fontFile = {$styles.hmenu.tu.L3.file.fontFile}\r\n    fontColor = {$styles.hmenu.tu.L3.fontColor}\r\n    fontSize = {$styles.hmenu.tu.L3.fontSize}\r\n    offset = {$styles.hmenu.tu.L3.offset}\r\n    niceText = 1\r\n  }\r\n}\r\nstyles.hmenu.tu.3.RO < styles.hmenu.tu.3.NO\r\nstyles.hmenu.tu.3.RO = 1\r\nstyles.hmenu.tu.3.RO.20.fontColor = {$styles.hmenu.tu.L3.RO.fontColor}\r\nstyles.hmenu.tu.3.ACT < styles.hmenu.tu.3.RO\r\nstyles.hmenu.tu.3.ACT = 1\r\n\r\n\r\n\r\n\r\n{$page.tu_thirdLevel_extension} page.10.40 < styles.hmenu.tu\r\n\r\n', 'This is an extension to styles.hmenu.tu. This extension includes a third level on the menu. Normally there are only two levels.\r\n');
INSERT INTO static_template VALUES ('60', '0', '1054753001', '983227081', 'plugin.postit1', '', '', '## POST-IT\r\nplugin.postit1 >\r\nplugin.postit1 = PHP_SCRIPT\r\nplugin.postit1 {\r\n  file = EXT:statictemplates/media/scripts/postit.inc\r\n  data.field = bodytext\r\n  images.1 = IMAGE\r\n  images.1.file = GIFBUILDER\r\n  images.1.file {\r\n    XY = [5.w],[5.h]\r\n    5 = IMAGE\r\n    5.file = EXT:statictemplates/media/uploads/postit_1.gif\r\n    100 = TEXT\r\n    100.text = Testing\r\n    100.offset = -5,60\r\n    100.fontFile = fileadmin/fonts/arial_bold.ttf\r\n    100.fontSize = 15\r\n    100.align=center\r\n  }\r\n  images.2 < .images.1\r\n  images.2.file.5.file = EXT:statictemplates/media/uploads/postit_2.gif\r\n  images.2.file.100.angle = 11\r\n  images.2.file.100.offset = -2,79\r\n  images.3 < .images.1\r\n  images.3.file.5.file = EXT:statictemplates/media/uploads/postit_3.gif\r\n  images.3.file.100.angle = -13\r\n  images.3.file.100.offset = -7,81\r\n\r\n  cols = 3\r\n  textBox {\r\n    chars = 16\r\n    lineDist = 18\r\n    tmplObjNumber = 100\r\n    Valign = center\r\n    maxLines = 5\r\n  }\r\n  typolink {\r\n    parameter.current = 1\r\n    extTarget = {$styles.content.links.extTarget}\r\n    target = {$styles.content.links.target}\r\n  }\r\n}\r\n', 'PLUGIN: Post-it notes\r\nAUTHOR: Kasper Sk�rh�j, kasper@typo3.com\r\n\r\n\r\nHow to activate this:\r\n- Just include this static template in your template provided that the static template "content (default)" is already included ranging higher in the list. That\'s all.\r\n\r\nHow to put a post-it note on a page:\r\n- Create a content element of the type "Textbox"\r\n- Select "the other" type to be "postit 1"\r\n- Now, every line in the bodytext-field represents a postit note.\r\n- The lines are splitted by a "|" (like tablecells are); The first part is the text, the second part is the kind (1-3) and the last part is the link (typolink).\r\n\r\nExample:\r\n\r\nThis is a postit note! | 2 | 77\r\n\r\n... this line would create a postit note of type 2 (rotated left), write the text "This is a postit note" on it and let it be a link to the page with id=77.');
INSERT INTO static_template VALUES ('82', '0', '1054752829', '999775222', 'plugin.alt.plaintext (99)', '', 'plugin.alt.plaintext {\r\n    # cat=plugin.plaintext/file; type=file[html,htm,tmpl,txt]; label= Template File for plaintext version: &type=99 defines a printer friendly design for page content. This template file lets you define the position of page titles and the content.\r\n  file.template = EXT:statictemplates/media/scripts/plaintext_content.tmpl\r\n\r\n  siteUrl = http://www.example.com.test/example/\r\n}', 'lib.alt_plaintext.renderObj = USER\r\nlib.alt_plaintext.renderObj.userFunc = user_plaintext->main_plaintext\r\nlib.alt_plaintext.renderObj {\r\n  header.defaultType = 1\r\n  header.date = D-m-Y\r\n  header.datePrefix = |Date: |\r\n  header.linkPrefix = | - Headerlink: |\r\n  header.1.preLineLen = 76\r\n  header.1.postLineLen = 76\r\n  header.1.preBlanks=1\r\n  header.1.stdWrap.case = upper\r\n\r\n  header.2 < .header.1\r\n  header.2.preLineChar=*\r\n  header.2.postLineChar=*\r\n\r\n  header.3.preBlanks=2\r\n  header.3.postBlanks=1\r\n  header.3.stdWrap.case = upper\r\n  \r\n  header.4 < .header.1\r\n  header.4.preLineChar= =\r\n  header.4.postLineChar= =\r\n  header.4.preLineBlanks= 1\r\n  header.4.postLineBlanks= 1\r\n\r\n  header.5.preBlanks=1\r\n  header.5.autonumber=1\r\n  header.5.prefix = |: >> |\r\n\r\n\r\n  siteUrl = {$plugin.alt.plaintext.siteUrl}\r\n  defaultOutput (\r\n|\r\n[Unrendered Content Element; ###CType### ]\r\n|\r\n  )\r\n\r\n  uploads.header = |DOWNLOADS:|\r\n\r\n  images.header = |IMAGES:|\r\n  images.linkPrefix = | - Imagelink: |\r\n  images.captionHeader = |CAPTION:|\r\n\r\n  bulletlist.0.bullet = |*  |\r\n\r\n  bulletlist.1.bullet = |#  |\r\n\r\n  bulletlist.2.bullet = | - |\r\n\r\n  bulletlist.3.bullet = |>  |\r\n  bulletlist.3.secondRow = |.  |\r\n  bulletlist.3.blanks = 1\r\n\r\n  menu = <tt_content.menu.20\r\n  shortcut = <tt_content.shortcut.20\r\n  shortcut.0.conf.tt_content = <lib.alt_plaintext.renderObj\r\n  shortcut.0.tables = tt_content\r\n\r\n  bodytext.stdWrap.parseFunc.tags {\r\n    link < styles.content.parseFunc.tags.link\r\n    typolist = USER\r\n    typolist.userFunc = user_plaintext->typolist\r\n    typolist.siteUrl = {$plugin.alt.plaintext.siteUrl} \r\n    typolist.bulletlist =< lib.alt_plaintext.renderObj.bulletlist\r\n    typohead = USER\r\n    typohead.userFunc = user_plaintext->typohead\r\n    typohead.siteUrl = {$plugin.alt.plaintext.siteUrl}\r\n    typohead.header =< lib.alt_plaintext.renderObj.header\r\n    typocode = USER\r\n    typocode.userFunc = user_plaintext->typocode\r\n    typocode.siteUrl = {$plugin.alt.plaintext.siteUrl}\r\n  }\r\n}\r\n\r\n\r\n\r\n## Insert DMailer Boundaries for all elements.\r\nconfig.insertDmailerBoundaries = 1\r\n\r\nincludeLibs.plaintextLib = EXT:statictemplates/media/scripts/plaintextLib.inc\r\n\r\n## Set up page/type number:\r\nalt_plaintext >\r\nalt_plaintext = PAGE\r\nalt_plaintext.typeNum=99\r\n\r\nalt_plaintext.config.disableAllHeaderCode = 1\r\nalt_plaintext.10 = TEMPLATE\r\nalt_plaintext.10 {\r\n  template = FILE\r\n  template.file = {$plugin.alt.plaintext.file.template}\r\n  marks.CONTENT < styles.content.get\r\n  marks.CONTENT.renderObj = < lib.alt_plaintext.renderObj\r\n  marks.DATE = TEXT\r\n  marks.DATE.data = date:U\r\n  marks.DATE.strftime = %e. %B %Y\r\n}\r\n\r\n## Setting up a testpage at type 199\r\nalt_plaintext_test < alt_plaintext\r\nalt_plaintext_test {\r\n  wrap = <pre>|</pre>\r\n  typeNum=199\r\n  config.no_cache=1\r\n}\r\n\r\n', 'Creates a PAGE object, alt_plaintext, with typeNum = 99. This page displays the page content in plain text layout designed for Direct Mail purposes.\r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.');
INSERT INTO static_template VALUES ('83', '0', '1054752886', '999781305', 'plugin.alt.xml (96)', '', 'plugin.alt.xml >\r\nplugin.alt.xml {\r\n\r\n}\r\n', '## Set up page/type number:\r\nalt_xml >\r\nalt_xml = PAGE\r\nalt_xml {\r\n  typeNum=96\r\n  config.disableAllHeaderCode = 1\r\n  config.additionalHeaders = Content-type: text/xml\r\n\r\n  ## Includes the newsLib:\r\n  includeLibs.alt_xml = EXT:statictemplates/media/scripts/xmlversionLib.inc\r\n\r\n  ## Inserting the USER cObject for XML rendering\r\n  10 = USER\r\n  10 {\r\n    userFunc = user_xmlversion->main_xmlversion\r\n  }\r\n}', 'Creates a PAGE object, alt_xml, with typeNum = 96. This page displays the \'normal\' page content along with trivial page information in XML format.\r\n\r\nStill experimental.\r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.');
INSERT INTO static_template VALUES ('86', '0', '1054752801', '999808177', 'plugin.alt.pda (95)', '', 'plugin.alt.pda >\r\nplugin.alt.pda {\r\n    # cat=plugin.pda/file; type=file[html,htm,tmpl,txt]; label= Template File for PDA version: &type=95 defines a PDA friendly design for page content. \r\n  file.template = EXT:statictemplates/media/scripts/pdaversion_content.tmpl\r\n}', '## Defining temporary object:\r\ntemp.alt_pda.mainMenu = HMENU\r\ntemp.alt_pda.mainMenu {\r\n  1 = TMENU\r\n  1 {\r\n    expAll = 1\r\n    target = \r\n    NO.allWrap = <h3>|</h3>\r\n  }\r\n  2 < .1\r\n  2.NO.allWrap = &nbsp;&nbsp;<b>|</b><br />\r\n  3 < .1\r\n  3.NO.allWrap = &nbsp;&nbsp;&nbsp;&nbsp;|<br />\r\n}\r\n\r\n\r\ntemp.alt_pda.pageNav = HMENU\r\ntemp.alt_pda.pageNav {\r\n  special = browse\r\n  special {\r\n    items = prev | up | next\r\n    items.prevnextToSection = 1\r\n    up.fields.title = UP\r\n    prev.fields.title = &lt; PREV\r\n    next.fields.title = NEXT &gt;\r\n  }\r\n  1 = TMENU\r\n  1.target = \r\n  1.NO {\r\n    linkWrap = [ | ]\r\n  }\r\n}\r\n\r\n\r\ntemp.alt_pda.rootLine = HMENU\r\ntemp.alt_pda.rootLine {\r\n  special = rootline\r\n  1 = TMENU\r\n  1.target = \r\n  1.wrap =  | <br />\r\n  1.NO {\r\n    linkWrap = | &nbsp;&gt;&nbsp; |*||*|   |\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n## Set up page\r\nalt_pda >\r\nalt_pda = PAGE\r\nalt_pda.typeNum=95\r\nalt_pda.config.forceTypeValue=95\r\n\r\nalt_pda.10 = TEMPLATE\r\nalt_pda.10 {\r\n  template = FILE\r\n  template.file = {$plugin.alt.pda.file.template}\r\n  marks {\r\n    PAGE_TITLE = TEXT\r\n    PAGE_TITLE.field = title\r\n    PAGE_SUBTITLE = TEXT\r\n    PAGE_SUBTITLE.field = subtitle\r\n    PAGE_AUTHOR = TEXT\r\n    PAGE_AUTHOR.field = author\r\n    PAGE_AUTHOR.required=1\r\n    PAGE_AUTHOR.typolink.parameter.field = author_email\r\n    PAGE_UID = TEXT\r\n    PAGE_UID.field = uid\r\n    CONTENT < styles.content.get\r\n\r\n    MAIN_MENU = TEXT\r\n    MAIN_MENU.value =\r\n    NAVIGATION = TEXT\r\n    NAVIGATION.value =\r\n  }\r\n  workOnSubpart = DOCUMENT_BODY\r\n}\r\n\r\n\r\n## Inserting the temporary objects:\r\n[treeLevel = 0]\r\nalt_pda.10.marks.MAIN_MENU < temp.alt_pda.mainMenu\r\n[global]\r\n\r\n[treeLevel = 1,2,3,4,5]\r\nalt_pda.10.marks.NAVIGATION = COA \r\nalt_pda.10.marks.NAVIGATION {\r\n  10 < temp.alt_pda.rootLine\r\n  20 < temp.alt_pda.pageNav\r\n}\r\n[global]\r\n\r\n\r\n## If the browser is a PDA-device, eg. AvantGo\r\n[device=pda]\r\n\r\nalt_pda.typeNum=0\r\nalt_pda.config.forceTypeValue=0\r\n\r\n[global]\r\n\r\n', 'Creates a PAGE object, alt_pda, with typeNum = 95. \r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.\r\n\r\nDepends on \'content (default)\' or similar to be already included.');
INSERT INTO static_template VALUES ('67', '0', '1054753495', '985353522', 'styles.sitemap.gs', '', 'styles.sitemap.gs >\r\nstyles.sitemap.gs {\r\n  entryLevel = 0\r\n    # cat=gs-sitemap; type=small; label=exclude PID: If there\'s certain page-id number you would like to exclude from the sitemap (eg. the sitemap-page itself), then enter it here (comma-list)\r\n  excludeUids =\r\n\r\n    # cat=gs-sitemap/links; type=small; label=Target: The target of the links in the sitemap. \r\n  target = _top\r\n    # cat=gs-sitemap/color; type=color; label=Background color, headers\r\n  color = olive\r\n\r\n    # cat=gs-sitemap/typo; type=wrap; label=Sitemap, Header Wrap: This wrap is placed around the header of the sitemap.\r\n  headerWrap = <div align="center"><b><font size="1" face="Verdana, Arial, Helvetica, sans-serif" color="white"> | </font></b></div>\r\n    # cat=gs-sitemap/typo; type=options[,upper,lower]; label=Header case\r\n  headerCase = upper\r\n\r\n    # cat=gs-sitemap/typo; type=wrap; label=Sitemap, Head Wrap 1: This wrap is placed around the every head item in the sitemap.\r\n  wrap1 = <b><font size="1" face="Verdana, Arial, Helvetica, sans-serif" color="white"> | </font></b>\r\n    # cat=gs-sitemap/typo; type=wrap; label=Sitemap, Second Wrap 2: This wrap is placed around the every second-level item in the sitemap.\r\n  wrap2 = <font face="Verdana, Arial, Helvetica, sans-serif" size="1">|</font>\r\n    # cat=gs-sitemap/typo; type=wrap; label=Sitemap, Third Wrap 3: This wrap is placed around the every third-level item in the sitemap.\r\n  wrap3 = <font face="Verdana, Arial, Helvetica, sans-serif" size="1">|</font>\r\n\r\n    # cat=gs-sitemap/; type=string; label=Bullet, Second Level\r\n  bullet2 = <img src="EXT:statictemplates/media/bullets/blackdot.gif" width="5" height="9" alt="" />\r\n    # cat=gs-sitemap/; type=string; label=Bullet, Third Level\r\n  bullet3 = <img src="EXT:statictemplates/media/bullets/blackdot.gif" width="3" height="6" hspace="4" vspace="2" alt="" />\r\n\r\n    # cat=gs-sitemap; type=boolean; label=Level 3?: If you would like the sitemap to render only two levels, un-check this option\r\n  level3 = 1\r\n}\r\n\r\n\r\n', '\r\n# SITE MAP\r\n\r\nstyles.sitemap.gs >\r\nstyles.sitemap.gs = COA\r\nstyles.sitemap.gs.wrap = <table border="0" cellspacing="0" cellpadding="0" align="center"> | </table>\r\nstyles.sitemap.gs {\r\n  10 = TEXT\r\n  10.data = leveltitle : {$styles.sitemap.gs.entryLevel}\r\n  10.case = {$styles.sitemap.gs.headerCase}\r\n  10.wrap = {$styles.sitemap.gs.headerWrap}\r\n  10.wrap2 = <tr><td><table border="0" cellpadding="2" cellspacing="1" align="center"><tr bgcolor="{$styles.sitemap.gs.color}"><td> | </td></tr></table></td></tr>\r\n  15 = TEXT\r\n  15.value = <tr align="center" valign="middle"><td><img src="EXT:statictemplates/media/bullets/blackclear.gif" width="1" height="10" alt="" /></td></tr><tr bgcolor="{$styles.sitemap.gs.color}"><td><img src="clear.gif" width="1" height="1" alt="" /></td></tr>\r\n  19 = TEXT\r\n  19.value = <tr><td>\r\n\r\n  # Here comes the sitemap below...\r\n  \r\n  21 = TEXT\r\n  21.value =  </td></tr>\r\n}\r\n\r\n\r\n# The sitemap itself:\r\nstyles.sitemap.gs.20 = COA\r\nstyles.sitemap.gs.20.wrap = <table border="0" cellspacing="0" cellpadding="0" align="center"> | </table>\r\nstyles.sitemap.gs.20.10 = HMENU\r\nstyles.sitemap.gs.20.10 {\r\n  entryLevel = {$styles.sitemap.gs.entryLevel}\r\n  excludeUidList = {$styles.sitemap.gs.excludeUids}\r\n  wrap = <tr align="center" valign="middle"> |</tr>\r\n  1 = TMENU\r\n  1.NO {\r\n    doNotShowLink = 1\r\n    before = <td><img src="EXT:statictemplates/media/bullets/blackclear.gif" width="1" height="10" alt="" /></td>\r\n  }\r\n}\r\nstyles.sitemap.gs.20.20 = HMENU\r\nstyles.sitemap.gs.20.20 {\r\n  excludeUidList = {$styles.sitemap.gs.excludeUids}\r\n  entryLevel = {$styles.sitemap.gs.entryLevel}\r\n  wrap = <tr align="left" valign="top"> |</tr>\r\n  1 = TMENU\r\n  1.target = {$styles.sitemap.gs.target}\r\n  1.expAll = 1\r\n  1.NO {\r\n    wrapItemAndSub = <td><table border="0" cellpadding="1" cellspacing="1">|</table></td>\r\n    allWrap = <tr><td bgcolor="{$styles.sitemap.gs.color}" colspan="3"><div align="center">|</div></td></tr>\r\n    linkWrap = {$styles.sitemap.gs.wrap1}\r\n    ATagBeforeWrap = 1\r\n  }\r\n  2 = TMENU\r\n  2.expAll = {$styles.sitemap.gs.level3}\r\n  2.target = {$styles.sitemap.gs.target}\r\n  2.NO {\r\n    allWrap = <tr><td align="center" valign="top">{$styles.sitemap.gs.bullet2}</td><td align="left" valign="top" colspan="2">|</td></tr>\r\n    linkWrap = {$styles.sitemap.gs.wrap2}\r\n    ATagBeforeWrap = 1\r\n  }\r\n  3 = TMENU\r\n  3.target = {$styles.sitemap.gs.target}\r\n  3.NO {\r\n    allWrap = <tr><td></td><td align="center" valign="top">{$styles.sitemap.gs.bullet3}</td><td align="left" valign="top">|</td></tr>\r\n    linkWrap = {$styles.sitemap.gs.wrap3}\r\n    ATagBeforeWrap = 1\r\n  }\r\n}\r\n', '');
INSERT INTO static_template VALUES ('69', '0', '1054753669', '994368675', 'template; CANDIDATE', '43,68', '# Template specific\r\nfile {\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Top image, left:  Image in the top of the content column. Page title may be printed on this image.\r\n  left_bar = EXT:statictemplates/media/uploads/candidate/bar_left.gif\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Top image, right:  Image in the top of the right column.\r\n  right_bar = EXT:statictemplates/media/uploads/candidate/bar_right.gif\r\n    # cat=basic/typo; type=file[ttf]; label=Top image, Font file: TrueType (ttf) font for printing the page title on the top image (left).\r\n  left_bar_fontFile = \r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Background image: Background image of the page.\r\n  background = \r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Right column bar: If you enter an image here, it will substitute the \'titlefield\' below the right column top image\r\n  right_subbar = \r\n}\r\n\r\n  # cat=basic/dims; type=offset; label=Page offset: This value defines the margin in pixels from the left and top of the browser window\r\npage.offset = ,20\r\n  # cat=basic; type=options[left,right,center]; label=Alignment of the page: Alignment of the page-table\r\npage.align = center\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table cell where the content is displayed\r\npage.width = 400\r\n  # cat=basic/dims; type=offset; label=Content offset: This value defines the margin in pixels from the left and top of main content table cell\r\npage.contentOffset = 0,0\r\n\r\npagetitle {\r\n    #cat=page/h; type=boolean; label=Page Title, enable: If you set this option, the page title (overruled by the subtitle if present) will be printed right after the menu\r\n  enable = 0\r\n    #cat=page/h; type=wrap; label=Page Title, wrap: Wrapping for the page title after menu\r\n  wrap = <font face="arial,helvetica" size="4" color="#000099"><b>|</b></font><br />\r\n    #cat=page/h; type=int+; label=Page Title, Space before:\r\n  spaceBefore = 7\r\n    #cat=page/h; type=int+; label=Page Title, Space after:\r\n  spaceAfter = 20\r\n}\r\n\r\n\r\nleftBar {\r\n    #cat=basic/typo; type=boolean; label=Enable title on Left Image: If you set this option, the page title (overruled by the subtitle if present) will be printed on the Left Image\r\n  enable = 1\r\n    #cat=basic/typo; type=int+; label=Top image, font size: \r\n  fontSize = 34\r\n    #cat=basic/typo; type=color; label=Top image, font color: \r\n  fontColor = white\r\n    #cat=basic/typo; type=offset; label=Top image, font offset:\r\n  offset = 0,33\r\n    # cat=basic/typo; type=options[left,right,center]; label=Top image, font alignment: \r\n  align = center\r\n}\r\n\r\n  # cat=page/d; type=string; label=Right column title: This is the text string shown in the field right below the top image in the right column\r\npage.titleValue = Link to Typo3.com\r\n  # cat=page/d; type=wrap; label=Right column title, wrap: This is the wrap around the right column title\r\npage.titleWrap = <a href="http://www.typo3.org" target="_top"><font size="1" face="verdana,arial" color="white"><b> | </b></font></a>\r\n\r\n  #cat=page/color; type=color; label=Background color, content frame: \r\npage.contentBgColor = \r\n\r\n  #cat=page/enable; type=boolean; label=Expand Left Image: If you set this option, the left image will expand all over the two columns and the right image will not appear\r\npage.leftImageExpand = 0\r\n\r\n  #cat=page/e; type=color; label=Gap, line color: \r\ngap.linecolor = #000033\r\ngap.width {\r\n    #cat=page/e; type=int+; label=Gap, line width: \r\n  line = 1\r\n    #cat=page/e; type=int+; label=Gap, right space: \r\n  right = 18\r\n    #cat=page/e; type=int+; label=Gap, left space: \r\n  left = 18\r\n}\r\n\r\n\r\nmenu {\r\n    #cat=menu/enable; type=boolean; label=Enable the menu: If you set this option, the menu will appear\r\n  enable = 1\r\n    #cat=menu/color; type=color; label=Background color:\r\n  bgcolor = #000099\r\n    #cat=menu/dims; type=int+; label=Gap between elements: The gap between the menu elements.\r\n  gapwidth=9\r\n    #cat=menu/dims; type=int+; label=Height of each item: The height in pixels of each menu item. This includes the header field in the right column so it follows the menu height!\r\n  itemHeight=1\r\n    #cat=menu/dims; type=int+; label=Space before menu:\r\n  spaceBefore = 7\r\n    #cat=menu/dims; type=int+; label=Space after menu:\r\n  spaceAfter = 20\r\n    #cat=menu/typo; type=wrap; label=Menu item wrap:\r\n  wrap = <font size="1" face="verdana,arial" color="white"><b> | </b></font>\r\n}\r\n\r\n\r\nrightCol {\r\n    #cat=right; type=boolean; label=Enable Right Column: Check this option to enable the right column\r\n  enable = 1\r\n    #cat=right/color; type=color; label=Right column bgColor: This is the background color of content in the right column.\r\n  bgColor = \r\n    #cat=right/dims; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume. NOTE: This is specific for the right column! The figure should approx. match the width of the image in the top of this column!\r\n  maxImageWidth = 200\r\n    #cat=right/typo; type=small; label=Bodytext font face\r\n  textStyle_face = Verdana\r\n    #cat=right/typo; type=int[1-5]; label=Bodytext font size\r\n  textStyle_size = 1\r\n    #cat=right/typo; type=color; label=Bodytext font color\r\n  textStyle_color = black\r\n    #cat=right/typo; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType = 2\r\n    # cat=right; type=comment; label= Left instead of right?: Click this option, if you want the right column to appear to the left instead.\r\n  leftComment = #\r\n    # cat=right; type=int+; label=Content width: This value defines the width in pixels of the table cell where the content is displayed\r\n  width = 200\r\n}\r\n\r\n# General:\r\n\r\ncontent.wrap.header1 = <div align="center"><font face="verdana" size="4" color="#000099"><b> | </b></font></div>\r\ncontent.wrap.header2 = <font face="verdana" size="4" color="#000099"><b> | </b></font>\r\ncontent.wrap.header3 = <div align="center"><font face="verdana" size="5" color="#000099"><b> | </b></font></div>\r\nstyles.content.imgtext {\r\n  borderColor = #000099\r\n  borderThick = 4\r\n}\r\ncontent.bulletImages.default = <img src="EXT:statictemplates/media/uploads/candidate/dot_round.gif" alt="" />\r\nstyles.content.links.wrap = <b> | </b>\r\n\r\n\r\n# THIS IS NORMALLY SET IN STANDARD TEMLATES:\r\n\r\n# Image widths (remember contentwidth!)\r\nstyles.content.imgtext.maxW = 400\r\n\r\n\r\n# Targets\r\nPAGE_TARGET =\r\ncontent.pageFrameObj = \r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = white\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = #000099\r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = #000099\r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = red\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "CANDIDATE"\r\n  description = CANDIDATE is a single-page template with two content columns and a text-based level 1 menu below the top image in the main column.\r\n  bulletlist = Right column: You can disable this column or choose to display it on the left instead. // Right column bar: Text or image. The height is depending on the menu height in the main column. (6) // Top image: The page title (or subtitle if present) is printed on this image. You can disable that. Also you can choose to let the top image expand over both the right column and the main column. In addition the image may vary from section to section on the site as the first image attached to a page on the first menulevel will be used instead. (4,7)// Gap between columns: You can disable it, control the widths and color used. // Right column top image: You can define an image to be shown in the top of the right column. (5) // Text menu: You can disable it and choose to display the page title below it. \r\n  image = gfx/CANDIDATE_basic.gif\r\n  1=page.offset\r\n  2=page.contentOffset\r\n  3=page.width,styles.content.imgtext.maxW\r\n  4=file.left_bar\r\n  5=file.right_bar\r\n  6=file.right_subbar\r\n  7=file.left_bar_fontFile,leftBar.enable,leftBar.fontSize,leftBar.fontColor,leftBar.offset,leftBar.align\r\n  8=file.background,bgCol\r\n}\r\nTSConstantEditor.page {\r\n  header = Standard Template "CANDIDATE"\r\n  image = gfx/CANDIDATE_page.gif\r\n  1=page.leftImageExpand\r\n  2=page.contentBgColor\r\n  3=page.titleValue,page.titleWrap\r\n  4=pagetitle.enable,pagetitle.wrap,pagetitle.spaceBefore,pagetitle.spaceAfter\r\n  5=gap.linecolor,gap.width.line,gap.width.right,gap.width.left\r\n}\r\nTSConstantEditor.menu {\r\n  header = Standard Template "CANDIDATE"\r\n  description = Text based, horizontal menu\r\n  bulletlist = \r\n  image = gfx/CANDIDATE_menu.gif\r\n  1=menu.gapwidth\r\n  2=menu.itemHeight\r\n  3=menu.spaceBefore\r\n  4=menu.spaceAfter\r\n}\r\n', '\r\n# Page title\r\ntemp.pageTitle = TEXT\r\ntemp.pageTitle {\r\n  if.isTrue = {$pagetitle.enable}\r\n  field = title\r\n  override.field = subtitle\r\n  fontTag = {$pagetitle.wrap}\r\n  space = {$pagetitle.spaceBefore} | {$pagetitle.spaceAfter}\r\n}\r\n\r\n\r\n## The header:\r\ntemp.header = IMAGE\r\ntemp.header.wrap = |<br />\r\ntemp.header.file = GIFBUILDER\r\ntemp.header.file {\r\n  XY = [5.w], [5.h]\r\n  5 = IMAGE\r\n\r\n  5.file = {$file.left_bar}\r\n  5.file.import = uploads/media/\r\n  5.file.import.data = levelmedia : 1\r\n  5.file.import.listNum=0\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.text.override.field = subtitle\r\n  10.text.if.isTrue = {$leftBar.enable}\r\n  10.fontFile = {$file.left_bar_fontFile}\r\n  10.fontSize = {$leftBar.fontSize}\r\n  10.fontColor = {$leftBar.fontColor}\r\n  10.offset = {$leftBar.offset}\r\n  10.align = {$leftBar.align}\r\n  10.niceText = 1\r\n}\r\n\r\n## The textmenu\r\ntemp.tmenu = HMENU\r\ntemp.tmenu.if.isTrue = {$menu.enable}\r\ntemp.tmenu.entryLevel = 0\r\ntemp.tmenu.stdWrap.space = {$menu.spaceBefore} | {$menu.spaceAfter}\r\ntemp.tmenu.1 = TMENU\r\ntemp.tmenu.1.wrap = <table border="0" cellpadding="1" cellspacing="0" width="100%"><tr> | </tr></table>\r\ntemp.tmenu.1.NO {\r\n  ATagBeforeWrap = 1\r\n  allWrap = |*||*|     <td bgcolor="{$menu.bgcolor}" align="center" width="10%">  | </td><td width="1%"><img src="clear.gif" width="{$menu.gapwidth}" height="{$menu.itemHeight}" alt="" /></td>     ||     <td bgcolor="{$menu.bgcolor}" align="center" width="10%">  | </td>\r\n  linkWrap = {$menu.wrap}\r\n}\r\ntemp.tmenu.1.ACT < temp.tmenu.1.NO\r\ntemp.tmenu.1.ACT = 1\r\ntemp.tmenu.1.ACT.stdWrap.wrap = <u> |</u>\r\n\r\n## titlefield\r\ntemp.titlefield = IMAGE\r\ntemp.titlefield.file = {$file.right_subbar}\r\ntemp.titlefield.wrap = | <br />\r\ntemp.titlefield.stdWrap.ifEmpty = {$page.titleValue}\r\ntemp.titlefield.stdWrap.ifEmpty.wrap = <table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td bgcolor="{$menu.bgcolor}" align="center">{$page.titleWrap}</td><td bgcolor="{$menu.bgcolor}"><img src="clear.gif" width="1" height="{$menu.itemHeight}" alt="" /></td></tr></table>\r\ntemp.titlefield.stdWrap.space = {$menu.spaceBefore} | {$menu.spaceAfter}\r\n\r\n\r\n## PAGE:\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.noLinkUnderline = 1\r\npage.bodyTagMargins = 0\r\npage.bgImg = {$file.background}\r\npage.wrap = <table border="0" cellpadding="0" cellspacing="0" width="1"><tr> |</tr></table>\r\npage.stdWrap {\r\n  append < temp.header\r\n  append.wrap = |<br />\r\n  append.if.isTrue = {$page.leftImageExpand}\r\n  append.stdWrap.wrapAlign = {$page.align}\r\n\r\n  offsetWrap = {$page.offset}\r\n  offsetWrap.stdWrap.wrapAlign = {$page.align}\r\n}\r\n\r\npage.10 = COA\r\npage.10.wrap = <td valign="top" bgcolor="{$page.contentBgColor}"> | </td>\r\npage.10 {\r\n  5 < temp.header\r\n  5.wrap = |<br />\r\n  5.if.isFalse = {$page.leftImageExpand}\r\n  10 < temp.tmenu\r\n  12 < temp.pageTitle\r\n  20 = COA\r\n  20.stdWrap.offsetWrap = {$page.contentOffset}\r\n  20.10 = TEXT\r\n  20.10.value = <img src="clear.gif" width="{$page.width}" height="1" alt="" /><br />\r\n  20.15 < styles.content.editPanelPage\r\n  20.20 < styles.content.get\r\n  20.30 < styles.content.lastUpdate\r\n  20.40 < styles.content.typo3_powered\r\n}\r\n\r\npage.20 = TEXT\r\npage.20.value = <td><img src="clear.gif" width="{$gap.width.left}" height="1" alt="" /></td>\r\npage.20.if.isTrue = {$gap.width.left}\r\npage.21 = TEXT\r\npage.21.value = <td bgcolor="{$gap.linecolor}"><img src="clear.gif" width="{$gap.width.line}" height="1" alt="" /></td>\r\npage.21.if.isTrue = {$gap.width.line}\r\npage.22 = TEXT\r\npage.22.value = <td><img src="clear.gif" width="{$gap.width.right}" height="1" alt="" /></td>\r\npage.22.if.isTrue = {$gap.width.right}\r\n\r\npage.30 = COA\r\npage.30.if.isTrue = {$rightCol.enable}\r\npage.30.wrap = <td valign="top" bgcolor="{$rightCol.bgColor}"><img src="clear.gif" width="{$rightCol.width}" height="1" alt="" /><br /> | </td>\r\npage.30 {\r\n  5 = IMAGE\r\n  5.file = {$file.right_bar}\r\n  5.wrap = | <br />\r\n  5.if.isFalse = {$page.leftImageExpand}\r\n  10 < temp.titlefield\r\n\r\n  15 = LOAD_REGISTER\r\n  15.maxImageWidth = {$rightCol.maxImageWidth}\r\n  15.textStyle_face = {$rightCol.textStyle_face}\r\n  15.textStyle_size = {$rightCol.textStyle_size}\r\n  15.textStyle_color = {$rightCol.textStyle_color}\r\n  15.defaultHeaderType = {$rightCol.defaultHeaderType}\r\n  15.pageColor = {$rightCol.bgColor}\r\n\r\n  20 < styles.content.getBorder\r\n  25 = RESTORE_REGISTER\r\n}\r\n\r\n\r\n\r\n{$rightCol.leftComment} page.5 < page.30\r\n{$rightCol.leftComment} page.6 < page.20\r\n{$rightCol.leftComment} page.7 < page.21\r\n{$rightCol.leftComment} page.8 < page.22\r\n{$rightCol.leftComment} page.30 >\r\n{$rightCol.leftComment} page.20 >\r\n{$rightCol.leftComment} page.21 >\r\n{$rightCol.leftComment} page.22 >\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n', '');
INSERT INTO static_template VALUES ('70', '0', '1054753870', '994368694', 'template; RE', '19,43,68', 'topFrameHeight = 91\r\nleftFrameWidth = 197\r\n\r\nbackground.file {\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Left frame background image:\r\n  left = EXT:statictemplates/media/uploads/re/left_background.gif\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top frame background image:\r\n  top = EXT:statictemplates/media/uploads/re/top_background.gif\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Page frame background image:\r\n  page = \r\n}\r\n\r\n\r\ntopmenu {\r\n    # cat=menu/file; type=int+; label=Background image width: Enter the width of the menu background image (pixels)\r\n  bgImgWidth = 674\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Expanding Background Image: The text of the menu items are printed on this background image which expands horizontally behind the items.\r\n  file.background = EXT:statictemplates/media/uploads/re/menuback.gif\r\n    # cat=menu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu. \r\n  file.font = \r\n    # cat=menu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 13\r\n    # cat=menu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = #006699\r\n    # cat=menu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  offset =  11,12\r\n    # cat=menu/typo; type=int+; label=Font spacing: Letter spacing of the menu items\r\n  spacing = 2\r\n\r\n    # cat=menu/typo/zaa; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 1\r\n    # cat=menu/typo/zab; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor = #DF0029\r\n    # cat=menu/typo/zba; type=boolean; label=Active: Click this option if you want menu items to be active. \'Active\' means that you\'ve clicked the item and are now in that section of the website.\r\n  ACT = 1\r\n    # cat=menu/typo/zbb; type=color; label=Active, font color: Enter the active font color of the text on the menu item.\r\n  ACT.fontColor = #DF0029\r\n\r\n    # cat=menu/dims; type=int+; label=Space between items: \r\n  itemDistance = 25\r\n    # cat=menu//x; type=int[0-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 16\r\n}\r\n\r\n  # cat=top/dims; type=offset; label=Menu offset:\r\ntop.menuOffset = 0,0\r\n  # cat=top/dims; type=offset; label=Logo offset:\r\ntop.logoOffset = 200,0\r\n  # cat=top/file/t; type=file[IMAGE_EXT]; label=Top logo:\r\ntop.file.logo = EXT:statictemplates/media/uploads/re/my_logo.gif\r\n  # cat=top/file/t; type=file[IMAGE_EXT]; label=Left-of-menu image:\r\ntop.file.leftOfMenu = EXT:statictemplates/media/uploads/re/top_leftofmenu.gif\r\n  # cat=top/dims; type=offset; label=Offset, Left-of-menu image:\r\ntop.leftOfMenuOffset = 0,0\r\n\r\n\r\nleftmenu {\r\n    # cat=leftmenu/file; type=file[IMAGE_EXT]; label=Background image: This is the background image of a normal mode menu item\r\n  file.background = EXT:statictemplates/media/uploads/re/leftmenu_no.gif\r\n    # cat=leftmenu/file/z8; type=file[IMAGE_EXT]; label=Background image, Rollover: This is the background image of a rollover mode menu item\r\n  RO.file.background = EXT:statictemplates/media/uploads/re/leftmenu_ro.gif\r\n    # cat=leftmenu/file/z9; type=file[IMAGE_EXT]; label=Background image, Active: This is the background image of a active mode menu item\r\n  ACT.file.background = EXT:statictemplates/media/uploads/re/leftmenu_act.gif\r\n\r\n    # cat=leftmenu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu. \r\n  file.font = \r\n    # cat=leftmenu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 12\r\n    # cat=leftmenu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = #E9F6FB\r\n    # cat=leftmenu/typo; type=int+; label=Font spacing: Letter spacing of the menu items\r\n  spacing = 0\r\n    # cat=leftmenu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  offset =  -33,14\r\n    # cat=leftmenu/typo; type=options[left,right,center]; label=Alignment of text: Alignment of text on the menu items\r\n  align = right\r\n\r\n\r\n    # cat=leftmenu/typo/zaa; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 1\r\n    # cat=leftmenu/typo/zab; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor = #E9F6FB\r\n    # cat=leftmenu/typo/zba; type=boolean; label=Active: Click this option if you want menu items to be active. \'Active\' means that you\'ve clicked the item and are now in that section of the website.\r\n  ACT = 1\r\n    # cat=leftmenu/typo/zbb; type=color; label=Active, font color: Enter the active font color of the text on the menu item.\r\n  ACT.fontColor = #E9F6FB\r\n\r\n    # cat=leftmenu//x; type=int[0-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 16\r\n}\r\n\r\n  # cat=leftmenu/dims; type=offset; label=Offset, whole menu: Enter the offset of the whole menu-block from upper-left corner of the left frame.\r\nleft.offset = 0,0\r\n  # cat=leftmenu/file; type=file[IMAGE_EXT]; label=After menu image: This is an image placed after the menu-items. It doesn\'t appear if the menu is empty.\r\nleft.file.afterMenuImage = EXT:statictemplates/media/uploads/re/menu_afterimage.gif\r\n\r\nleft.menuWrap = <table border="0" cellpadding="0" cellspacing="0"> |</table>\r\nleft.itemWrap = <tr><td>|</td></tr>\r\n\r\n\r\n\r\n  # cat=basic/file/t; type=file[css]; label=Page frame stylesheet:\r\npage.file.stylesheet = \r\n  # cat=basic/dims; type=offset; label= Page offset: Offset of the whole page-table from upper-left corner of the browser-window\r\npage.offset = 0,0\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table cell where the content is displayed\r\npage.contentWidth = 600\r\n\r\n\r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = white\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\nPAGE_TARGET = page\r\ncontent.pageFrameObj = page\r\nstyles.content.imgtext.maxW = 600\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "RE"\r\n  description = This is a frame-based template. There\'s a top frame with a graphical menu, 1. level. There\'s a left frame with a graphical menu, 2. level. And there\'s a page frame for the content. You can define rollover and active states for the menu items.\r\n  bulletlist = 3 frames, top, left and page. // Top logo image. // Background images in all frames (optional). // Select background images and colors for the left menu for normal, rollover and active state. // Select font color for normal, rollover and active state of the top menu. // Set an image below the left menu. \r\n  image = gfx/RE_basic.gif\r\n  1=leftFrameWidth\r\n  2=topFrameHeight\r\n  3=page.offset\r\n  4=page.contentWidth,styles.content.imgtext.maxW\r\n  5=background.file.left\r\n  6=background.file.top\r\n  7=background.file.page,page.file.stylesheet,bgCol\r\n}\r\nTSConstantEditor.menu {\r\n  header = Standard Template "RE"\r\n  description = Primary menu in top frame (level 1).\r\n  bulletlist = Rollover and Active state colors. // Background image, which expands continually behind the items on the menu.\r\n  image = gfx/RE_menu.gif\r\n  1=topmenu.file.background,topmenu.bgImgWidth\r\n  2=topmenu.itemDistance\r\n  3=topmenu.RO,topmenu.RO.fontColor\r\n  4=topmenu.file.font,topmenu.fontSize,topmenu.fontColor,topmenu.offset,topmenu.spacing\r\n}\r\nTSConstantEditor.top {\r\n  header = Standard Template "RE"\r\n  description = Top frame features\r\n  bulletlist = Menu with horizontally expanding background image. // Logo image // Image to the left of the menu.\r\n  image = gfx/RE_top.gif\r\n  1=top.menuOffset\r\n  2=top.logoOffset\r\n  3=top.leftOfMenuOffset\r\n  4=top.file.logo\r\n  5=top.file.leftOfMenu\r\n}\r\nTSConstantEditor.leftmenu {\r\n  header = Standard Template "RE"\r\n  description = Secondary menu in left frame (level 2).\r\n  bulletlist = Rollover and Active state background images. // Image after menu. // Offset in the left frame.\r\n  image = gfx/RE_leftmenu.gif\r\n  1=left.offset\r\n  2=leftmenu.file.background,leftmenu.file.font,leftmenu.fontSize,leftmenu.fontColor,leftmenu.spacing,leftmenu.offset,leftmenu.align\r\n  3=leftmenu.RO.file.background,leftmenu.RO.fontColor,leftmenu.RO\r\n  4=left.file.afterMenuImage\r\n}\r\n\r\n', '# Topmenu\r\ntemp.topmenu = HMENU\r\ntemp.topmenu.stdWrap.offsetWrap = {$top.menuOffset}\r\ntemp.topmenu.1 = GMENU\r\ntemp.topmenu.1.target = _top\r\ntemp.topmenu.1.applyTotalW = 5\r\ntemp.topmenu.1.max = {$topmenu.bgImgWidth}\r\ntemp.topmenu.1.min = {$topmenu.bgImgWidth}\r\ntemp.topmenu.1.NO {\r\n  XY = [10.w]+{$topmenu.itemDistance},  [5.h]\r\n  backColor = red\r\n  reduceColors = {$topmenu.reduceColors}\r\n  5 = IMAGE\r\n  5.file = {$topmenu.file.background}\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.offset ={$topmenu.offset}\r\n  10.fontFile = {$topmenu.file.font}\r\n  10.fontColor = {$topmenu.fontColor}\r\n  10.fontSize = {$topmenu.fontSize}\r\n  10.niceText = 1\r\n  10.spacing = {$topmenu.spacing}\r\n}\r\ntemp.topmenu.1.RO < temp.topmenu.1.NO\r\ntemp.topmenu.1.RO = {$topmenu.RO}\r\ntemp.topmenu.1.RO {\r\n  10.fontColor = {$topmenu.RO.fontColor}\r\n}\r\ntemp.topmenu.1.ACT < temp.topmenu.1.NO\r\ntemp.topmenu.1.ACT = {$topmenu.ACT}\r\ntemp.topmenu.1.ACT {\r\n  10.fontColor = {$topmenu.ACT.fontColor}\r\n}\r\n\r\n\r\n# Leftmenu\r\ntemp.leftmenu = HMENU\r\ntemp.leftmenu.stdWrap.required = 1\r\ntemp.leftmenu.stdWrap.offsetWrap = {$left.offset} \r\ntemp.leftmenu.stdWrap {\r\n  prepend = IMAGE\r\n  prepend.file = {$left.file.afterMenuImage}\r\n  prepend.wrap = {$left.itemWrap}\r\n  wrap3 = {$left.menuWrap}\r\n}\r\ntemp.leftmenu.entryLevel = 1\r\ntemp.leftmenu.1 = GMENU\r\ntemp.leftmenu.1.target = frameset2\r\ntemp.leftmenu.1.NO {\r\n  wrap= {$left.itemWrap}\r\n  XY = [5.w],  [5.h]\r\n  backColor = red\r\n  reduceColors = {$leftmenu.reduceColors}\r\n  5 = IMAGE\r\n  5.file = {$leftmenu.file.background}\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.offset ={$leftmenu.offset}\r\n  10.fontFile = {$leftmenu.file.font}\r\n  10.fontColor = {$leftmenu.fontColor}\r\n  10.fontSize = {$leftmenu.fontSize}\r\n  10.align = {$leftmenu.align}\r\n  10.niceText = 1\r\n  10.spacing = {$leftmenu.spacing}\r\n}\r\ntemp.leftmenu.1.RO < temp.leftmenu.1.NO\r\ntemp.leftmenu.1.RO = {$leftmenu.RO}\r\ntemp.leftmenu.1.RO {\r\n  5.file = {$leftmenu.RO.file.background}\r\n  10.fontColor = {$leftmenu.RO.fontColor}\r\n}\r\ntemp.leftmenu.1.ACT < temp.leftmenu.1.NO\r\ntemp.leftmenu.1.ACT = {$leftmenu.ACT}\r\ntemp.leftmenu.1.ACT {\r\n  5.file = {$leftmenu.ACT.file.background}\r\n  10.fontColor = {$leftmenu.ACT.fontColor}\r\n}\r\n\r\n\r\n# LEFT FRAME, menu\r\nleft.bgImg = {$background.file.left}\r\nleft.bodyTagMargins = 0\r\nleft.10 < temp.leftmenu\r\n\r\n# TOP FRAME, menu\r\ntop.bgImg = {$background.file.top}\r\ntop.bodyTagMargins = 0\r\ntop.wrap = <table border="0" cellpadding="0" cellspacing="0"> | </table>\r\ntop.5 = HTML\r\ntop.5.value = <tr><td colspan="2" valign="top">\r\ntop.10 = IMAGE\r\ntop.10.file = {$top.file.logo}\r\ntop.10.stdWrap.offsetWrap = {$top.logoOffset}\r\ntop.10.linkWrap = <a href="index.php?{0}" target="_top"> |</a>\r\ntop.15 = HTML\r\ntop.15.value = </td></tr><tr><td valign="top">\r\ntop.20 = IMAGE\r\ntop.20.file = {$top.file.leftOfMenu}\r\ntop.20.stdWrap.offsetWrap = {$top.leftOfMenuOffset}\r\ntop.25 = HTML\r\ntop.25.value = </td><td valign="top">\r\ntop.30 < temp.topmenu\r\ntop.35 = HTML\r\ntop.35.value = </td></tr>\r\n\r\n# PAGE\r\npage.bgImg = {$background.file.page}\r\npage.stylesheet = {$page.file.stylesheet}\r\npage.bodyTag < styles.content.bodyTag\r\npage.10 = CTABLE\r\npage.10 {\r\n  offset = {$page.offset}\r\n  c.5 < styles.content.editPanelPage\r\n  c.10 < styles.content.get\r\n  c.30 < styles.content.lastUpdate\r\n  c.40 < styles.content.typo3_powered\r\n\r\n  cWidth = {$page.contentWidth}\r\n  tableParams = border="0" cellpadding="0" cellspacing="0" width="{$page.contentWidth}"\r\n}\r\n\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\nframeset.headerData.999 < plugin.meta\r\n\r\n\r\n', '');
INSERT INTO static_template VALUES ('71', '0', '1054753840', '994370877', 'template; NEWSLETTER', '43,68,82', 'styles.content.imgtext.comment_CSL-LinkList = \r\ncontent.defaultHeaderType = 5\r\n\r\n  # cat=basic/file/t; type=file[css]; label=Page stylesheet:\r\npage.file.css = EXT:statictemplates/media/uploads/newsletter/style.css\r\n  # cat=basic/file/t; type=file[html,htm,txt,tmpl]; label=Page template file:\r\npage.file.template = EXT:statictemplates/media/uploads/newsletter/template.html\r\n  # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top frame logo image:\r\npage.file.toplogo =  EXT:statictemplates/media/uploads/newsletter/toplogo.gif\r\n\r\n\r\n  # cat=basic/color/a; type=color; label=Header frame color, right:\r\nright.frameCol = #90A8BF\r\n  # cat=basic/color/a; type=color; label=Bottom line color:\r\nlineCol = #90A8BF\r\n  # cat=basic//; type=string; label=Copyright email\r\ncopyright = stuff@stuff.dk\r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = #eaf6f6\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = #90a8bf\r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = #cccccc\r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = #90a8bf\r\n  # cat=basic/color/l; type=color; label=Text-color: Text color as defined in <body>-tag\r\ntext = #666666\r\n\r\n\r\nPAGE_TARGET = \r\ncontent.pageFrameObj = \r\nstyles.content.imgtext.maxW = 400\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table where the content is displayed in the page-frame\r\ncontentWidth = 400\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "NEWSLETTER"\r\n  description = This is a single-page template with no menu! It\'s designed to be used as a newsletter template sent as an HTML-email with the internal Direct Mail module. It\'s based on an HTML-template file, so the main layout of the page is depending on the content of that template. One thing excluded from the template is the top logo which is defined directly in TypoScript.\r\n  bulletlist = HTML-template file based. Redesign it with your favourite HTML-editor! // Features content in two columns (optional). // By default headers in the margin column are based on header layout 5, which is an image-header. \r\n  image = gfx/NEWSLETTER_basic.gif\r\n  1=page.file.css,page.file.template\r\n  2=page.file.toplogo\r\n  3=bgCol\r\n}\r\n', 'config.insertDmailerBoundaries = 1\r\n\r\n\r\n# Redefining header type 5\r\n\r\nlib.stdheader.10.5.file.10.antialias = 0\r\nlib.stdheader.10.5.file.10.fontColor = #666666\r\nlib.stdheader.10.5.file.XY = 400 ,30\r\nlib.stdheader.10.5.file.10.fontSize = 12\r\nlib.stdheader.10.5.file.10.offset = 6,18\r\nlib.stdheader.10.5.file.XY = 400 ,27\r\nlib.stdheader.10.5.file {\r\n  20 = BOX\r\n  20.dimensions = 0,0,400,1\r\n  20.color = {$right.frameCol}\r\n  21 < .20\r\n  21.align = , b\r\n  22 < .20\r\n  22.dimensions = 0,0,1,40\r\n  23 < .22\r\n  23.align = r\r\n}\r\nlib.stdheader.10.4 >\r\nlib.stdheader.10.4 < lib.stdheader.10.5\r\nlib.stdheader.10.4.file.XY = 185,27\r\n\r\n\r\n\r\n# Setting up page\r\n\r\npage = PAGE\r\npage.typeNum = 0\r\npage.stylesheet = {$page.file.css}\r\npage.hoverStyle = COLOR: #cccccc; TEXT-DECORATION: underline\r\npage.bodyTag = <body text="{$text}" vlink="{$vlink}" alink="{$alink}" link="{$link}" bgcolor="{$bgCol}" leftmargin="0" topmargin="5">\r\n\r\npage.stdWrap.offsetWrap = 10,0\r\npage.5 = IMAGE\r\npage.5.wrap = |<br />\r\npage.5.file = {$page.file.toplogo}\r\n\r\npage.10 = TEMPLATE\r\npage.10 {\r\n  template = FILE\r\n  template.file = {$page.file.template}\r\n  marks.CONTENT_NORMAL = COA\r\n  marks.CONTENT_NORMAL {\r\n    5 < styles.content.editPanelPage\r\n    10 < styles.content.get\r\n    30 < styles.content.lastUpdate\r\n    40 < styles.content.typo3_powered\r\n  }\r\n  marks.CONTENT_MARGIN = COA\r\n  marks.CONTENT_MARGIN {\r\n    10 = LOAD_REGISTER\r\n    10.defaultHeaderType = 4\r\n    20 < styles.content.getBorder\r\n    30 = RESTORE_REGISTER\r\n  }\r\n  marks.LINECOLOR = TEXT\r\n  marks.LINECOLOR.value = {$lineCol}\r\n  marks.COPYRIGHT = TEXT\r\n  marks.COPYRIGHT.value = {$copyright}\r\n}\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n## HTML mail ping:\r\npage.20 = TEXT\r\npage.20.value = <img src="typo3/gfx/dmailerping.gif" width="1" height="1" dmailerping="1" alt="" />\r\n\r\n## Plain text setup:\r\nlib.alt_plaintext.renderObj.header.2 {\r\n  preLineChar = \r\n  postLineChar >\r\n  preLineChar >\r\n  preLineLen >\r\n  postLineLen >\r\n  preBlanks = 0\r\n}\r\nalt_plaintext.10.marks.CONTENT >\r\nalt_plaintext.10.marks.CONTENT = COA\r\nalt_plaintext.10.marks.CONTENT {\r\n  10 < styles.content.get\r\n  10.renderObj = < lib.alt_plaintext.renderObj\r\n  20 < styles.content.getBorder\r\n  20.renderObj = < lib.alt_plaintext.renderObj\r\n}\r\n\r\nalt_plaintext_test.10.marks.CONTENT < alt_plaintext.10.marks.CONTENT\r\n', '');
INSERT INTO static_template VALUES ('72', '0', '1054753817', '994370877', 'template; HYPER', '13,43,68', '\r\nbackground.file {\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top frame background image:\r\n  top = EXT:statictemplates/media/uploads/hyper/background_top.gif\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Page frame background image:\r\n  page = EXT:statictemplates/media/uploads/hyper/background_main.gif\r\n}\r\n  # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top frame logo image:\r\ntop.logo = EXT:statictemplates/media/uploads/hyper/title.gif\r\n  # cat=basic/file/t; type=file[css]; label=Page frame stylesheet:\r\npage.css = EXT:statictemplates/media/uploads/hyper/sprache.css\r\n\r\ntopFrameHeight = 150\r\n\r\ntopmenu1 {\r\n    # cat=menu/dims; type=int+; label=Height of menu items (pixels)\r\n  height = 15\r\n    # cat=menu/dims; type=int+; label=Additional width: The menu items are getting their width from the title. This number is added to that making room for a margin.\r\n  addWidth = 20\r\n    # cat=menu/dims; type=int+; label=Space between items: \r\n  itemSpace = 30\r\n\r\n    # cat=menu/dims; type=int+; label=Y-offset of the pop-up layers: This is the distance in pixels from the top of the browser window to the menu pop-up layers\r\n  yOffset = 38\r\n    # cat=menu/dims; type=int+; label=X-offset of the pop-up layers: This is the distance in pixels from the left of the browser window to the menu pop-up layers\r\n  xOffset = 231\r\n\r\n    # cat=menu/color; type=color; label=Menu background color\r\n  bgCol = black\r\n    # cat=menu/color; type=color; label=Menu transparent color: Setting this to the same as the \'Menu background color\' will render the menu items transparent. This is looking best if you don\'t use antialiasing on the text.\r\n  bgCol_transp = black\r\n\r\n    # cat=menu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu. Good fonts non-antialiased are Mini-7 (size 7) or verdana (size 10)\r\n  file.fontFile = \r\n    # cat=menu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 10\r\n    # cat=menu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = white\r\n    # cat=menu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  fontOffset = 10,10\r\n    # cat=menu/typo; type=options[,upper,lower]; label=Text case: You can force the text on the menu items to be either lowercase or uppercase.\r\n  case =\r\n    # cat=menu/typo; type=boolean; label= Antialias: If this option is set, the fonts will be rendered antialiased. Default is \'off\' because of the transparent background.\r\n  antialias = 0\r\n\r\n    # cat=menu/color; type=color; label=Box Linecolor: Line color of the box making a border on each item\r\n  boxColor = #60C82F\r\n\r\n    # cat=menu/typo; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 1\r\n    # cat=menu/typo; type=color; label=Rollover, background color:\r\n  RO.bgColor = #60C82F\r\n    # cat=menu/color; type=color; label=Rollover, Box Linecolor: Line color of the box making a border on each item.\r\n  RO.boxColor = white\r\n    # cat=menu/typo; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor = white\r\n}\r\n\r\n\r\n\r\n\r\n\r\ntopmenu2 {\r\n\r\n    # cat=menu2/; type=wrap; label=Wrap of the whole menu: This is by default a table with a white background color\r\n  menuWrap = <table border="0" cellpadding="2" cellspacing="0" bgcolor="white"><tr><td>   <table border="0" cellspacing="0" cellpadding="0" bgcolor="#2F302F"><tr><td>|</td></tr></table>  </td></tr></table>\r\n    # cat=menu2/; type=wrap; label=Wrap of each menu item: \r\n  itemWrap = | <br />\r\n\r\n    # cat=menu2/dims; type=int+; label=Height of menu items (pixels)\r\n  height = 12\r\n    # cat=menu2/dims; type=int+; label=Additional width: The menu items are getting their width from the page title. This number is added to that making room for margin.\r\n  addWidth = 5\r\n\r\n    # cat=menu2/color; type=color; label=Menu background color\r\n  bgCol = #2F302F\r\n    # cat=menu2/color; type=color; label=Menu transparent color: Setting this to the same as the \'Menu background color\' will render the menu items transparent. This is looking best if you don\'t use antialiasing on the text.\r\n  bgCol_transp = \r\n\r\n    # cat=menu2/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu. Good fonts non-antialiased are Mini-7 (size 7) or verdana (size 10)\r\n  file.fontFile = \r\n    # cat=menu2/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 10\r\n    # cat=menu2/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = #60C82F\r\n    # cat=menu2/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  fontOffset = 1,8\r\n    # cat=menu2/typo; type=options[,upper,lower]; label=Text case: You can force the text on the menu items to be either lowercase or uppercase.\r\n  case =\r\n    # cat=menu2/typo; type=boolean; label= Antialias: If this option is set, the fonts will be rendered antialiased. Default is \'off\' because of the transparent background.\r\n  antialias = 0\r\n\r\n    # cat=menu2/color; type=color; label=Linecolor: Line color between the items\r\n  lineColor = #606760\r\n\r\n    # cat=menu2/typo; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 1\r\n    # cat=menu2/typo; type=color; label=Rollover, background color:\r\n  RO.bgColor = #60C82F\r\n    # cat=menu2/color; type=color; label=Rollover, Linecolor: Line color between the items\r\n  RO.lineColor = white\r\n    # cat=menu2/typo; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor = white\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntoptitle{\r\n    # cat=toptitle/enable; type=boolean; label=Show the top title image?: If you unset this option, the top title image is not shown.\r\n  enable = 1\r\n    # cat=toptitle/dims; type=offset; label=Image offset: Enter the offset of the image\r\n  offset = 57,17\r\n    # cat=toptitle/dims; type=int+; label=Height of top title image (pixels)\r\n  height = 13\r\n    # cat=toptitle/dims; type=int+; label=Width of top title image (pixels)\r\n  width = 370\r\n\r\n    # cat=toptitle/color; type=color; label=Background color\r\n  bgCol = white\r\n    # cat=toptitle/color; type=color; label=Transparent color: Setting this to the same as the \'Menu background color\' will render the image transparent. This is looking best if you don\'t use antialiasing on the text.\r\n  bgCol_transp = white\r\n\r\n    # cat=toptitle/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the image. Good fonts non-antialiased are Mini-7 (size 7) or verdana (size 10)\r\n  file.fontFile = \r\n    # cat=toptitle/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 14\r\n    # cat=toptitle/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = #909790\r\n    # cat=toptitle/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the image\r\n  fontOffset = 0,9\r\n    # cat=toptitle/typo; type=options[,upper,lower]; label=Text case: You can force the text on the image to be either lowercase or uppercase.\r\n  case =\r\n    # cat=toptitle/typo; type=boolean; label= Antialias: If this option is set, the fonts will be rendered antialiased. Default is \'off\' because of the transparent background.\r\n  antialias = 0\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table where the content is displayed in the page-frame\r\ncontentWidth = 560\r\nstyles.content.imgtext.maxW = 560\r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = #333333\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\n  # cat=page/dims; type=offset; label=Content field offset: Enter the offset of the content cell from the upper-left corner of the page frame\r\npage.offset = 30,40\r\n  # cat=page/color/x; type=color; label=Content cell background color: This is the color of the content cell\r\npage.contentCellBgCol = #333333\r\n\r\n  # cat=page/dims; type=offset; label=Top frame offset: Enter the offset of the content in the top frame. This includes logo and menu\r\ntop.offset = 0,25\r\n  # cat=page/dims; type=offset; label=Distance to menu: Enter the distance in pixels from the rigth edge of the logo to the menu\r\ntop.distFromLogoToMenu = 231\r\n\r\n\r\nPAGE_TARGET = page\r\ncontent.pageFrameObj = page\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "HYPER"\r\n  description = Hyper is a frame-based template with a top frame containing the navigation and a page frame with the content in one column. The top navigation is based on DHTML layers. In addition the page title is rendered on an image and you can define a top logo.\r\n  bulletlist = DHTML graphical menu in top frame. // Top logo. (5) // Top page title image. // Define background images. (3,4) // Prepared for css stylesheet.\r\n  image = gfx/HYPER_basic.gif\r\n  1=topFrameHeight\r\n  2=contentWidth,styles.content.imgtext.maxW\r\n  3=background.file.top\r\n  4=background.file.page,page.css\r\n  5=top.logo\r\n}\r\nTSConstantEditor.page {\r\n  header = Standard Template "HYPER"\r\n  description = \r\n  bulletlist = \r\n  image = gfx/HYPER_page.gif\r\n  1=top.offset\r\n  2=top.distFromLogoToMenu\r\n  3=page.offset\r\n  4=page.contentCellBgCol\r\n}\r\nTSConstantEditor.toptitle {\r\n  header = Standard Template "HYPER"\r\n  description = This is a gif/png image with the page title printed on it. A special feature is that this image has a transparent background by default. That means you should use a font like Verdana, Arial or Mini7-series non-antialiased to get the best display.\r\n  bulletlist = Define TrueType font, size and color // Define antialiased / non-antialiased setting // Define letter case to upper- or lowercase\r\n  image = gfx/HYPER_toptitle.gif\r\n  1=toptitle.offset\r\n  2=toptitle.width\r\n  3=toptitle.height\r\n  4=toptitle.file.fontFile,toptitle.fontSize,toptitle.fontColor,toptitle.fontOffset,toptitle.case,toptitle.antialias,toptitle.bgCol,toptitle.bgCol_transp\r\n}\r\nTSConstantEditor.menu {\r\n  header = Standard Template "HYPER"\r\n  description = DHTML based graphical menu. This menu is featuring a 1-2 pixels border in selectable colors. It uses no background images. The menu is designed to work transparent on a page background.\r\n  bulletlist = Define border color for normal and rollover state.// Define background color for rollover state. // Define TrueType font, size and color // Define antialiased / non-antialiased setting // Define letter case to upper- or lowercase\r\n  image = gfx/HYPER_menu.gif\r\n  1=topmenu1.height\r\n  2=topmenu1.itemSpace\r\n  3=topmenu1.addWidth\r\n  4=topmenu1.yOffset,topmenu1.xOffset\r\n  5=topmenu1.file.fontFile,topmenu1.fontSize,topmenu1.fontColor,topmenu1.fontOffset,topmenu1.case,topmenu1.antialias,topmenu1.bgCol,topmenu1.bgCol_transp,topmenu1.boxColor\r\n  6=topmenu1.RO,topmenu1.RO.bgColor,topmenu1.RO.fontColor,topmenu1.RO.boxColor\r\n}\r\nTSConstantEditor.menu2 {\r\n  header = Standard Template "HYPER"\r\n  description = DHTML based graphical menu layers. This is the second level of the menu.\r\n  bulletlist = Define color of separator line. // Define border color for normal and rollover state.// Define background color for rollover state. // Define TrueType font, size and color // Define antialiased / non-antialiased setting // Define letter case to upper- or lowercase\r\n  image = gfx/HYPER_menu2.gif\r\n  1=topmenu2.height\r\n  2=topmenu2.file.fontFile,topmenu2.fontSize,topmenu2.fontColor,topmenu2.fontOffset,topmenu2.case,topmenu2.antialias,topmenu2.bgCol,topmenu2.bgCol_transp,\r\n  3=topmenu2.RO,topmenu2.RO.bgColor,topmenu2.RO.fontColor\r\n  4=topmenu2.lineColor,topmenu2.RO.lineColor\r\n}\r\n\r\n', 'includeLibs.gmenu_layers = EXT:statictemplates/media/scripts/gmenu_layers.php\r\n\r\n\r\n# Defining\r\n\r\ntemp.topmenu1 = HMENU\r\ntemp.topmenu1.wrap = <nobr> | </nobr>\r\ntemp.topmenu1.1 = GMENU_LAYERS\r\ntemp.topmenu1.1.target = _top\r\ntemp.topmenu1.1.NO {\r\n  wrap =  | <img src="clear.gif" width="{$topmenu1.itemSpace}" height="1" alt="" />\r\n  XY = [10.w]+{$topmenu1.addWidth},{$topmenu1.height}\r\n  transparentColor = {$topmenu1.bgCol_transp}\r\n  backColor = {$topmenu1.bgCol}\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.text.case = {$topmenu1.case}\r\n  10.fontFile = {$topmenu1.file.fontFile}\r\n  10.fontSize = {$topmenu1.fontSize}\r\n  10.fontColor = {$topmenu1.fontColor}\r\n  10.antiAlias = {$topmenu1.antialias}\r\n  10.offset = {$topmenu1.fontOffset}\r\n\r\n  20 = BOX\r\n  20.color = {$topmenu1.boxColor}\r\n  20.dimensions = 1,1,[10.w]+{$topmenu1.addWidth}-2,1\r\n\r\n  21 = BOX\r\n  21.color = {$topmenu1.boxColor}\r\n  21.dimensions = 1,-1,[10.w]+{$topmenu1.addWidth}-2,1\r\n  21.align = ,b\r\n\r\n  22 = BOX\r\n  22.color = {$topmenu1.boxColor}\r\n  22.dimensions = 1,1,1,{$topmenu1.height}-2\r\n\r\n  23 = BOX\r\n  23.color = {$topmenu1.boxColor}\r\n  23.dimensions = -1,1,1,{$topmenu1.height}-2\r\n  23.align= r\r\n}\r\ntemp.topmenu1.1.RO  < temp.topmenu1.1.NO\r\ntemp.topmenu1.1.RO = {$topmenu1.RO}\r\ntemp.topmenu1.1.RO {\r\n\r\n  7 = BOX\r\n  7.color = {$topmenu1.RO.bgColor}\r\n  7.dimensions = 0,0,[10.w]+{$topmenu1.addWidth},{$topmenu1.height}\r\n\r\n  10.fontColor = {$topmenu1.RO.fontColor}\r\n\r\n  20 = BOX\r\n  20.color = {$topmenu1.RO.boxColor}\r\n  20.dimensions = 0,0,[10.w]+{$topmenu1.addWidth},2\r\n\r\n  21 = BOX\r\n  21.color = {$topmenu1.RO.boxColor}\r\n  21.dimensions = 0,0,[10.w]+{$topmenu1.addWidth},2\r\n  21.align = ,b\r\n\r\n  22 = BOX\r\n  22.color = {$topmenu1.RO.boxColor}\r\n  22.dimensions = 0,0,2,{$topmenu1.height}\r\n\r\n  23 = BOX\r\n  23.color = {$topmenu1.RO.boxColor}\r\n  23.dimensions = 0,0,2,{$topmenu1.height}\r\n  23.align= r\r\n}\r\n\r\ntemp.topmenu1.1 {\r\n  xPosOffset = -{$topmenu1.xOffset}\r\n  lockPosition = x\r\n  expAll = 1\r\n\r\n  topOffset = {$topmenu1.yOffset}\r\n  lockPosition_adjust = {$topmenu1.itemSpace}\r\n  directionLeft = 0\r\n  lockPosition_addSelf=0\r\n}\r\n\r\ntemp.topmenu1.2 = GMENU\r\ntemp.topmenu1.2.target = _top\r\ntemp.topmenu1.2.useLargestItemX = 1\r\ntemp.topmenu1.2.wrap = {$topmenu2.menuWrap}\r\ntemp.topmenu1.2.NO {\r\n wrap = {$topmenu2.itemWrap}\r\n\r\n  transparentColor = {$topmenu2.bgCol_transp}\r\n  backColor = {$topmenu2.bgCol}\r\n\r\n  XY = |*||*| [10.w]+{$topmenu2.addWidth},{$topmenu2.height} || [10.w]+{$topmenu2.addWidth},{$topmenu2.height}-1\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.text.case = {$topmenu2.case}\r\n  10.fontFile = {$topmenu2.file.fontFile}\r\n  10.fontSize = {$topmenu2.fontSize}\r\n  10.fontColor = {$topmenu2.fontColor}\r\n  10.antiAlias = {$topmenu2.antialias}\r\n  10.offset = {$topmenu2.fontOffset}\r\n\r\n  30 = BOX\r\n  30.color = {$topmenu2.lineColor}\r\n  30.dimensions = 0,{$topmenu2.height}-1,300,1\r\n}\r\ntemp.topmenu1.2.RO < temp.topmenu1.2.NO\r\ntemp.topmenu1.2.RO = {$topmenu2.RO}\r\ntemp.topmenu1.2.RO {\r\n  backColor = {$topmenu2.RO.bgColor}\r\n  10.fontColor = {$topmenu2.RO.fontColor}\r\n  30.color = {$topmenu2.RO.lineColor}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Top frame page\r\n\r\ntop.bgImg = {$background.file.top}\r\ntop.bodyTag = <body bgcolor="#FFFFFF" text="#000000">\r\ntop.bodyTagMargins = 0\r\ntop.10 = CTABLE\r\ntop.10 {\r\n  tableParams = border="0" cellpadding="0" cellspacing="0"\r\n  offset = {$top.offset}\r\n\r\n  lm.1 = IMAGE\r\n  lm.1.file = {$top.logo}\r\n  lm.1.wrap = |<br />\r\n  lm.1.params = vspace="4"\r\n\r\n  lm.3 = CLEARGIF\r\n  lm.3.width={$top.distFromLogoToMenu}\r\n\r\n  c.1 < temp.topmenu1\r\n}\r\n\r\ntop.20 = OTABLE\r\ntop.20.offset = {$toptitle.offset}\r\ntop.20.1 = IMAGE\r\ntop.20.1.if.isTrue = {$toptitle.enable}\r\ntop.20.1.file = GIFBUILDER\r\ntop.20.1.file {\r\n    XY = {$toptitle.width},{$toptitle.height}\r\n    backColor = {$toptitle.bgCol}\r\n    transparentColor = {$toptitle.bgCol_transp}\r\n    10=TEXT\r\n    10.text.field = nav_title // title\r\n    10.text.case = {$toptitle.case}\r\n    10.fontFile = {$toptitle.file.fontFile}\r\n    10.fontSize = {$toptitle.fontSize}\r\n    10.fontColor = {$toptitle.fontColor}\r\n    10.antiAlias = {$toptitle.antialias}\r\n    10.offset = {$toptitle.fontOffset}\r\n  }\r\ntop.20.1.wrap = |<br />\r\n\r\n\r\n# Page object\r\n\r\npage.bgImg = {$background.file.page}\r\npage.bodyTagMargins = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.stylesheet = {$page.css}\r\n\r\npage.10 = CTABLE\r\npage.10.offset = {$page.offset}\r\npage.10.cWidth={$contentWidth}\r\npage.10.tableParams = border="0" cellpadding="10" cellspacing="0" width="{$contentWidth}"\r\npage.10.c.TDParams = bgcolor="{$page.contentCellBgCol}"\r\npage.10.c {\r\n  5 < styles.content.editPanelPage\r\n  10 < styles.content.get\r\n  30 < styles.content.lastUpdate\r\n  40 < styles.content.typo3_powered\r\n}\r\n\r\ntt_content.textpic.20.textMargin = 90\r\n\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\nframeset.headerData.999 < plugin.meta\r\n\r\n', '');
INSERT INTO static_template VALUES ('73', '0', '1054753694', '994370877', 'template; CrCPH', '43,68', '  # cat=basic/file; type=file[html,htm,txt,inc,tmpl]; label=Template file:  This file is very important. It\'s the total template of the website. It\'s working with markers and subparts which define where menus, content and logos go. Two of the headertypes are defined inside as well! You should take a look into the default file and follow the directions inside.\r\npage.file.template = EXT:statictemplates/media/uploads/crcph/main.htm\r\n\r\n\r\ncontent.headerSpace >\r\nstyles.content.imgtext.maxW = 400\r\n\r\n\r\nPAGE_TARGET = \r\ncontent.pageFrameObj = \r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = #D6D3CE\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = #006699\r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = #00659C\r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = #00659C\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "CrCPH"\r\n  description = CrCPH is a single-page template based on an HTML-template file. Thus most of the layout is done by redesigning the template file with your favorite HTML-editor! \r\n  bulletlist = Based on an actual HTML-template file and relies less on TypoScript. // Two text based menus defined directly in the HTML-template file. // The default content header is also defined directly in the HTML-template file. // Support for two columns of content.\r\n  image = gfx/CrCPH_basic.gif\r\n  1=page.file.template\r\n  2=styles.content.imgtext.maxW\r\n}\r\n\r\n', '# Setting up the main template\r\n\r\ntemp.mainTemplate = TEMPLATE\r\ntemp.mainTemplate {\r\n  template = FILE\r\n  template.file = {$page.file.template} \r\n}\r\n\r\n\r\n# Setting up Level 1 menu, based on template!\r\n\r\ntemp.L1menu = HMENU\r\ntemp.L1menu.1 = TMENU\r\ntemp.L1menu.1.NO {\r\n  before.cObject < temp.mainTemplate\r\n  before.cObject {\r\n    workOnSubpart = SUB_MENU_ITEM\r\n    marks.MENU_TITLE = TEXT\r\n    marks.MENU_TITLE.field = title\r\n    wraps.LINK = TEXT\r\n    wraps.LINK {\r\n      value = |\r\n      typolink.parameter.field = uid\r\n    }\r\n  }\r\n  doNotShowLink = 1\r\n}\r\ntemp.L1menu.1.ACT < temp.L1menu.1.NO\r\ntemp.L1menu.1.ACT = 1\r\ntemp.L1menu.1.ACT.before.cObject.workOnSubpart = SUB_MENU_ITEM_ACT\r\n\r\n\r\n# Setting up Level 2 menu, based on template!\r\n\r\ntemp.L2menuItems = HMENU\r\ntemp.L2menuItems.entryLevel = 1\r\ntemp.L2menuItems.1 = TMENU\r\ntemp.L2menuItems.1.NO {\r\n  before.cObject < temp.mainTemplate\r\n  before.cObject {\r\n    workOnSubpart = SUB_L2MENU_ITEM\r\n    marks.MENU_TITLE = TEXT\r\n    marks.MENU_TITLE.field = title\r\n    wraps.LINK = TEXT\r\n    wraps.LINK {\r\n      value = |\r\n      typolink.parameter.field = uid\r\n    }\r\n  }\r\n  doNotShowLink = 1\r\n}\r\ntemp.L2menuItems.1.ACT < temp.L2menuItems.1.NO\r\ntemp.L2menuItems.1.ACT = 1\r\ntemp.L2menuItems.1.ACT.before.cObject.workOnSubpart = SUB_L2MENU_ITEM_ACT\r\n\r\ntemp.L2menu < temp.mainTemplate\r\ntemp.L2menu {\r\n  \r\n  workOnSubpart = SUB_L2MENU\r\n  subparts.SUB_L2MENU_ALLITEMS < temp.L2menuItems\r\n}\r\n\r\n\r\n\r\n\r\n# Page object\r\n\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.bodyTagMargins=0\r\npage.headerData.20 < temp.mainTemplate\r\npage.headerData.20 {\r\n  workOnSubpart = HEADER_DATA\r\n}\r\n\r\n\r\n\r\npage.10  < temp.mainTemplate\r\npage.10 {\r\n  workOnSubpart = DOCUMENT_BODY\r\n  subparts.SUB_CONTENT = COA\r\n  subparts.SUB_CONTENT {\r\n    5 < styles.content.editPanelPage\r\n    10 < styles.content.get\r\n    30 < styles.content.lastUpdate\r\n    40 < styles.content.typo3_powered\r\n  }\r\n  subparts.SUB_CONTENT_MARGIN = COA\r\n  subparts.SUB_CONTENT_MARGIN {\r\n    5 < temp.L2menu\r\n    10 = LOAD_REGISTER\r\n    10.defaultHeaderType = 2\r\n    10.maxImageWidth = 150\r\n    20 < styles.content.getBorder\r\n    30 = RESTORE_REGISTER\r\n  }\r\n  subparts.SUB_MENU < temp.L1menu\r\n}\r\n\r\n\r\n\r\nlib.stdheader.stdWrap >\r\nlib.stdheader.10.1 >\r\nlib.stdheader.10.1  < temp.mainTemplate\r\nlib.stdheader.10.1 {\r\n  workOnSubpart = SUB_HEADER1\r\n  marks.MARK_HEADER = TEXT\r\n  marks.MARK_HEADER.field = header\r\n}\r\nlib.stdheader.10.2 >\r\nlib.stdheader.10.2 < lib.stdheader.10.1\r\nlib.stdheader.10.2.workOnSubpart = SUB_HEADER2\r\nlib.stdheader.10.stdWrap.wrap >\r\n\r\n\r\ntt_content.menu.20.1 >\r\ntt_content.menu.20.1 < temp.L2menu\r\ntt_content.menu.20.1.subparts.SUB_L2MENU_ALLITEMS {\r\n  special = directory\r\n  special.value.field = pages\r\n}\r\n\r\n\r\n\r\n# Configuration\r\n\r\nconfig.extTarget = _blank\r\nconfig.compensateFieldWidth = 0.7\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n', '');
INSERT INTO static_template VALUES ('74', '0', '1054753787', '997262098', 'template; GREEN', '75,43,68', 'page.file {\r\n    # cat=basic/file; type=file[html,htm,txt,inc,tmpl]; label=Template file:  This file is very important. It\'s the total template of the website. It\'s working with markers and subparts which define where menus, content and logos go. Two of the headertypes are defined inside as well! You should take a look into the default file and follow the directions inside.\r\n  template = EXT:statictemplates/media/uploads/green/template.tmpl\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Background image: Page background image\r\n  background = EXT:statictemplates/media/uploads/green/background_page.png\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top image: This is the image in the upper right corner of the page. Depends on the existence of the marker, ###TOP_IMAGE###, in the template file.\r\n  topimage =  EXT:statictemplates/media/uploads/green/pict_top.jpg\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Top logo: This is the logo in the upper left corner of the page. Depends on the existence of the marker, ###TOP_LOGO###, in the template file.\r\n  toplogo =  EXT:statictemplates/media/uploads/green/pict_logo.png\r\n    # cat=basic/file/t; type=file[IMAGE_EXT]; label=Cell Background image: Cell or table background image, inserted as \'background="path_to_image"\'. Depends on the existence of the marker, ###CELL_BACK###, in the template file.\r\n  cellBack = \r\n}\r\n\r\n\r\nsubmenu {\r\n    # cat=menu3/typo; type=wrap; label=Menu element font wrap: Styling wrap for the submenu item\r\n  linkWrap = <font face="arial,helvetica,sans-serif" size="1" color="white">|</font>\r\n    # cat=menu3/typo; type=wrap; label=Menu element wrap: Wrap for the entire submenu item\r\n  allWrap = <tr><td>|</td></tr>\r\n    # cat=menu3/typo; type=wrap; label=All menu wrap: This finally wraps all elements\r\n  wrap = <table border="0" cellpadding="4" cellspacing="0"> | </table>\r\n    # cat=menu3/dims; type=offset; label=Menu offset: Offset of the submenu\r\n  menuOffset = 10,10\r\n    # cat=menu3/dims; type=int+; label=Submenu Cell width: This value defines the width in pixels of the tablecell where the submenu is displayed\r\n  cellWidth = 200\r\n}\r\n\r\n\r\n  # cat=basic/typo; type=wrap; label=Page title wrap: Wrap for the page title displayed above the menu. Depends on the existence of the marker, ###PAGE_TITLE###, in the template file.\r\npage.titleWrap = <font face="verdana" color="white"><b>|</b></font>\r\n  # cat=basic/typo; type=offset; label=Page title offset: Offset of the page title displayed above the menu\r\npage.offset = 10,10\r\n\r\n  # cat=basic/dims; type=offset; label=Content offset: Offset of the page content\r\npage.contentOffset = 0,10\r\n\r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = white\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = \r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = \r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = \r\n\r\nPAGE_TARGET = \r\ncontent.pageFrameObj = \r\nstyles.content.imgtext.maxW = 400\r\n  # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table where the content is displayed in the page-frame\r\ncontentWidth = 400\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "GREEN"\r\n  description = This is a single-page template based on an HTML-template file. This means the position of elements such as the menu, submenu, page content and logo images are defined by the position of markers in an HTML-file, you may want to edit.\r\n  bulletlist = HTML-template file based: Lets you design your site layout by your favourite HTML-editor! (1)// 1+2 level DHTML based pop-up menu. 1. level is graphical and 2. level is text based. // Rollover state on DHTML-menu. // 3. level optional menu, text based. // Page title inserted in template (optional). (7) // Top logo and top image (basically the same) may be inserted in HTML-template file. (6,5) // Optionally use of a table/tablecell background image defined from TypoScript.  \r\n  image = gfx/GREEN_basic.gif\r\n  1=page.file.template\r\n  2=page.contentOffset\r\n  3=contentWidth,styles.content.imgtext.maxW\r\n  4=page.file.background,bgCol\r\n  5=page.file.topimage\r\n  6=page.file.toplogo\r\n  7=page.titleWrap,page.offset\r\n}\r\nTSConstantEditor.menu3 {\r\n  header = Standard Template "GREEN"\r\n  description = Simple Text based menu.\r\n  bulletlist = \r\n  image = gfx/GREEN_menu3.gif\r\n  1=submenu.menuOffset\r\n  2=submenu.cellWidth\r\n  3=submenu.linkWrap,submenu.allWrap\r\n  4=submenu.wrap\r\n}\r\n', '#  Submenu (level 3!), text based\r\n\r\ntemp.submenu = HMENU\r\ntemp.submenu.entryLevel = 2\r\ntemp.submenu.1 = TMENU\r\ntemp.submenu.1.wrap = {$submenu.wrap}\r\ntemp.submenu.stdWrap.offsetWrap = {$submenu.menuOffset}\r\ntemp.submenu.1.NO {\r\n  allWrap =  {$submenu.allWrap}\r\n  linkWrap = {$submenu.linkWrap}\r\n  ATagBeforeWrap = 1\r\n}\r\n\r\n\r\n# Page object\r\n\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.bodyTagMargins = 0\r\npage.bgImg = {$page.file.background}\r\npage.noLinkUnderline = 1\r\n\r\npage.10 = TEMPLATE\r\npage.10 {\r\n  template = FILE\r\n  template.file = {$page.file.template}\r\n  workOnSubpart = DOCUMENT_BODY\r\n  marks {\r\n    TOP_LOGO = IMAGE\r\n    TOP_LOGO.file = {$page.file.toplogo}\r\n\r\n    TOP_IMAGE = IMAGE\r\n    TOP_IMAGE.file = {$page.file.topimage}\r\n\r\n    PAGE_TITLE = TEXT\r\n    PAGE_TITLE.field = title\r\n    PAGE_TITLE.wrap = {$page.titleWrap}\r\n    PAGE_TITLE.offsetWrap = {$page.offset}\r\n\r\n    MAIN_MENU < styles.gmenu_layer.green\r\n\r\n    SUB_MENU = COA\r\n    SUB_MENU.10 < temp.submenu\r\n    SUB_MENU.20 = CLEARGIF\r\n    SUB_MENU.20.width = {$submenu.cellWidth}\r\n\r\n    CONTENT = COA\r\n    CONTENT.stdWrap.offsetWrap = {$page.contentOffset}\r\n    CONTENT.5 < styles.content.editPanelPage\r\n    CONTENT.10 < styles.content.get\r\n    CONTENT.20 = CLEARGIF\r\n    CONTENT.20.width = {$contentWidth}\r\n    CONTENT.20.wrap = <br />|\r\n    CONTENT.30 < styles.content.lastUpdate\r\n    CONTENT.40 < styles.content.typo3_powered\r\n\r\n    CELL_BACK = IMG_RESOURCE\r\n    CELL_BACK.file = {$page.file.cellBack}\r\n    CELL_BACK.stdWrap.required = 1\r\n    CELL_BACK.stdWrap.wrap = background="|"\r\n  }\r\n}\r\n\r\n\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n', '');
INSERT INTO static_template VALUES ('75', '0', '1071666624', '997271475', 'styles.gmenu_layer.green', '', '\r\nstyles.gmenu_layer.green >\r\nstyles.gmenu_layer.green {\r\n    # cat=menu/color; type=color; label=Menu background color1: (See below)\r\n  bgCol = #7b8ca5\r\n\r\n    # cat=menu/typo; type=file[ttf]; label=Font file: TrueType (ttf) font for the menu.\r\n  file.fontFile = \r\n    # cat=menu/typo; type=int[1-40]; label=Font size: Font size on menu items\r\n  fontSize = 10\r\n    # cat=menu/typo; type=color; label=Font color: Font color on menu items\r\n  fontColor = white\r\n    # cat=menu/typo; type=offset; label=Text offset: Enter the offset of the text from the upper-left corner on the menu items\r\n  offset = 11,14\r\n    # cat=menu/typo; type=offset; label=Text offset of first item: Enter the offset of the text from the upper-left corner on the first menu item in the menu! You may want to set the x dimensions a few pixels below the general value. Keep the y-dimension the same.\r\n  firstOffset = 11,14\r\n    # cat=menu/typo; type=int[0-20]; label=Letter spacing: Enter the spacing between characters\r\n  spacing=1\r\n    # cat=menu//x; type=boolean; label=NiceText: Disable this for higher speed, but less font rendering quality.\r\n  niceText=1\r\n    # cat=menu//x; type=boolean; label=AntiAlias: Anti Alias enabling. Default is on. Disable this if you\'re using "pixel-fonts" like Mini7. (NiceText must be disabled).\r\n  antiAlias=1\r\n\r\n\r\n    # cat=menu/typo; type=boolean; label=Rollover: Click this option if you want a rollover (mouseover) effect on the menu items.\r\n  RO = 0\r\n    # cat=menu/typo; type=color; label=Rollover, font color: Enter the rollover font color of the text on the menu item.\r\n  RO.fontColor =\r\n    # cat=menu/color; type=color; label=Rollover, Menu background color: Background color of the menu-items when the mouse cursor moves over the item.\r\n  RO.bgCol = #608ca5\r\n\r\n    # cat=menu/typo; type=boolean; label=Active: Click this option if you want a \'Active\' effect on the menu items. \'Active\' means how the item looks when you\'re on that page or a subpage to that page.\r\n  ACT = 0\r\n    # cat=menu/typo; type=color; label=Active, font color: Enter the \'Active\' font color of the text on the menu item.\r\n  ACT.fontColor =\r\n    # cat=menu/color; type=color; label=Active, Menu background color:  Background color of the menu-items when \'Active\'.\r\n  ACT.bgCol = #7b7392\r\n\r\n    # cat=menu//x; type=int[1-256]; label=Reduce colors: Number of indexed colors on menu items. If your menu items end up with weird colors, you can try to enter a higher number of colors. But the graphics-files will also increase their filesize.\r\n  reduceColors = 64\r\n    # cat=menu/dims; type=int+; label=Item Height: The height in pixels of the menu items\r\n  height = 19\r\n\r\n    # cat=menu/typo; type=offset; label=Menu offset: Enter the offset of the whole menu\r\n  menuOffset = 20,0\r\n}\r\n\r\n\r\nstyles.gmenu_layer.green.file {\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=Background image: This image is tiled horizontally on the background of the menu item.\r\n  background = EXT:statictemplates/media/uploads/green/menu_back.png\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=First image: This image is placed to the left on the first menu item\r\n  first = EXT:statictemplates/media/uploads/green/menu_first.png\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=Middle image: This image is placed to the left on all other items than the first\r\n  middle = EXT:statictemplates/media/uploads/green/menu_middle.png\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=Last image: This image is placed to the right on the last menu item.\r\n  last = EXT:statictemplates/media/uploads/green/menu_last.png\r\n    # cat=menu/file/x1; type=file[IMAGE_EXT]; label=Sublevel image: This image is placed to the right before the \'Last\' image on the menu items which has a submenu!\r\n  sublevel = EXT:statictemplates/media/uploads/green/menu_sublevel.png\r\n}\r\n\r\n\r\nstyles.gmenu_layer.green.layer {\r\n    # cat=menu2/dims; type=int+; label=X-offset of the pop-up layers: This is the distance in pixels from the left of the browser window to the menu pop-up layers\r\n  xPosOffset = 30\r\n    # cat=menu2/dims; type=int+; label=Y-offset of the pop-up layers: This is the distance in pixels from the top of the browser window to the menu pop-up layers\r\n  topOffset = 105\r\n    # cat=menu2/enable; type=boolean; label=Automatic hide: If set, the menu layer hides when mouse roll out of the layer area.\r\n  mouseOutHide = 0\r\n}\r\n\r\n\r\nstyles.gmenu_layer.green.2 {\r\n    # cat=menu2/typo; type=wrap; label=Menu element wrap: Wrap for the entire submenu item\r\n  allWrap = <tr><td>|</td></tr>\r\n    # cat=menu2/typo; type=wrap; label=Menu element font wrap: Styling wrap for the submenu item\r\n  linkWrap = <font face="arial,helvetica,sans-serif" size="1" color="white">|</font>\r\n    # cat=menu2/typo; type=wrap; label=All menu wrap: This finally wraps all elements\r\n  wrap = <table border="0" bgcolor="#003300" cellpadding="4" cellspacing="0"> | </table>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.menu {\r\n  header = GREEN GMENU_LAYER\r\n  description = Graphical level-1 menu with a \'first\', \'middle\' and \'last\' bullet. You can also define a bullet indicating if a menu-item has subitems.\r\n  bulletlist = DHTML-based layers on level 2 (text-based level 2 menu, see \'MENU2\'). // \'first\' bullet: An image which appears in the left side of the first menu item only. (3)// \'middle\' bullet: An image which appears in the right side of all menu items which are not the last item. (4)// \'last\' bullet: An image which appears in the right side of the last item in the menu only. (5)// \'sublevel\' bullet: An image which indicates the existence of sublevels. (6)// Rollover and active state colors. // Menu item background image. (2)\r\n  image = gfx/GREEN_menu.gif\r\n  1=styles.gmenu_layer.green.height\r\n  2=styles.gmenu_layer.green.file.background,styles.gmenu_layer.green.bgCol\r\n  3=styles.gmenu_layer.green.file.first\r\n  4=styles.gmenu_layer.green.file.middle\r\n  5=styles.gmenu_layer.green.file.last\r\n  6=styles.gmenu_layer.green.file.sublevel\r\n  7=styles.gmenu_layer.green.file.fontFile,styles.gmenu_layer.green.fontSize,styles.gmenu_layer.green.fontColor,styles.gmenu_layer.green.offset,styles.gmenu_layer.green.firstOffset,styles.gmenu_layer.green.spacing\r\n}\r\nTSConstantEditor.menu2 {\r\n  header = GREEN GMENU_LAYER\r\n  description = DHTML layers with level 2. Menu is text based.\r\n  bulletlist = \r\n  image = gfx/GREEN_menu2.gif\r\n  1=styles.gmenu_layer.green.layer.xPosOffset,styles.gmenu_layer.green.layer.topOffset\r\n  2=styles.gmenu_layer.green.2.allWrap,styles.gmenu_layer.green.2.linkWrap\r\n  3=styles.gmenu_layer.green.2.wrap\r\n}\r\n\r\n', 'includeLibs.gmenu_layers = EXT:statictemplates/media/scripts/gmenu_layers.php\r\n\r\nstyles.gmenu_layer.green >\r\nstyles.gmenu_layer.green = HMENU\r\nstyles.gmenu_layer.green.stdWrap.offsetWrap = {$styles.gmenu_layer.green.menuOffset}\r\nstyles.gmenu_layer.green.wrap = <span style="white-space: nowrap;"> | </span>\r\nstyles.gmenu_layer.green.1 = GMENU_LAYERS\r\nstyles.gmenu_layer.green.1 {\r\n  target = _top\r\n  xPosOffset = -{$styles.gmenu_layer.green.layer.xPosOffset}\r\n  lockPosition = x\r\n  expAll = 1\r\n  topOffset = {$styles.gmenu_layer.green.layer.topOffset}\r\n  hideMenuWhenNotOver = {$styles.gmenu_layer.green.layer.mouseOutHide}\r\n}\r\nstyles.gmenu_layer.green.1.NO {\r\n  XY = [10.w]+[4.w]+[5.w]+[6.w]+[7.w] , {$styles.gmenu_layer.green.height}\r\n  backColor = {$styles.gmenu_layer.green.bgCol} \r\n  reduceColors = {$styles.gmenu_layer.green.reduceColors}\r\n\r\n  3 = IMAGE\r\n  3.file = {$styles.gmenu_layer.green.file.background}\r\n  3.tile = 10,1\r\n\r\n  4 = IMAGE |*|_x_\r\n  4.file = {$styles.gmenu_layer.green.file.first}\r\n\r\n  5 = _x_ |*| IMAGE \r\n  5.file = {$styles.gmenu_layer.green.file.middle}\r\n\r\n#  6 = IMAGE\r\n  6.file = {$styles.gmenu_layer.green.file.sublevel}\r\n  6.align = r,t\r\n  6.offset = -[7.w]\r\n\r\n  7 = _x_|*|_x_|*| IMAGE\r\n  7.file = {$styles.gmenu_layer.green.file.last}\r\n  7.align = r,t\r\n\r\n  10 = TEXT\r\n  10.text.field = nav_title // title\r\n  10.offset =  {$styles.gmenu_layer.green.firstOffset}||{$styles.gmenu_layer.green.offset}|*||*| \r\n  10.fontColor = {$styles.gmenu_layer.green.fontColor}\r\n  10.niceText = {$styles.gmenu_layer.green.niceText}\r\n  10.antiAlias = {$styles.gmenu_layer.green.antiAlias}\r\n  10.fontSize = {$styles.gmenu_layer.green.fontSize}\r\n  10.spacing = {$styles.gmenu_layer.green.spacing}\r\n  10.fontFile = {$styles.gmenu_layer.green.file.fontFile}\r\n}\r\n\r\nstyles.gmenu_layer.green.1.RO < styles.gmenu_layer.green.1.NO\r\nstyles.gmenu_layer.green.1.RO = {$styles.gmenu_layer.green.RO}\r\nstyles.gmenu_layer.green.1.RO {\r\n  backColor = {$styles.gmenu_layer.green.RO.bgCol}\r\n  10.fontColor = {$styles.gmenu_layer.green.RO.fontColor}\r\n}\r\n\r\nstyles.gmenu_layer.green.1.ACT < styles.gmenu_layer.green.1.NO\r\nstyles.gmenu_layer.green.1.ACT = {$styles.gmenu_layer.green.ACT}\r\nstyles.gmenu_layer.green.1.ACT {\r\n  backColor = {$styles.gmenu_layer.green.ACT.bgCol}\r\n  10.fontColor = {$styles.gmenu_layer.green.ACT.fontColor}\r\n}\r\n\r\nstyles.gmenu_layer.green.1 {\r\n  IFSUB < .NO\r\n  IFSUB = 1\r\n  IFSUB.6 = IMAGE\r\n\r\n  IFSUBRO < .RO\r\n  IFSUBRO.6 = IMAGE\r\n}\r\n\r\n\r\n\r\n# Submenu on layers:\r\n\r\nstyles.gmenu_layer.green.2 = TMENU\r\nstyles.gmenu_layer.green.2.wrap = {$styles.gmenu_layer.green.2.wrap}\r\nstyles.gmenu_layer.green.2.NO {\r\n  allWrap =  {$styles.gmenu_layer.green.2.allWrap}\r\n  linkWrap = {$styles.gmenu_layer.green.2.linkWrap}\r\n  ATagBeforeWrap = 1\r\n}\r\n\r\n', '');
INSERT INTO static_template VALUES ('77', '0', '1071668206', '999602864', 'cSet stylesheet', '', 'content.RTE_compliant.mode = stylesheets\r\n\r\ncontent.wrap {\r\n  header = \r\n  header1 = <h1>|</h1>\r\n  header2 = <h2>|</h2>\r\n  header3 = <h3>|</h3>\r\n  header4 = <h4>|</h4>\r\n  subheader1 = <div class="subhead1">|</div>\r\n  subheader2 = <div class="subhead2">|</div>\r\n  subheader3 = <div class="subhead3">|</div>\r\n  headerDate = <div class="headerdate">|</div>\r\n  bodytext =\r\n}\r\ncontent {\r\n  defaultHeaderType = 2\r\n  defaultSubHeaderType = 3\r\n  menuWrap = <div class="celmenu">|</div>\r\n  subMenuWrap = <div class="celsubmenu">|</div>\r\n  menuAllWrap =\r\n  menuATagBeforeWrap =0\r\n  break.bodytext = \r\n  break.bodytext_parseFunc = <br />\r\n}\r\n\r\nstyles.content {\r\n  imgtext.captionWrap = <div class="caption">|</div>\r\n  bulletlist.altWrap = <div class="bulletlist">|</div>\r\n  table.altWrap = <div class="table">|</div>\r\n  textStyle.altWrap = <p>|</p>\r\n  uploads.wrap = \r\n  uploads.sizeWrap = <div class="filelinkssize">|</div>\r\n  uploads.labelWrap = <div class="filelinks">|</div>\r\n  links.sword = <span class="searchmarkup">|</span>\r\n}\r\nstyles.sitemap.text.totalWrap = \r\n\r\ncontent.headerSpace = 0|0\r\ncontent.space = 0|0\r\n\r\n\r\n# cat=content/file; type=file[css]; label=Style sheet: The default stylesheet is EXT:statictemplates/media/scripts/defaultstylesheet.css. Make a copy of this file, edit the copy and upload it as resource here!\r\ncontent.stylesheet.file = EXT:statictemplates/media/scripts/defaultstylesheet.css\r\n\r\n\r\n# REMOVING categories for constants:\r\n\r\nstyles.content.textStyle {\r\n    # cat=\r\n  face = \r\n    # cat=\r\n  size = \r\n    # cat=\r\n  color = \r\n}\r\n', '# Setting Style sheet\r\npage.headerData.10 = FILE\r\npage.stylesheet = {$content.stylesheet.file}\r\n\r\n\r\n\r\n# REMOVING <br /> wraps for the menu content element and header\r\ntt_content.text.20.parseFunc.tags.typohead.stdWrap.wrap = \r\n\r\ntt_content.menu = COA \r\ntt_content.menu { \r\n  20 { \r\n    3.renderObj { \r\n      wrap2 = \r\n    } \r\n    4.1.NO { \r\n      afterWrap = {$content.subMenuWrap} \r\n    } \r\n    7.1.wrap = \r\n    7.2.wrap = \r\n  } \r\n} \r\n\r\n# Setting stylesheet for Content Element sitemap\r\ntt_content.menu.20.2 {\r\n  1.NO.allWrap = \r\n  1.NO.linkWrap = <div class="sitemap1">|</div>\r\n  2.NO.allWrap = \r\n  2.NO.linkWrap = <div class="sitemap2">|</div>\r\n  3.NO.allWrap = \r\n  3.NO.linkWrap = <div class="sitemap3">|</div>\r\n  4.NO.allWrap = \r\n  4.NO.linkWrap = <div class="sitemap4">|</div>\r\n}\r\n\r\n\r\n# Overriding some Setup values for tt_content elements:\r\ntt_content {\r\n  menu.20.3.renderObj.wrap = \r\n  menu.20.3.renderObj.innerWrap = <div class="celmenu">|</div>\r\n\r\n  mailform.20.labelWrap.wrap = <span class="mailform">|</span>\r\n  mailform.20.commentWrap.wrap = <span class="mailformcomment">|</span>\r\n  mailform.20.COMMENT.layout = <tr><td colspan="3">###COMMENT###</td></tr>\r\n  mailform.20.radioWrap.wrap = <span class="mailformradio">|</span><br />\r\n  mailform.20.REQ.labelWrap.wrap = <span class="mailformrequired">|</span>\r\n\r\n  search.30.labelWrap.wrap = <div class="searchform">|</div>\r\n\r\n  login.20.labelWrap.wrap = <div class="loginform">|</div>\r\n  login.20.REQ.labelWrap.wrap = <div class="loginform">|</div>\r\n}\r\n\r\n\r\n# Search result:\r\ntt_content.search.20 {\r\n  renderObj.10.textStyle >\r\n  renderObj.10.fontTag >\r\n  renderObj.10.innerWrap = <div class="searchresultpagetitle">|</div>\r\n  renderObj.20.stdWrap.textStyle >\r\n  renderObj.20.stdWrap.innerWrap = <div class="searchresultcontent">|</div>\r\n  layout.10.fontTag = <div class="searchresultheader">|</div>\r\n  layout.20.fontTag = <div class="searchresultheader">|</div>\r\n  noResultObj.10.fontTag  = <div class="searchresultpagetitle">|</div>\r\n}\r\n\r\n\r\n\r\n[globalVar=LIT:0<{$content.RTE_compliant}]\r\n[else]\r\n# Configuration of general text rendering:\r\ntt_content.text.20.parseFunc.nonTypoTagStdWrap {\r\n  trim=1\r\n  required=1\r\n  textStyle < tt_content.text.20.textStyle\r\n}\r\ntt_content.text.20.textStyle >\r\ntt_content.text.20.parseFunc.tags.typolist.breakoutTypoTagContent = 1\r\ntt_content.text.20.parseFunc.tags.typohead.breakoutTypoTagContent = 1\r\n[global]\r\n\r\n\r\n', 'This static_template should be included as an alternative to the traditional "cSet (default)".\r\nMost wraps are substituted with either traditional HTML-tags or <div> tags with class-definitions refering to the default stylesheet in EXT:statictemplates/media/scripts/defaultstylesheet.css\r\nBodytext is wrapped in <P>-tags and double-line-breaks are substituted with </p><p> while ordinary linebreaks are substituted with a regular <BR> tag.');
INSERT INTO static_template VALUES ('78', '0', '1054752852', '999705238', 'plugin.alt.print (98)', '', 'plugin.alt.print >\r\nplugin.alt.print {\r\n    # cat=plugin.print/file; type=file[html,htm,tmpl,txt]; label= Template File for printversion: &type=98 defines a printer friendly design for page content. This template file lets you define the position of page titles and the content.\r\n  file.template = EXT:statictemplates/media/scripts/printversion_content.tmpl\r\n    # cat=plugin.print/file; type=file[css]; label= Printerfriendly CSS stylesheet\r\n  file.stylesheet = \r\n}', 'alt_print >\r\nalt_print = PAGE\r\nalt_print.typeNum=98\r\nalt_print.stylesheet = {$plugin.alt.print.file.stylesheet}\r\n\r\nalt_print.10 = TEMPLATE\r\nalt_print.10 {\r\n  template = FILE\r\n  template.file = {$plugin.alt.print.file.template}\r\n  marks {\r\n    PAGE_TITLE = TEXT\r\n    PAGE_TITLE.field = title\r\n    PAGE_SUBTITLE = TEXT\r\n    PAGE_SUBTITLE.field = subtitle\r\n    PAGE_AUTHOR = TEXT\r\n    PAGE_AUTHOR.field = author\r\n    PAGE_AUTHOR.required=1\r\n    PAGE_AUTHOR.typolink.parameter.field = author_email\r\n    PAGE_UID = TEXT\r\n    PAGE_UID.field = uid\r\n    CONTENT < styles.content.get\r\n  }\r\n  workOnSubpart = DOCUMENT_BODY\r\n}\r\n\r\n', 'Creates a PAGE object, alt_printversion, with typeNum = 98. This page displays the \'normal\' page content along with the page title and page author in a printer friendly display for printing.\r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.\r\n\r\nDepends on \'content (default)\' or similar to be already included.');
INSERT INTO static_template VALUES ('84', '0', '1054752908', '999781309', 'plugin.alt.xmlnewsfeed (89)', '', 'plugin.alt.xmlnewsfeed >\r\nplugin.alt.xmlnewsfeed {\r\n    # cat=plugin.tt_news/file; \r\n\r\n}\r\n', '\r\n## Set up page/type number:\r\nalt_xmlnewsfeed >\r\nalt_xmlnewsfeed = PAGE\r\nalt_xmlnewsfeed {\r\n  typeNum=89\r\n  config.disableAllHeaderCode = 1\r\n  config.additionalHeaders = Content-type: text/xml\r\n\r\n  ## Includes the newsLib:\r\n  includeLibs.ts_news = EXT:statictemplates/media/scripts/newsLib.inc\r\n\r\n  ## This enables the tt_content.list item to display the news:\r\n  10 = USER\r\n  10 {\r\n    userFunc = user_news->main_xmlnewsfeed\r\n  }\r\n}\r\n\r\n', 'Creates a PAGE object, alt_xmlnewsfeed, with typeNum = 89. \r\nThis delivers the tt_news elements as an XML-feed depending on parameters passed to the script.\r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.\r\n\r\nDepends on \'content (default)\' or similar to be already included.');
INSERT INTO static_template VALUES ('85', '0', '1071766055', '999782684', 'plugin.alt.wap (97)', '', 'plugin.alt.wap >\r\nplugin.alt.wap {\r\n\r\n}\r\n', '## Set up page/type:\r\nalt_wap >\r\nalt_wap = PAGE\r\nalt_wap {\r\n  typeNum=97\r\n  config.disableAllHeaderCode = 1\r\n  config.additionalHeaders = Content-type: text/vnd.wap.wml\r\n\r\n  ## Includes the newsLib:\r\n  includeLibs.alt_wap = EXT:statictemplates/media/scripts/wapversionLib.inc\r\n\r\n  ## Inserting the USER cObject for WAP/XML rendering\r\n  10 = USER\r\n  10 {\r\n    userFunc = user_wapversion->main_wapversion\r\n    debug=0\r\n    preTitle = T3WAP\r\n    navLabels.prev = Prev\r\n    navLabels.next = Next\r\n    navLabels.up = Up\r\n  }\r\n}\r\n\r\n## Setting up a testpage at type 197\r\nalt_wap_test < alt_wap\r\nalt_wap_test {\r\n  typeNum=197\r\n  config.additionalHeaders = \r\n  10.debug = 1\r\n}\r\n\r\n## If the browser is a WAP-device,\r\n[device=wap]\r\n\r\nalt_wap.typeNum=0\r\n\r\n[global]\r\n\r\n', 'Creates a PAGE object, alt_wap, with typeNum = 97. This page displays the page in WAP format.\r\n\r\nStill experimental.\r\n\r\nJust include this static template directly in your template, and you\'re up\'n\'running.\r\n\r\nNOTICE: This WAP template pulls a little trick if the client turns out to be a normal WAP device - then the WAP pages are served from "&type=0" ! So only when using WAP browsers (like Opera) should you use "&type=97".');
INSERT INTO static_template VALUES ('89', '0', '1093529398', '1001674349', 'template; GLUECK', '43,68', 'page.file {\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Background image:  Background image of the page.\r\n  bgImg = EXT:statictemplates/media/uploads/back1.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Logo Image:  Logo image in the top of the page.\r\n  logoImg = EXT:statictemplates/media/uploads/testlogo.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Top image:  Image on top of the normal and right column. This image is the default image. The first media file found in the rootline will substitute this!\r\n  topImg = EXT:statictemplates/media/uploads/topimage.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Margin Logo Image:  Logo image in the top of the margin column.\r\n  marginLogoImg = EXT:statictemplates/media/uploads/testlogo2.png\r\n\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Menu column background image:  Background image of the menu column.\r\n  menuBgImg = EXT:statictemplates/media/uploads/back2.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Normal column background image:  Background image of the normal column.\r\n  normalBgImg = EXT:statictemplates/media/uploads/back3.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Right column background image:  Background image of the right column.\r\n  rightBgImg = EXT:statictemplates/media/uploads/back4.png\r\n    # cat=basic/file; type=file[IMAGE_EXT]; label=Whole table background image:  Background image of the whole main content table.\r\n  wholeTableBgImg = EXT:statictemplates/media/uploads/back5.png\r\n}\r\npage.bgColors {\r\n    #cat=basic/color; type=color; label=Menu column bgColor: This is the background color of the table cell where the menu and logo is displayed.\r\n  menuBgColor = \r\n    #cat=basic/color; type=color; label=Content column bgColor: This is the background color of the table cell where the content is displayed. You would normally regard this as being the "page color".\r\n  normalBgColor = \r\n    #cat=basic/color; type=color; label=Right column bgColor: This is the background color of the table cell where the right column content is displayed.\r\n  rightBgColor = \r\n    #cat=basic/color; type=color; label=Whole table column bgColor: This is the background color of the whole table.\r\n  wholeTableBgColor = \r\n}\r\n\r\n\r\n// This excludes the constant "styles.content.imgtext.maxW" from being displayed in the constant editor. The reason why this is desirable is that the REGISTER is used to override this value in this template.\r\n  # cat=\r\nstyles.content.imgtext.maxW =\r\n\r\npageCol {\r\n    # cat=content,basic/cImage/a_maxw1; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume.\r\n  maxImageWidth = 343\r\n    # cat=basic/dims; type=int+; label=Content width: This value defines the width in pixels of the table cell where the content is displayed\r\n  page.width = 343\r\n    # cat=basic/dims; type=int+; label=Page table height: This is the minimum page height.\r\n  page.height = 400\r\n    # cat=basic/dims; type=offset[Left, Top, Right,,Width]; label=Content offset: This value defines the margin in pixels from the left and top of the main content table cell\r\n  page.contentOffset = 10,8,10\r\n}\r\n\r\n  # cat=basic/dims; type=offset[Left, Top, Right, Bottom]; label=Page offset: This value defines the margin in pixels from the left and top of the browser window\r\npage.offset = ,20\r\n  # cat=basic; type=options[left,right,center]; label=Alignment of the page: Alignment of the page-table\r\npage.align = center\r\n\r\n  #cat=basic/dims; type=int+; label=Content margin, left: Set the number of pixels whitespace between the content column and the menu column.\r\npage.contentMarginLeft = 10\r\n  #cat=basic/dims; type=int+; label=Content margin, right: Set the number of pixels whitespace between the content column and the right column.\r\npage.contentMarginRight = 10\r\n  #cat=basic/dims; type=int+; label=Distance Top image to Content: Sets the distance in pixels between the top image and the content columns, normal and right.\r\npage.topImgToContentDist = 10\r\n\r\n\r\n\r\nrightCol {\r\n    #cat=right,basic/enable; type=boolean; label=Enable right column: Click this option to enable the right column in the page table. This column can be used for "news" from a certain page, but inserted on all pages. You can also configure the column to hold "secondary" content specific for each page. Then content of the column-type "Border" is inserted. NOTE: This option is also found in the dedicated category "RIGHT" that configures the characteristics of this column.\r\n  enable = 1\r\n    #cat=right/enable; type=options[getNews,getBorder]; label=Column content: Choose "getNews" to select content from a specific page (defined below here) or "getBorder" to display the "Border"-content of the current page.\r\n  borderContent = getBorder\r\n    # cat=right/enable/zz; type=int+; label=News Content PID: If you selected "getNews" above, this is where you enter the page-id of the page from which to fetch the "news" content for the column.\r\n  getNewsPid = \r\n    #cat=right/dims; type=int+; label=Max Image Width: This defines that maximum number of pixels (width) a block of images inserted as content is allowed to consume. NOTE: This is specific for the right column! The figure should approx. match the width of the image in the top of this column!\r\n  maxImageWidth = 140\r\n    #cat=right/dims; type=offset[Left, Top, Right,,Width]; label=Content offset: This is the offset of the content from the upper-left corner of the table cell.\r\n  offset = 5,8,5\r\n    #cat=right/typo; type=small; label=Bodytext font face\r\n  textStyle_face =\r\n    #cat=right/typo; type=int[1-5]; label=Bodytext font size\r\n  textStyle_size =\r\n    #cat=right/typo; type=color; label=Bodytext font color\r\n  textStyle_color =\r\n    #cat=right/typo; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType =\r\n}\r\n\r\n\r\nmenuCol {\r\n    #cat=menucolumn,basic/enable; type=boolean; label=Enable menu column: Click this option to enable the menu column in the page table. This column can be used for "news" from a certain page, but inserted on all pages. You can also configure the column to hold "secondary" content specific for each page. Then content of the column-type "Left" is inserted. \r\n  enable = 1\r\n    #cat=menucolumn/enable; type=options[getNews,getLeft]; label=Column content: Choose "getNews" to select content from a specific page (defined below here) or "getLeft" to display the "Left"-content of the current page.\r\n  borderContent = getNews\r\n    #cat=menucolumn/dims; type=int+; label=Max Image Width: This indicates that maximum number of pixels (width) a block of images inserted as content is allowed to consume. NOTE: This is specific for the menu column! The figure should approx. match the width of the image in the top of this column!\r\n  maxImageWidth = 140\r\n    #cat=menucolumn/dims; type=offset[Left, Top, Right,,Width]; label=Content offset: This is the offset of the content from the upper-left corner of the table cell.\r\n  offset = 5,8,5\r\n    #cat=menucolumn/typo; type=small; label=Bodytext font face\r\n  textStyle_face =\r\n    #cat=menucolumn/typo; type=int[1-5]; label=Bodytext font size\r\n  textStyle_size =\r\n    #cat=menucolumn/typo; type=color; label=Bodytext font color\r\n  textStyle_color =\r\n    #cat=menucolumn/typo; type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default. \r\n  defaultHeaderType =\r\n}\r\n  # cat=menucolumn/enable/zz; type=int+; label=News Content PID: If you selected "getNews" above, this is where you enter the page-id of the page from which to fetch the "news" content for the column.\r\nstyles.content.getNews.newsPid = 0\r\n\r\n\r\n\r\nmenu1 {\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Left Bullet image\r\n  file.bullet_left = EXT:statictemplates/media/bullets/bullet1_n.gif\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Left Bullet image, Rollover\r\n  file.bullet_left_RO = EXT:statictemplates/media/bullets/bullet1_h.gif\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Right Bullet image\r\n  file.bullet_right = EXT:statictemplates/media/bullets/bullet2_n.gif\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Right Bullet image, Rollover\r\n  file.bullet_right_RO = EXT:statictemplates/media/bullets/bullet2_h.gif\r\n\r\n    # cat=menu; type=options[,left,right,center]; label=Alignment of the menu item text\r\n  align =\r\n\r\n    #cat=menu/dims; type=int+; label=Separator Line Thickness: Thickness in pixels of the separator line. 0 (zero) disables.\r\n  lineThickness = 2\r\n    #cat=menu/color; type=color; label=Separator Line Color: Color of the separator lines between menu items.\r\n  lineColor = black\r\n    #cat=menu/enable; type=boolean; label=Bottom Separator Line: If set, the separator line will appear in the bottom of the menu as well.\r\n  bottomLine = 1\r\n    #cat=menu/enable; type=boolean; label=Top Separator Line: If set, the separator line will appear in the top of the menu as well.\r\n  topLine = 1\r\n    #cat=menu/color; type=color; label=Item Background Color: Background color of the menu item table rows.\r\n  bgColor = #eeeeff\r\n\r\n    #cat=menu/dims; type=offset[Left, Top, Right,,Width]; label=Menu offset: This is the offset of the menu. \r\n  offset = 5,8,5\r\n    #cat=menu/dims; type=int+; label=Menu item height\r\n  itemHeight = 20\r\n\r\n    #cat=menu/typo; type=string; label=Menu item style\r\n  NO.itemStyle =   font-family: verdana,arial,sans-serif;  font-size: 11px;  font-weight: ;  font-style: italic;\r\n    #cat=menu/color; type=color; label=Normal Link Color\r\n  NO.itemLinkColor = olive\r\n    #cat=menu/color; type=color; label=Normal Link Color, Roll over\r\n  NO.itemLinkColorRO = red\r\n\r\n    #cat=menu/enable; type=boolean; label=Enable Active: If set, the active configuration is enabled. Active menu items are "the page you\'re at".\r\n  ACT = 1\r\n    #cat=menu/typo; type=string; label=Active Menu item style\r\n  ACT.itemStyle =   font-family: verdana,arial,sans-serif;  font-size: 11px;  font-weight: bold;  font-style: italic;\r\n    #cat=menu/color; type=color; label=Active Link Color\r\n  ACT.itemLinkColor = navy\r\n    #cat=menu/color; type=color; label=Active Link Color, Roll over\r\n  ACT.itemLinkColorRO = #cc6600\r\n    #cat=menu/color; type=color; label=Active Item Background Color: Background color of the active menu item table rows.\r\n  ACT.bgColor = #ffeeee\r\n\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Active, Left Bullet image\r\n  ACT.file.bullet_left = EXT:statictemplates/media/bullets/bullet1_h.gif\r\n    # cat=menu/file; type=file[IMAGE_EXT]; label=Active, Right Bullet image\r\n  ACT.file.bullet_right = EXT:statictemplates/media/bullets/bullet2_h.gif\r\n\r\n    #cat=menu/enable; type=options[underline,none]; label=Normal Underline: If set, the menu links will be underlined.\r\n  textDecor = none\r\n    #cat=menu/enable; type=options[underline,none]; label=Roll Over Underline: If set, the menu links will be underlined on roll over.\r\n  hoverTextDecor = underline\r\n}\r\n\r\n\r\n\r\nmenu2 {\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Left Bullet image\r\n  file.bullet_left = EXT:statictemplates/media/bullets/bullet1_n.gif\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Left Bullet image, Rollover\r\n  file.bullet_left_RO = EXT:statictemplates/media/bullets/bullet1_h.gif\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Right Bullet image\r\n  file.bullet_right = EXT:statictemplates/media/bullets/bullet2_n.gif\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Right Bullet image, Rollover\r\n  file.bullet_right_RO = EXT:statictemplates/media/bullets/bullet2_h.gif\r\n\r\n    # cat=menu2; type=options[,left,right,center]; label=Alignment of the menu item text\r\n  align =\r\n\r\n    #cat=menu2/dims; type=int+; label=Separator Line Thickness: Thickness in pixels of the separator line. 0 (zero) disables.\r\n  lineThickness = 2\r\n    #cat=menu2/color; type=color; label=Separator Line Color: Color of the separator lines between menu items.\r\n  lineColor = black\r\n    #cat=menu2/enable; type=boolean; label=Bottom Separator Line: If set, the separator line will appear in the bottom of the menu as well.\r\n  bottomLine = 1\r\n    #cat=menu2/enable; type=boolean; label=Top Separator Line: If set, the separator line will appear in the top of the menu as well.\r\n  topLine = 1\r\n    #cat=menu2/color; type=color; label=Item Background Color: Background color of the menu item table rows.\r\n  bgColor = #ee99ff\r\n\r\n    #cat=menu2/dims; type=offset[Left, Top, Right,,Width]; label=Menu offset: This is the offset of the menu. \r\n  offset = 5,8,5\r\n    #cat=menu2/dims; type=int+; label=Menu item height\r\n  itemHeight = 20\r\n\r\n    #cat=menu2/typo; type=string; label=Menu item style\r\n  NO.itemStyle =   font-family: verdana,arial,sans-serif;  font-size: 10px;  font-weight: ;  font-style: ;\r\n    #cat=menu2/color; type=color; label=Normal Link Color\r\n  NO.itemLinkColor = maroon\r\n    #cat=menu2/color; type=color; label=Normal Link Color, Roll over\r\n  NO.itemLinkColorRO = black\r\n\r\n    #cat=menu2/enable; type=boolean; label=Enable Active: If set, the active configuration is enabled. Active menu items are "the page you\'re at".\r\n  ACT = 1\r\n    #cat=menu2/typo; type=string; label=Active Menu item style\r\n  ACT.itemStyle =   font-family: verdana,arial,sans-serif;  font-size: 10px;  font-weight: bold;  font-style: ;\r\n    #cat=menu2/color; type=color; label=Active Link Color\r\n  ACT.itemLinkColor = #006600\r\n    #cat=menu2/color; type=color; label=Active Link Color, Roll over\r\n  ACT.itemLinkColorRO = #00cc00\r\n    #cat=menu2/color; type=color; label=Active Item Background Color: Background color of the active menu item table rows.\r\n  ACT.bgColor = #ffeeee\r\n\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Active, Left Bullet image\r\n  ACT.file.bullet_left = EXT:statictemplates/media/bullets/bullet1_h.gif\r\n    # cat=menu2/file; type=file[IMAGE_EXT]; label=Active, Right Bullet image\r\n  ACT.file.bullet_right = EXT:statictemplates/media/bullets/bullet2_h.gif\r\n\r\n    #cat=menu2/enable; type=options[underline,none]; label=Normal Underline: If set, the menu links will be underlined.\r\n  textDecor = none\r\n    #cat=menu2/enable; type=options[underline,none]; label=Roll Over Underline: If set, the menu links will be underlined on roll over.\r\n  hoverTextDecor = underline\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nstyles.content.imgtext.maxW = 400\r\n\r\n\r\nPAGE_TARGET = \r\ncontent.pageFrameObj = \r\n\r\n  # cat=basic/color/a; type=color; label=Background color: This is the <body>-tag background color of the page.\r\nbgCol = #D6D3CE\r\n  # cat=basic/color/l; type=color; label=Link-color: Link color defined in <body>-tag\r\nlink = #006699\r\n  # cat=basic/color/l; type=color; label=Active Link-color: Active link color defined in <body>-tag\r\nalink = #00659C\r\n  # cat=basic/color/l; type=color; label=Visited Link-color: Visited link color defined in <body>-tag\r\nvlink = #00659C\r\n\r\n\r\n\r\n\r\n\r\n\r\n## TSConstantsEditor Config\r\nTSConstantEditor.basic {\r\n  header = Standard Template "GL�CK"\r\n  description = Standard template based on three columns in a table. There are first and second level textbased menus, one menu in each column. You can insert logos and content in each column and add background images to the various table cells. The template is fully programmed in TypoScript.\r\n  bulletlist =  Three columns of content each with separate background images or colors (1+14+2) // Menu column (left) and right column are optional (1+2)// 1+2 level text based menu, 1. level in menu column (left)(1) and 2. level in the right column (2) // Optional logos in the top of columns (11+13) // Optional top image (12) // Detailed adjustment of margins, widths and alignment (4+5+6+9+3+16) // Background image and color of page (10)\r\n  image = gfx/GLCK_basic.gif\r\n  1=rightCol.enable,page.file.menuBgImg,page.bgColors.menuBgColor\r\n  2=menuCol.enable,page.file.rightBgImg,page.bgColors.rightBgColor\r\n  3=page.offset\r\n  4=page.contentMarginLeft\r\n  5=page.contentMarginRight\r\n  6=page.topImgToContentDist\r\n  7=pageCol.page.width,pageCol.maxImageWidth\r\n  8=pageCol.page.height\r\n  9=pageCol.page.contentOffset\r\n  10=page.file.bgImg,bgCol\r\n  11=page.file.logoImg\r\n  12=page.file.topImg\r\n  13=page.file.marginLogoImg\r\n  14=page.file.normalBgImg,page.bgColors.normalBgColor\r\n  15=page.bgColors.wholeTableBgColor,page.file.wholeTableBgImg\r\n  16=page.align\r\n}\r\nTSConstantEditor.menu {\r\n  header = MENU, "GL�CK"\r\n  description = Text based menu with stylesheet hover color and definition of active state\r\n  image = gfx/GLCK_menu.gif\r\n  1=menu1.bottomLine,menu1.lineColor\r\n  2=menu1.topLine,menu1.lineColor\r\n  3=menu1.ACT,menu1.ACT.itemStyle,menu1.ACT.itemLinkColor,menu1.ACT.itemLinkColorRO,menu1.ACT.bgColor,menu1.align\r\n  4=menu1.textDecor,menu1.NO.itemStyle,menu1.bgColor,menu1.NO.itemLinkColor,menu1.align\r\n  5=menu1.hoverTextDecor,menu1.NO.itemLinkColorRO\r\n  6=menu1.itemHeight\r\n  7=menu1.lineThickness,menu1.lineColor\r\n  8=menu1.offset\r\n  9=menu1.file.bullet_left,menu1.file.bullet_left_RO,menu1.ACT.file.bullet_left\r\n  10=menu1.file.bullet_right,menu1.file.bullet_right_RO,menu1.ACT.file.bullet_right\r\n}\r\nTSConstantEditor.menu2 {\r\n  header = MENU2, "GL�CK"\r\n  description = Text based menu with stylesheet hover color and definition of active state\r\n  image = gfx/GLCK_menu.gif\r\n  1=menu2.bottomLine,menu2.lineColor\r\n  2=menu2.topLine,menu2.lineColor\r\n  3=menu2.ACT,menu2.ACT.itemStyle,menu2.ACT.itemLinkColor,menu2.ACT.itemLinkColorRO,menu2.ACT.bgColor,menu2.align\r\n  4=menu2.textDecor,menu2.NO.itemStyle,menu2.bgColor,menu2.NO.itemLinkColor,menu2.align\r\n  5=menu2.hoverTextDecor,menu2.NO.itemLinkColorRO\r\n  6=menu2.itemHeight\r\n  7=menu2.lineThickness,menu2.lineColor\r\n  8=menu2.offset\r\n  9=menu2.file.bullet_left,menu2.file.bullet_left_RO,menu2.ACT.file.bullet_left\r\n  10=menu2.file.bullet_right,menu2.file.bullet_right_RO,menu2.ACT.file.bullet_right\r\n}\r\nTSConstantEditor.right {\r\n  header = RIGHT COLUMN, "GL�CK"\r\n  description = Right column content. \r\n  bulletlist = Choose between actual page content marked "border" column (getBorder) or define a PID from where to get the content (getNews).\r\n  image = gfx/GLCK_columns.gif\r\n  1=rightCol.maxImageWidth\r\n  2=rightCol.offset\r\n}\r\nTSConstantEditor.menucolumn {\r\n  header = MENU COLUMN, "GL�CK"\r\n  description = Menu column content\r\n  bulletlist = Choose between actual page content marked "left" column (getLeft) or define a PID from where to get the content (getNews).\r\n  image = gfx/GLCK_columns.gif\r\n  1=menuCol.maxImageWidth\r\n  2=menuCol.offset\r\n}\r\n\r\n\r\n', '# Menu objects:\r\ntemp.menu1 = HMENU\r\ntemp.menu1.stdWrap.offsetWrap = {$menu1.offset}\r\ntemp.menu1.wrap =<table border="0" cellpadding="0" cellspacing="0" width="100%">|</table>\r\ntemp.menu1.1 = TMENU\r\ntemp.menu1.1.NO {\r\n  allWrap = <tr>|</tr>\r\n  allWrap {\r\n    addParams.bgColor = {$menu1.bgColor}\r\n    preCObject = TEXT\r\n    preCObject.if.directReturn = {$menu1.topLine} || {$menu1.lineThickness}  |*||*| \r\n    preCObject.value = <tr bgcolor="{$menu1.lineColor}"><td colspan="4"><img src="clear.gif" width="1" height="{$menu1.lineThickness}" alt="" /></td></tr>\r\n    postCObject = TEXT\r\n    postCObject.if.directReturn = 0 |*||*| {$menu1.bottomLine}\r\n    postCObject.value = <tr bgcolor="{$menu1.lineColor}"><td colspan="4"><img src="clear.gif" width="1" height="{$menu1.lineThickness}" alt="" /></td></tr>\r\n  }\r\n\r\n  beforeImg = {$menu1.file.bullet_left}\r\n  beforeROImg = {$menu1.file.bullet_left_RO}\r\n  RO = {$menu1.file.bullet_left_RO}{$menu1.file.bullet_right_RO}\r\n  beforeWrap = <td>|</td><td width="99%">\r\n  ATagParams = class="menuitems1"\r\n  stdWrap2.wrapAlign= {$menu1.align}\r\n  afterImg = {$menu1.file.bullet_right}\r\n  afterROImg = {$menu1.file.bullet_right_RO}\r\n  afterWrap = </td><td>| </td><td><img src="clear.gif" width="1" height="{$menu1.itemHeight}" alt="" /></td>\r\n}\r\ntemp.menu1.1.ACT < temp.menu1.1.NO\r\ntemp.menu1.1.ACT = {$menu1.ACT}\r\ntemp.menu1.1.ACT {\r\n  allWrap.addParams.bgColor = {$menu1.ACT.bgColor}\r\n  beforeImg = {$menu1.ACT.file.bullet_left}\r\n  afterImg = {$menu1.ACT.file.bullet_right}\r\n  ATagParams = class="menuitems1ACT"\r\n}\r\n\r\n\r\n# EXACT(!) copy of menu1; additions: entryLevel = 1, ATagParams = ...\r\ntemp.menu2 = HMENU\r\ntemp.menu2.entryLevel = 1\r\ntemp.menu2.stdWrap.offsetWrap = {$menu2.offset}\r\ntemp.menu2.wrap =<table border="0" cellpadding="0" cellspacing="0" width="100%">|</table>\r\ntemp.menu2.1 = TMENU\r\ntemp.menu2.1.NO {\r\n  allWrap = <tr>|</tr>\r\n  allWrap {\r\n    addParams.bgColor = {$menu2.bgColor}\r\n    preCObject = TEXT\r\n    preCObject.if.directReturn = {$menu2.topLine} || {$menu2.lineThickness}  |*||*| \r\n    preCObject.value = <tr bgcolor="{$menu2.lineColor}"><td colspan="4"><img src="clear.gif" width="1" height="{$menu2.lineThickness}" alt="" /></td></tr>\r\n    postCObject = TEXT\r\n    postCObject.if.directReturn = 0 |*||*| {$menu2.bottomLine}\r\n    postCObject.value = <tr bgcolor="{$menu2.lineColor}"><td colspan="4"><img src="clear.gif" width="1" height="{$menu2.lineThickness}" alt="" /></td></tr>\r\n  }\r\n\r\n  beforeImg = {$menu2.file.bullet_left}\r\n  beforeROImg = {$menu2.file.bullet_left_RO}\r\n  RO = {$menu2.file.bullet_left_RO}{$menu2.file.bullet_right_RO}\r\n  beforeWrap = <td>|</td><td width="99%">\r\n  ATagParams = class="menuitems2"\r\n  stdWrap2.wrapAlign= {$menu2.align}\r\n  afterImg = {$menu2.file.bullet_right}\r\n  afterROImg = {$menu2.file.bullet_right_RO}\r\n  afterWrap = </td><td>| </td><td><img src="clear.gif" width="1" height="{$menu2.itemHeight}" alt="" /></td>\r\n}\r\ntemp.menu2.1.ACT < temp.menu2.1.NO\r\ntemp.menu2.1.ACT = {$menu2.ACT}\r\ntemp.menu2.1.ACT {\r\n  allWrap.addParams.bgColor = {$menu2.ACT.bgColor}\r\n  beforeImg = {$menu2.ACT.file.bullet_left}\r\n  afterImg = {$menu2.ACT.file.bullet_right}\r\n  ATagParams = class="menuitems2ACT"\r\n}\r\n\r\n\r\n\r\n\r\n# Page object\r\n\r\npage = PAGE\r\npage.typeNum = 0\r\npage.bodyTag < styles.content.bodyTag\r\npage.bodyTagMargins=0\r\npage.bgImg = {$page.file.bgImg}\r\npage.headerData.20 = TEXT\r\npage.headerData.20.value (\r\n  <style type="text/css">\r\n  /*<![CDATA[*/\r\n  .menuitems1 {     {$menu1.NO.itemStyle} }\r\n  .menuitems2 {          {$menu2.NO.itemStyle}  }\r\n  .menuitems1ACT {     {$menu1.ACT.itemStyle} }\r\n  .menuitems2ACT {          {$menu2.ACT.itemStyle}  }\r\n\r\n   A.menuitems1:link { text-decoration: {$menu1.textDecor}; color: {$menu1.NO.itemLinkColor};}\r\n   A.menuitems1:visited {text-decoration: {$menu1.textDecor}; color: {$menu1.NO.itemLinkColor};}     \r\n   A.menuitems1:active {text-decoration: {$menu1.hoverTextDecor}; color: {$menu1.NO.itemLinkColorRO};}     \r\n   A.menuitems1:hover {text-decoration: {$menu1.hoverTextDecor}; color: {$menu1.NO.itemLinkColorRO};}\r\n\r\n   A.menuitems1ACT:link {text-decoration: {$menu1.textDecor}; color: {$menu1.ACT.itemLinkColor};}    \r\n   A.menuitems1ACT:visited {text-decoration: {$menu1.textDecor}; color: {$menu1.ACT.itemLinkColor};}     \r\n   A.menuitems1ACT:active {text-decoration: {$menu1.hoverTextDecor}; color: {$menu1.ACT.itemLinkColorRO};}     \r\n   A.menuitems1ACT:hover {text-decoration: {$menu1.hoverTextDecor}; color: {$menu1.ACT.itemLinkColorRO};}\r\n\r\n   A.menuitems2:link { text-decoration: {$menu2.textDecor}; color: {$menu2.NO.itemLinkColor};}\r\n   A.menuitems2:visited {text-decoration: {$menu2.textDecor}; color: {$menu2.NO.itemLinkColor};}     \r\n   A.menuitems2:active {text-decoration: {$menu2.hoverTextDecor}; color: {$menu2.NO.itemLinkColorRO};}     \r\n   A.menuitems2:hover {text-decoration: {$menu2.hoverTextDecor}; color: {$menu2.NO.itemLinkColorRO};}\r\n\r\n   A.menuitems2ACT:link {text-decoration: {$menu2.textDecor}; color: {$menu2.ACT.itemLinkColor};}    \r\n   A.menuitems2ACT:visited {text-decoration: {$menu2.textDecor}; color: {$menu2.ACT.itemLinkColor};}     \r\n   A.menuitems2ACT:active {text-decoration: {$menu2.hoverTextDecor}; color: {$menu2.ACT.itemLinkColorRO};}     \r\n   A.menuitems2ACT:hover {text-decoration: {$menu2.hoverTextDecor}; color: {$menu2.ACT.itemLinkColorRO};}\r\n   /*]]>*/\r\n  </style>\r\n)\r\n\r\npage.stdWrap {\r\n  offsetWrap = {$page.offset}\r\n  offsetWrap.stdWrap.wrapAlign = {$page.align}\r\n  offsetWrap.tdParams = valign="top"\r\n}\r\n\r\n# Starting big table:\r\npage.10 = HTML\r\npage.10.value = <table border="0" cellpadding="0" cellspacing="0" width="1">\r\npage.10.value {\r\n  addParams._offset = -1\r\n  addParams.bgColor = {$page.bgColors.wholeTableBgColor}\r\n  addParams.background = {$page.file.wholeTableBgImg}\r\n}\r\n\r\n# Menu column start:\r\npage.13 = HTML\r\npage.13.value = <tr><td valign="top">\r\npage.13.value {\r\n  if.directReturn = {$menuCol.enable}\r\n  addParams._offset = -1\r\n  addParams.bgColor = {$page.bgColors.menuBgColor}\r\n  addParams.background = {$page.file.menuBgImg}\r\n}\r\n\r\npage.15.stdWrap.if.directReturn = {$menuCol.enable}\r\npage.15 = COA\r\npage.15 {\r\n  10 = IMAGE\r\n  10.file = {$page.file.logoImg}\r\n  10.stdWrap.offsetWrap = 0,0\r\n  10.stdWrap.required=1\r\n  10.stdWrap.typolink.parameter.data = leveluid : 0\r\n\r\n  20 < temp.menu1\r\n\r\n  29 = LOAD_REGISTER\r\n  29.maxImageWidth = {$menuCol.maxImageWidth}\r\n  29.textStyle_face = {$menuCol.textStyle_face}\r\n  29.textStyle_size = {$menuCol.textStyle_size}\r\n  29.textStyle_color = {$menuCol.textStyle_color}\r\n  29.defaultHeaderType = {$menuCol.defaultHeaderType}\r\n  29.pageColor = {$page.bgColors.menuBgColor}\r\n  30 < styles.content.{$menuCol.borderContent}\r\n  30.stdWrap.offsetWrap = {$menuCol.offset}\r\n  31 = RESTORE_REGISTER\r\n}\r\n\r\n\r\n# Main column start:\r\npage.20 = HTML\r\npage.20.value = </td><td valign="top">\r\n\r\npage.25 = COA\r\npage.25 {\r\n  10 = HTML\r\n  10.value = <table border="0" cellpadding="0" cellspacing="0">\r\n\r\n    # Setting top image, if any\r\n  11 = COA\r\n  11.stdWrap.if.directReturn = {$page.file.topImg}\r\n  11.10=HTML\r\n  11.10.value = <tr><td colspan="4">\r\n  11.15 = IMAGE\r\n  11.15.file = {$page.file.topImg}\r\n  11.15.file.import = uploads/media/\r\n  11.15.file.import.data = levelmedia : -1, slide\r\n  11.15.file.import.listNum=0\r\n  11.20 = HTML\r\n  11.20.value = </td></tr>\r\n\r\n    # Setting topimage to content distance, if any\r\n  13 = COA\r\n  13.stdWrap.if.directReturn = {$page.topImgToContentDist}\r\n  13.10=HTML\r\n  13.10.value = <tr><td colspan="4">\r\n  13.15 = CLEARGIF\r\n  13.15.height = {$page.topImgToContentDist}\r\n  13.20 = HTML\r\n  13.20.value = </td></tr>\r\n\r\n\r\n    # starting row for normal and right content \r\n  14 = HTML\r\n  14.value = <tr><td>\r\n\r\n    # margin\r\n  15 = CLEARGIF\r\n  15.width = {$page.contentMarginLeft}\r\n  15.height = {$pageCol.page.height}\r\n\r\n    # Normal content column\r\n  20 = HTML\r\n  20.value = </td><td valign="top">\r\n  20.value.addParams._offset = -1\r\n  20.value.addParams.bgColor = {$page.bgColors.normalBgColor}\r\n  20.value.addParams.background = {$page.file.normalBgImg}\r\n\r\n  25 = COA \r\n  25.stdWrap.offsetWrap = {$pageCol.page.contentOffset}\r\n  25.5 = CLEARGIF\r\n  25.5.width = {$pageCol.page.width}\r\n  25.7 <  styles.content.editPanelPage\r\n  25.9 = LOAD_REGISTER\r\n  25.9.maxImageWidth = {$pageCol.maxImageWidth}\r\n  25.9.pageColor = {$page.bgColors.normalBgColor}\r\n  25.10 < styles.content.get\r\n  25.11 = RESTORE_REGISTER\r\n  25.20  < styles.content.lastUpdate\r\n  25.30 < styles.content.typo3_powered\r\n\r\n    # right margin\r\n  30 = HTML\r\n  30.value = </td><td valign="top">\r\n\r\n  35 = CLEARGIF\r\n  35.width = {$page.contentMarginRight}\r\n\r\n    # right content column\r\n  40 = HTML\r\n  40.value = </td><td valign="top">\r\n  40.value.addParams._offset = -1\r\n  40.value.addParams.bgColor = {$page.bgColors.rightBgColor}\r\n  40.value.addParams.background = {$page.file.rightBgImg}\r\n\r\n  43 = IMAGE\r\n  43.file = {$page.file.marginLogoImg}\r\n  43.stdWrap.wrap = |<br />\r\n  43.stdWrap.offsetWrap = 0,0\r\n  43.stdWrap.required=1\r\n  43.stdWrap.if.directReturn = {$rightCol.enable}\r\n\r\n  45 = COA \r\n  45.stdWrap.if.directReturn = {$rightCol.enable}\r\n  45.stdWrap.offsetWrap = {$rightCol.offset}\r\n  45.5 = CLEARGIF\r\n  45.5.width = {$rightCol.maxImageWidth}\r\n  45.7 < temp.menu2\r\n  45.9 = LOAD_REGISTER\r\n  45.9.maxImageWidth = {$rightCol.maxImageWidth}\r\n  45.9.textStyle_face = {$rightCol.textStyle_face}\r\n  45.9.textStyle_size = {$rightCol.textStyle_size}\r\n  45.9.textStyle_color = {$rightCol.textStyle_color}\r\n  45.9.defaultHeaderType = {$rightCol.defaultHeaderType}\r\n  45.9.pageColor = {$page.bgColors.rightBgColor}\r\n  45.10 < styles.content.{$rightCol.borderContent}\r\n  45.10.select.pidInList = {$rightCol.getNewsPid}\r\n  45.11 = RESTORE_REGISTER\r\n\r\n    # end\r\n  50 = HTML\r\n  50.value = </td></tr></table>\r\n}\r\n\r\n# end\r\npage.30 = HTML\r\npage.30.value = </td></tr></table><br />\r\n\r\n\r\n\r\n# Configuration\r\nconfig.extTarget = _blank\r\nconfig.compensateFieldWidth = 0.7\r\n\r\npage.config.admPanel = 1\r\nconfig.intTarget = {$PAGE_TARGET}\r\npage.headerData.999 < plugin.meta\r\n\r\n', '');


